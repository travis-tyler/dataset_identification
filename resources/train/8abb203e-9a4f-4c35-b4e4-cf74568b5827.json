[{"section_title": "Abstract", "text": "Recent studies have shown that Alzheimer's disease (AD) is related to alteration in brain connectivity networks. One type of connectivity, called effective connectivity, defined as the directional relationship between brain regions, is essential to brain function. However, there have been few studies on modeling the effective connectivity of AD and characterizing its difference from normal controls (NC). In this paper, we investigate the sparse Bayesian Network (BN) for effective connectivity modeling. Specifically, we propose a novel formulation for the structure learning of BNs, which involves one L1-norm penalty term to impose sparsity and another penalty to ensure the learned BN to be a directed acyclic graph -a required property of BNs. We show, through both theoretical analysis and extensive experiments on eleven moderate and large benchmark networks with various sample sizes, that the proposed method has much improved learning accuracy and scalability compared with ten competing algorithms. We apply the proposed method to FDG-PET images of 42 AD and 67 NC subjects, and identify the effective connectivity models for AD and NC, respectively. Our study reveals that the effective connectivity of AD is different from that of NC in many ways, including the global-scale effective connectivity, intra-lobe, interlobe, and inter-hemispheric effective connectivity distributions, as well as the effective connectivity associated with specific brain regions. These findings are consistent with known pathology and clinical progression of AD, and will contribute to AD knowledge discovery."}, {"section_title": "INTRODUCTION", "text": "Alzheimer's disease (AD) is the most common cause of dementia and the fifth leading cause of death in people over 65 in the US. The current annual cost of AD care in the U.S. is more than $100 billion, which will continue to grow fast. The existing knowledge about the cause of AD is very limited. Clinical diagnosis is imprecise with a definite diagnosis only possible by autopsy. Also, there is currently no cure for AD, while most drugs only modestly alleviate symptoms. To tackle these challenging issues in AD studies, fast advancing neuroimaging techniques hold great promise. Recent studies have shown that neuroimaging can provide sensitive and reliable measures of AD onset and progression, which can complement the conventional clinical-based assessments and cognitive measures.\nIn neuroimaging-based AD research, one important area is brain connectivity modeling, i.e., identification of how different brain regions interact to produce a cognitive function in AD, compared with normal aging. Research in this area can substantially promote AD knowledge discovery and identification of novel connectivity-based AD biomarkers to be used in clinical practice. There are two types of connectivity being studied: functional connectivity refers to the covarying pattern of different brain regions; effective connectivity refers to the directional relationship between regions [1] .\nA vast majority of the existing research focuses on functional connectivity modeling. Various methods have been adopted such as correlation analysis [2] , Principal Component Analysis (PCA) [3] , PCA-based Scaled Subprofile Model [4] , Independent Component Analysis [5] , and Partial Least Squares [6] . Recently, sparse models have also been introduced, such as sparse multivariate or vector autoregressions [7] and sparse inverse covariance estimation [8] . Sparse models have shown great effectiveness because neuroimaging datasets are featured by \"small n large p\", i.e., the number of AD patients (n) can be close to or less than the number of brain regions modeled (p). Also, many past studies based on anatomical brain databases have shown that the true brain network is indeed sparse [9] .\nCompared with functional connectivity modeling, effective connectivity modeling has the advantage of helping identify the pathway/mechanism whereby distinct brain regions communicate with each other. However, the existing research in effective connectivity modeling is much less extensive. Models that have been adopted include structural equation models [10] and dynamic causal models [11] . The limitations of these models include (i) they are confirmative, rather than Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. KDD '11, August 21-24, 2011 , San Diego, California, USA. Copyright 2011 ACM 978-1-4503-0813-7/11/08...$10.00. explanatory, i.e., they require a prior model of connectivity to start with; (ii) they require a substantially larger sample size than the number of regions modeled; a typical number of regions included is less than 10 given the sample size limit. These limitations make them inappropriate for AD connectivity modeling, because there is little prior knowledge of which regions should be included and how they are connected.\nWe propose sparse Bayesian Networks (BN) for effective connectivity modeling. A BN is an explanatory model and the sparse estimation makes it possible to include a large number of brain regions. In a BN representation of effective connectivity, the nodes are brain regions. A directed arc from node to ( is called a parent of ) indicates a direct influence from to . Sparsity consideration has been common in the BN learning literature. For example, some early work used score functions, such as BIC and MDL, to measure the goodness-of-fit of a BN, in which a penalty term on the model complexity is usually included in the score [12] . Recently, driven by modern applications such as genetics, learning of large-scale BNs has been very popular, in which sparsity consideration is indispensible. The Sparse Candidate (SC) algorithm [13] , one of the first BN structure learning algorithms to be applied to a large number of variables, assumes that the maximum number of parents for each node is limited to a small constant. The L1MB-DAG algorithm developed in [14] uses LASSO [15] to identify a small set of potential parents for each variable. Some other algorithms, such as the Max-Min Hill-Climbing (MMHC) [16] , GrowShrink [17] , TC and TC_bw [18] , all follow the same line. Most of these existing algorithms employ a two-stage approach: Stage 1 is to identify the potential parents of each variable; Stage 2 usually applies some heuristic search algorithms (e.g., hill-climbing) or orientation methods (e.g., Meek's rules [19] ) to identify the parents out of the potential parent set. An apparent weakness of the two-stage approach is that if a true parent is missed in Stage 1, it will never be recovered in Stage 2. Another weakness of the existing algorithms is computational efficiency, i.e., it may take hours or days to learn a large-scale BN such as one with 500 nodes.\nIn this paper, we propose a new sparse BN learning algorithm, which is called SBN. It is a one-stage approach that identifies the parents of all variables directly. The main contributions of this paper include:"}, {"section_title": "\uf0b7", "text": "We propose a novel sparse BN learning algorithm, i.e., SBN, using one L1-norm penalty term to impose sparsity and another penalty term to ensure the learned BN is a directed acyclic graph (DAG).\nWe present theoretical guidance on how to select the regularization parameter associated with the second penalty.\nWe perform theoretical analysis to reason why the two-stage approach popularly adopted in the existing literature has a high risk of failing to identify the true parents. Also, we conduct extensive experiments on synthetic data to compare SBN and the existing algorithms in terms of the learning accuracy and scalability.\nWe apply SBN to FDG-PET data of 42 AD patients and 67 normal controls (NC) subjects enrolled in the ADNI (Alzheimer's Disease Neuroimaging Initiative) project, and identify the effective connectivity models for AD and NC.\nOur study reveals that the effective connectivity of AD is different from NC in many ways, including the global-scale effective connectivity, intra-lobe, inter-lobe, and interhemisphere effective connectivity distributions, as well as the effective connectivity associated with specific brain regions. The findings are consistent with known pathology and clinical progression of AD."}, {"section_title": "BAYESIAN NETWORK: KEY DEFINITIONS AND CONCEPTS", "text": "This section introduces the key definitions and concepts of BNs that are relevant to this paper:\nA BN is composed of a structure and a set of parameters. The structure (Fig. 1) is a set of variables given which will be independent of all other variables. The MB includes the parents, children, and spouses of .\nIn this paper, we use the following notations with respect to a BN structure: Denote the structure by a matrix , with entry 1 representing a directed arc from to . The set of parents of a node is denoted by , \u2026 , . In addition, we define a matrix, , which records all the directed paths in the structure, i.e., if there is a directed path from to , entry 1; otherwise, 0.\nIn addition to the structure, other important components of a BN are the parameters. The parameters are the conditional probability distribution of each node given its parents. Specifically, when the nodes follow a multivariate Gaussian distribution, a regressiontype parameterization can be adopted, i.e., with ~ 0, and , , . Then, the parameters of a BN are , \u2026 , . Without loss of generality, we assume that the nodes are standardized, i.e., each with a zero mean and unit variance. This means, if using , \u2026 , to denote the sample vector for , and to denote the sample size, we have \u2211 0 and 1 ."}, {"section_title": "THE PROPOSED SPARSE BN STRUCTURE LEARNING ALGORITHM", "text": "One of the challenging issues in BN structure learning is to ensure that the learned structure must be a DAG, i.e., no cycle is present. To achieve this, we first identify a sufficient and necessary condition for a DAG, which is given as Lemma 1 below."}, {"section_title": "Lemma 1. A sufficient and necessary condition for a DAG is 0 for every pair of nodes and .", "text": "Proof. To prove the necessary condition, suppose that a BN structure, Input: sample matrix, ;\n, ; initial ; Initialize: Let 0; Repeat For 1,2, \u2026 , A Breadth-first search on with being the root node to calculate for 1, \u2026 , . Use the shooting algorithm to optimize and get ; End for Until converge , is a DAG. Let's assume that 0 for a pair of nodes and . Then, there exists a directed path from to and a directed path from to , i.e., there is a cycle in , which is a contradiction to our presumption that is a DAG. To prove the sufficient condition, suppose that 0 for every pair of nodes and . If is not a DAG, i.e., there is a cycle, it means that there exist two variables, and , with a directed arc from to ( 0) and a directed path from to ( 1) . This contradicts with our assumption that 0 for every pair of nodes and . \u25a1\nBased on Lemma 1, we further present our formulation of the sparse BN structure learning. It is an optimization problem with the objective function and constraints given by:\n(1)\nThe notations are explained as follows: , \u2026 , denotes the sample vector for , where n is the sample size. / denotes the sample matrix for all the variables except .The first term in the\n, is a profile likelihood to measure the model fit. The second term, , is the sum of the absolute values of the elements in and thus is the socalled L1-norm penalty [15] . The regularization parameter, , controls the number of nonzero elements in the solution to , ; larger , less nonzero elements. Because less nonzero elements in correspond to fewer arcs in the learned BN structure, a larger results in a sparser structure. In addition, the constraints are to assure that the learned BN is a DAG (see Lemma 1 and Theorem 1 below). We remark that these constraints are functions of only , since expm [20] . Here, expm is the matrix exponential of .\nSolving the constrained optimization in (1) is difficult. Therefore, the penalty method [21] is employed to transform it into an unconstrained optimization problem, through adding an extra L1-norm penalty into the original objective function, i.e., "}, {"section_title": "0.\u25a1", "text": "Theorem 1 implies that if we specify any 1 \u2044 , we will get a minimizer of (1) through solving (2) . However, in practice, directly solving (2) by specifying a large may converge slowly. This is because that the unconstrained problem in (2) may be ill-conditioned with a too large value for [40] . To avoid this, the \"warm start\" method [21] can be used, which works in the following way: first, it specifies a series of values for , i.e.,\n, where is small and 1 \u2044 ; next, it optimizes (2) with to get a minimizer , using an arbitrary initial value; then, it optimizes (2) with , using as an initial value; this process iterates, until it optimizes (2) with . With the last minimizer as the initial value for the next optimization problem, this method can be quite efficient.\nGiven and , the BCD algorithm [22] can be employed to solve (2) . The BCD algorithm updates each iteratively, assuming that all other parameters are fixed. In our situation, this is equivalent to optimizing iteratively and the algorithm will terminate when some convergence conditions are satisfied. We remark that , after some transformation, is similar to LASSO [15] , i.e., / / \u2211 / .\nAs a result, the shooting algorithm [23] for LASSO may be used to optimize in each iteration. Note that at each iteration for optimizing , we also need to calculate for / . This can be done by a Breadth-first search on with being the root node. A more detailed description of the BCD algorithm used to solve (2) is given in Figure 2 . Finally, we want to mention that the L2-norm penalty, \u2211 / , might also be used in (2) . The advantage is that it is a differentiable function of . Also, as shown in [21] , 0 when \u221e. However, the limitation of the L2-norm penalty, compared with the L1-norm penalty, is that there is no guarantee that a finite exists to assure 0 for all pairs of and .\nTime complexity analysis of the proposed algorithm: Each iteration of the BCD algorithm consists of two operations: a shooting algorithm and a Breadth-first search on . These two operations cost [24] and | | , respectively. Here | | is the number of nonzero elements in . If is sparse, i.e., | | with a small constant , | | . Thus, the computational cost at each iteration is only . Furthermore, each sweep through all columns of costs . Our simulation study shows that it usually takes no more than 5 sweeps to converge."}, {"section_title": "THEORETICAL ANALYSIS OF THE COMPETITIVE ADVANTAGE OF THE PROPOSED SBN ALGORITHM", "text": "Simulation studies in Sec. 5 will show that SBN is more accurate than various existing algorithms that employ a two-stage approach. This section aims to provide some theoretical insights about why it is so. Recall that Stage 1 of the two-stage approach is to identify potential parents of each variable . The existing algorithms achieve this by identifying the MB of . A typical way is variable selection based on regression, i.e., to build a regression of on all other variables and consider the variables selected to be the MB. The key differences between various algorithms are the type of regression used and the method in variable selection. For example, the TC algorithm [18] uses ordinary regression and a t-test for variable selection; the L1MB-DAG algorithm [14] uses LASSO.\nIn the regression of , the coefficients for the variables that are not in the MB will be small (theoretically zero due to the definition of MB). However, the coefficients for the parents may also be very small due to the correlation between the parents and children. As a result, some parents may not be selected in the variable selection, i.e., they will be missed in Stage 1 of the twostage approach, leading to greater BN learning errors. In contrast, the SBN may not suffer from this, because it is a one-stage approach that identifies the parents directly.\nTo further illustrate this point, we analyze one two-stage algorithm, the TC algorithm. TC does variable selection using a ttest. To determine whether a variable should be selected, a t-test uses the statistic \u2044 , where is the estimate for the regression coefficient of this variable and is the standard error. The larger the \u2044 , the higher chance the variable will be selected. Theorems 2 and 3 below show that even though the value of \u2044 corresponding to a parent of is large in the true BN, its value may decrease drastically in the regression of on all other variables. Theorem 2 focuses on a specific type of BNs, a general tree, in which all variables have one common ancestor and there is at most one directed path between two variables. Theorem 3 focuses on a general inverse tree, which becomes a general tree if all the arcs are reversed. The proof of Theorem 2 can be found in the Appendix. The proof of Theorem 3 is not shown here due to space limitations. , , Note that these theorems derive the relationship between ( ) and ( \u2044 ) at the population-level (i.e., sampling error is not considered), so they use the notation \" \" not \" \"."}, {"section_title": "SIMULATION STUDIES ON SYNTHETIC DATA", "text": "We show four sets of simulations. The first one is to show that, on a general tree, the existing algorithms based on the two-stage approach may miss some true parents with high probabilities, while the proposed SBN performs well. The second simulation is to compare the structure learning accuracy of SBN with other competing algorithms, on benchmark networks. The third and fourth simulations are to investigate the scalability of SBN and compare it with other competing algorithms."}, {"section_title": "Learning accuracy for general tree", "text": "Ten existing algorithms are selected: HITON-PC [25] , IAMB and three of its variants [26] , GS [17] , SC [13] , TC and its advanced version TC-bw [18] , and L1MB [14] . We simulate data from the general tree in Figure 3 (a) with a sample size of 200.\nWe apply the selected algorithms on the simulated data; the parameters of each algorithm are selected in the way that the authors have suggested in their papers, respectively. In applying the proposed SBN, is selected by BIC; is set to be 10 1 \u2044 which empirically guarantees a DAG to be learned. The initial value of SBN is the output of L1MB which uses LASSO in Stage 1 to identify the MB for each variable. We treat the identified MB by L1MB as parents and use the resulting \"BN\" (not necessarily a DAG) as the initial value for SBN. The results over 100 repetitions are shown in Figure 3(b) . The X-axis records the 10 selected algorithms and the proposed SBN (the last one). The Y-axis records the frequency of a true arc being identified. Each color bar corresponds to a true arc indicated in the legend. Six true arcs are shown, i.e., the arcs between and , 2, ,7. Because is the parent of , the Y-axis actually shows how well the parent of can be identified by each of the algorithms. Figure 3 (b) shows that, SBN performs much better than all others. This can be explained by Theorem 1. Specifically, the MB of includes and six children. Although the coefficient linking to is as high as 0.3, this coefficient in the regression that regresses on its MB reduces to 0.028, due to the inclusion of the children in the regression. As a result, will have a high probability of being excluded from the MB identified in Stage 1 of the existing algorithms."}, {"section_title": "Learning accuracy for Benchmark networks", "text": "We select seven moderately large networks from BNR [27] . We also use the tiling technique to produce two large BNs, alarm2 and hailfinder2. Two other networks with specific structures, factor and chain, are also considered. The 11 networks are: (number of nodes/edges): 1. factors (27/68), 2. alarm (37/46), 3. barley (48/84), 4. carpo (61/74), 5. chain(7/6), 6. hailfinder (56/66), 7. insurance (27/52), 8. mildew (35/46), 9. water (32/66), 10. alarm2 (296/410), 11. hailfinder2 (280/390). To specify the parameters of a network, i.e., to specify the regression coefficients of each variable on its parents, we randomly sample from 1 0,1/16 . Then, we simulate data from the networks with sample size 100, and apply the 10 algorithms to learn the BN structures. The results over 100 repetitions are shown in Figure  3(c) . The X-axis records the 11 networks. The Y-axis records the ratio of the total learning error (false positives plus false negatives) to the number of arcs in the true BN. Each curve corresponds to one of the 11 algorithms under comparison. We can observe that the lowest curve (i.e., best performance) is SBN."}, {"section_title": "Scalability", "text": "We study two aspects of scalability for SBN: the scalability with respect to the number of variables in a BN, , and the scalability with respect to the sample size, . We use the CPU time for each sweep through all the columns of as the parameter for measurement. Specifically, we fix =1000, and vary by using the 11 benchmark networks. Also, we fix =37 (the Alarm network). The results over 100 repetitions are shown in Figure 4 (a) and (b), respectively. It can be seen that the computational cost is linear in and quadratic in , which confirms our theoretical time complexity analysis in Section 3. "}, {"section_title": "BRAIN EFFECTIVE CONNECTIVITY MODELING OF AD BY SBN", "text": "FDG-PET baseline images of 49 AD and 67 normal control (NC) subjects from the ADNI project (www.loni.ucla.edu/ADNI) were used in this study. After spatially normalizing the images to the Montreal Neurological Institute (MNI) template coordinate space, average PET counts were extracted from the 116 brain anatomical regions of interest (AVOIs) defined by the Automated Anatomical Labeling [28] technique. We then selected 42 AVOIs that are considered to be potentially relevant to AD, as reported in the literature. Each of the 42 AVOIs became a node in the SBN. Please see Table 2 for the name of each AVOI brain region. These regions are distributed in the four major neocortical lobes of the brain, i.e., the frontal, parietal, occipital, and temporal lobes.\nWe apply SBN to learn a BN for AD and another one for NC, to represent their respective effective connectivity models. In the learning of an AD (or NC) effective connectivity model, the value for needs to be selected. In this paper, we adopt two criteria in selecting : one is to minimize the prediction error of the model and the other is to minimize the BIC. Both criteria have been popularly adopted in sparse learning [12, 14, 15] . The two criteria lead to similar findings discovered from the effective connectivity models, so only the results based on the minimum prediction error are shown in this section. Specifically, Figure 6 shows the effective connectivity models for AD and NC. Each model is represented by a \"matrix\". Each row/column is one AVOI, . A black cell at the i-th row and j-th column of the matrix represents that is a parent of . On each matrix, four red squares are used to highlight the four lobes, i.e., the frontal, parietal, occipital, and temporal lobes, from top-left to bottom-right. The black cells inside each red square reflect intra-lobe effective connectivity, whereas the black cells outside the squares reflect inter-lobe effective connectivity. The following interesting observations can be drawn from the effective connectivity models:"}, {"section_title": "Global-scale effective connectivity:", "text": "The total number of arcs in a BN connectivity model, equal to the number of black cells in a matrix plot in Figure 6 , represents the amount of effective connectivity (i.e., the amount of directional information flow) in the whole brain. This number is 285 and 329 for AD and NC, respectively. In other words, AD has 13.4% less effective connectivity than NC. Loss of connectivity in AD has been widely reported in the literature [34, [38] [39] [40] ."}, {"section_title": "Intra-/inter-lobe effective connectivity distribution:", "text": "Aside from having different amounts of effective connectivity at the global scale, AD may also have a different distribution pattern of connectivity across the brain from NC. Therefore, we count the number of arcs in each of the four lobes and between each pair of lobes in the AD and NC effective connectivity models. The results are summarized in Table 3 . It can be seen that the temporal lobe of AD has 22.9% less effective connectivity than NC. The decrease in connectivity in the temporal lobe of AD has been extensively reported in the literature [29, 2, 30] . The interpretation may be that AD is featured by a dramatic cognitive decline and the temporal lobe is responsible for delivering memory and other cognitive functions. As a result, the temporal lobe is affected early and severely by AD and the connectivity network in this lobe is severely disrupted. On the other hand, the frontal lobe of AD has 27.6% more connectivity than NC. This has been interpreted as compensatory reallocation or recruitment of cognitive resources [29] [30] [31] [32] . Because the regions in the frontal lobe are typically affected later in the course of AD (our data are mild to moderate AD), the increased connectivity in the frontal lobe may help preserve some cognitive functions in AD patients. In addition, AD shows a decrease in the amount of effective connectivity in the parietal lobe which has also been reported to be affected by AD. There is no significant difference between AD and NC in the occipital lobe. This is reasonable because the occipital lobe is primarily involved in the brain's visual function which is not affected by AD. Table 3 . Intra -and inter -lobe effective connectivity amounts\nFurthermore, the most significant reduction in inter-lobe connectivity in AD is found between the frontal and temporal lobes, i.e., AD has 29.5% less effective connectivity than NC. This may be attributed to the temporal lobe disruption of the default mode network in AD [34] ."}, {"section_title": "Direction of local effective connectivity:", "text": "One advantage of BNs over undirected graphical models in brain connectivity modeling is that the directed arcs in a BN reflect directional effect of one region over another, i.e., the effective connectivity. Specifically, if there is a directed arc from brain regions to , it indicates that takes a dominant role in the communication with . The connectivity modes in Figure 6 reveal a number of interesting findings in this regard:\n(i) There are substantially fewer black cells in the area defined by rows 27-42 and columns 1-26 in AD than NC. Recall that rows 27-42 correspond to regions in the temporal lobe. Thus, this pattern indicates a substantial reduction in arcs pointing from temporal regions to the other regions in the AD brain, i.e., temporal regions lose their dominating roles in communicating information with the other regions as a result of AD. The loss is most severe in the communication from temporal to frontal regions.\n(ii) Rows 31 and 35, corresponding to brain regions \"Temporal_Mid_L\" and \"Temporal_Inf_L\", respectively, are among the rows with the largest number of black cells in NC, i.e., these two regions take a significantly dominant role in communicating with other regions in normal brains. However, the dominancy of the two regions is substantially reduced by 34.8% and 36.8%, respectively, in AD. A possible interpretation is that these are neocortical regions associated with amyloid deposition and early FDG hypometabolism in AD [34] [35] [36] [37] [41] [42] .\n(iii) Columns 39 and 40 correspond to regions \"Hippocampus_L\" and \"Hippocampus_R\", respectively. There are a total of 33 black cells in these two columns in NC, i.e., 33 other regions dominantly communicate information with the hippocampus. However, this number reduces to 22 (33.3% reduction) in AD.\nThe reduction is more severe in Hippocampus_L (50%). The hippocampus is well known to play a prominent role in making new memories and in recall. It has been widely reported that the hippocampus is affected early in the course of AD, leading to memory loss -the most common symptom of AD.\n(iv) There are a total of 93 arcs pointing from the left hemisphere to the right hemisphere of the brain in NC; this number reduces to 71 (23.7% reduction) in AD. The number of arcs from the right hemisphere to the left hemisphere in AD is close to that in NC. This provides evidence that AD may be associated with interhemispheric disconnection and the disconnection is mostly unilateral, which has also been reported by some other papers [43] [44] ."}, {"section_title": "CONCLUSION", "text": "In this paper, we proposed a BN structure learning algorithm, called SBN, for identifying effective connectivity of AD from FDG-PET data. SBN adopted a novel formulation that involves one L1-norm penalty term to impose sparsity on the learning and another penalty to ensure the learned BN to be a DAG. We performed theoretical analysis on the competitive advantage of SBN over the existing algorithms in terms of learning accuracy. Our analysis showed that the existing algorithms employ a twostage approach in BN structure identification, which makes them have a high risk of failing to identify the parents of each variable. Also, we performed theoretical analysis on the time complexity of SBN, which showed that it is linear in the sample size and quadratic in the number of variables. Furthermore, we conducted experiments to compare SBN with 10 competing algorithms and found that SBN has significantly better performance in learning accuracy.\nWe applied SBN to identify the effective connectivity models of AD and NC from PDG-PET data, and found that the effective connectivity of AD is different from NC in many ways. Clinically, our findings may provide an additional tool for monitoring disease progress, evaluating treatment effects, and enabling early detection of network disconnection in prodromal AD. Future studies may be conducted to verify the statistical significance of the identified effective connectivity difference between AD and NC, and estimate the strength of the directed arcs identified by SBN to help improve the sensitivity and specificity of the effective connectivity models. Finally, although this paper focuses on the structure learning of Gaussian BNs, the same formulation can be adopted to discrete BNs, which will be explored in our future research.\nwhere is the entry at the 1 st row and j th column of . \n(1 )"}]