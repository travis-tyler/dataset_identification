[{"section_title": "Abstract", "text": "Hierarchical Latent Attribute Models (HLAMs) are a popular family of discrete latent variable models widely used in social and biological sciences. The key ingredients of an HLAM include a binary structural matrix specifying how the observed variables depend on the latent attributes, and also certain hierarchical constraints on allowable configurations of the latent attributes. This paper studies the theoretical identifiability issue and the practical estimation problem of HLAMs. For identification, the challenging problem of identifiability under a complex hierarchy is addressed and sufficient and almost necessary identification conditions are proposed. For estimation, a scalable algorithm for estimating both the structural matrix and the attribute hierarchy is developed. The superior performance of the proposed algorithm is demonstrated in various experimental settings, including both synthetic data and a real dataset from an international educational assessment."}, {"section_title": "Introduction", "text": "Hierarchical Latent Attribute Models (HLAMs) are a popular family of discrete latent variable models widely used in multiple scientific disciplines, including cognitive diagnosis in educational assessments [25, 37, 20, 33, 12] , psychiatric diagnosis of mental disorders [36, 13] , and epidemiological and medical measurement studies [39, 38] . Based on subjects' responses (often binary) to a set of items, HLAMs enable fine-grained inference on subjects' statuses of an underlying set of discrete latent attributes; and further allow for clustering the population into subgroups based on the inferred attribute patterns. In HLAMs, each latent attribute is often assumed binary and carries specific scientific meaning. For example, in an educational assessment, the observed responses are students' correct or wrong answers to a set of test items, and the latent attributes indicate students' binary states of mastery or deficiency of certain cognitive abilities measured by the assessment [25, 37, 33] .\nHLAMs have connections to other multivariate discrete latent variable models, including latent tree graphical models [11, 2, 24, 30] , restricted Boltzmann machines [21, 22, 34, 26, 23] and restricted Boltzmann forests (RBForests) [27] , and latent feature models [15, 7, 29, 43 ], but with the following two key differences. First, the observed variables are assumed to have certain structured dependence on the latent attributes. This dependence is summarized by a binary structural matrix to encode scientific interpretations. The second key feature is that HLAMs incorporate the hierarchical structure among the latent attributes. For instance, in cognitive diagnosis, the possession of certain attributes are often assumed to be the prerequisite for possessing some others [28, 35] . Such hierarchical structures differ from the latent tree models in that, the latter use a probabilistic graphical model to model the hierarchical tree structure among latent variables, while in an HLAM the hierarchy is a directed acyclic graph (DAG) encoding hard constraints on allowable configurations of latent attributes. This type of hierarchical constraints in HLAMs have a similar flavor as those of RBForests proposed in [27] , though the DAG-structure constraints in an HLAM are more flexible than a forest-structure (i.e., group of trees) one in an RBForest (see Example 1) .\nOne major issue in the applications of HLAMs is that, the structural matrix and the attribute hierarchy often suffer from potential misspecification by domain experts in confirmatory-type applications, or even entirely unknown in exploratory-type applications. A key question is then how to efficiently learn both the structural matrix and the attribute hierarchy from noisy observations. More fundamentally, it is an important yet open question whether and when the latent structural matrix and the attribute hierarchy are identifiable. Identifiability of HLAMs has a close connection to the uniqueness of tensor decompositions as the probability distribution of an HLAM can be written as a mixture of higher-order tensors. In particular, HLAMs can be viewed as a special family of restricted latent class models, with the binary structural matrix imposing constraints on the model parameters. However, related works on identifiability of latent class models and uniqueness of tensor decompositions, such as [1, 3, 4, 8] , cannot be directly applied to HLAMs due to the constraints induced by the structural matrix. To tackle identifiability under such structural constraints, [42, 40, 41, 18, 16, 17] recently proposed identifiability conditions for latent attribute models. However, [42, 40, 41, 18] considered latent attribute models without any attribute hierarchy; [16] assumed both the structural matrix and true configurations of attribute patterns are known a priori; [17] considered the problem of learning the set of truly existing attribute patterns but assumed the structural matrix is correctly specified beforehand. Establishing identifiability without assuming any knowledge of the structural matrix and the attribute hierarchy is a technically much more challenging task and still remains unaddressed in the literature. Moreover, computationally, the existing methods for learning latent attribute models [10, 41, 17] could not simultaneously estimate the structural matrix and the attribute hierarchy. This paper has two main contributions. First, we address the challenging identifiability issue of HLAMs. We develop sufficient and almost necessary conditions for identifying the attribute hierarchy, the structural matrix, and the related model parameters in an HLAM. Second, we develop a scalable algorithm to estimate the latent structure and attribute hierarchy of an HLAM. Specifically, we propose a novel approach to simultaneously estimating the structural matrix and performing dimension reduction of attribute patterns. The superior performance of the proposed algorithm is demonstrated in various settings of synthetic data and an application to an educational assessment dataset."}, {"section_title": "Model Setup", "text": "This section introduces the model setup of HLAMs in details. We first introduce some notations. An HLAM consists of two types of subject-specific binary variables, the observed responses r = (r 1 , . . . , r J ) \u2208 {0, 1} J to J items; and the latent attribute pattern \u03b1 = (\u03b1 1 , . . . , \u03b1 K ) \u2208 {0, 1} K . First consider the latent attributes. Attribute \u03b1 k is said to be the prerequisite of \u03b1 and denoted by \u03b1 k \u2192 \u03b1 (or k \u2192 ), if any \u03b1 with \u03b1 k = 0 and \u03b1 = 1 is \"forbidden\" to exist. This is a common assumption in applications such as cognitive diagnosis [28, 35] . A subject's latent pattern a is assumed to follow a categorical distribution of population proportion parameters (p \u03b1 , \u03b1 \u2208 {0, 1} K ), with p \u03b1 \u2265 0 and \u03b1 p \u03b1 = 1. In particular, any pattern \u03b1 not respecting the hierarchy is deemed impossible to exist with population proportion p \u03b1 = 0. An attribute hierarchy is a set of prerequisite relations between the K attributes, which we denote by E = {k \u2192 : attribute k is a prerequisite for }. Any hierarchy E would induce a set of allowable configurations of attribute patterns, which we denote by A. The set A is a proper subset of {0, 1}\nK if E = \u2205. So an attribute hierarchy determines the sparsity pattern of the vector of proportion parameters p. Example 1. Figure 1 presents several hierarchies with the size of the associated A, where a dotted arrow from \u03b1 k to \u03b1 indicates k \u2192 . The attribute hierarchy in an HLAM is a DAG generally. In the literature, the RBForests proposed in [27] also introduce hard constraints on allowable configurations of the binary hidden (latent) variables in a restricted Boltzmann machine (RBM). The modeling goal of RBForests is to make computing the probability mass function of observed variables tractable, while not having to limit the number of latent variables. Specifically, in an RBForest, latent variables are grouped in several full and complete binary trees of a certain depth, with variables in a tree respecting the following constraints: if a latent variable takes value zero with \u03b1 i = 0, then all latent variables in its left subtree must take value d l ; while if \u03b1 i = 1, all latent variables in its right subtree must take value d r (d l = d r = 0 in the paper [27] ). The attribute hierarchy model in an HLAM has a similar spirit to RBForests, and actually includes the RBForests as a special case. For instance, the hierarchy in Figure 1 (d) is equivalent to a tree of depth 3 in an RBForest with d l = 1 \u2212 d r = 0. HLAMs allow for more general attribute hierarchies to encourage better interpretability. Another key difference between HLAMs and RBForests is the different joint model of the observed variables and the latent ones. An RBForest is an extension of an RBM, and they both use the same energy function, while HLAMs model the distribution differently, as to be specified below. Figure 1 : Different attribute hierarchies among binary attributes, the first three for K = 4 (where |{0, 1} 4 | = 16) and the last for K = 7 (where |{0, 1} 7 | = 128). For example, the set of allowed attribute patterns under hierarchy (a) is A 1 = {(0000), (1000), (1100), (1001), (1101), (1111)}.\n(a) binary structural matrix (b) graphical model along with attribute hierarchy Figure 2 : A binary structural matrix and the corresponding graphical model with directed edges from the latent to the observed variables representing dependencies. Below the observed variables in (b) are the row vectors of Q 6\u00d73 , i.e., the item loading vectors. There is E = {1 \u2192 2, 1 \u2192 3}.\nOn top of the model of the latent attributes, an HLAM uses a J \u00d7 K binary matrix Q = (q j,k ) to encode the structural relationship between the J items and the K attributes. In cognitive diagnostic assessments, the matrix Q is often specified by domain experts to summarize which cognitive abilities each test item targets on [25, 37, 14] . Specifically, q j,k = 1 if and only if the response r j to the jth item has statistical dependence on latent variable \u03b1 k . The distribution of r j , i.e., \u03b8 j,\u03b1 := P(r j = 1 | \u03b1), only depends on its \"parent\" latent attributes \u03b1 k 's that are connected to r j , i.e., {\u03b1 k : q j,k = 1}. The structural matrix Q naturally induces a bipartite graph connecting the latent and the observed variables, with edges corresponding to entries of \"1\" in Q = (q j,k ). Figure 2 presents an example of a structural matrix Q and its corresponding directed graphical model between the K = 3 latent attributes and J = 6 observed variables. The solid edges from the latent attributes to the observed variables are specified by Q 6\u00d73 . As also can be seen from the graphical model, the observed responses to the J items are conditionally independent given the latent attribute pattern.\nIn the psychometrics literature, various HLAMs adopting the Q-matrix concept have been proposed with the goal of diagnosing targeted attributes [25, 36, 37, 20, 12] . They are often called the cognitive diagnosis models. In this work, we focus on two popular and basic types of modeling assumptions under such a framework; as to be revealed soon, these two types of assumptions also have close connections to Boolean matrix decomposition [31, 32] . Specifically, the HLAMs considered in this paper assume a logical ideal response \u0393 q j ,\u03b1 given an attribute pattern \u03b1 and an item loading vector q j in the noiseless case. Then item-level noise parameters are further introduced to account for uncertainty of observations. The following are two popular ways to define the ideal response.\nThe first model is the AND-Model that assumes a conjunctive \"and\" relationship among the binary attributes. The ideal response of attribute pattern \u03b1 to item j takes the form (AND-model ideal response)\nTo interpret, \u0393 q j ,\u03b1 in (1) indicates whether an attribute pattern \u03b1 possesses all the attributes specified by the item loading vector q j . This conjunctive relationship is often assumed for diagnosis of students' mastery or deficiency of skill attributes in educational assessments, and \u0393 q j ,\u03b1 naturally indicates whether a student with \u03b1 has mastered all the attributes required by the test item j. With \u0393 q j ,\u03b1 , the uncertainty of the responses is further modeled by the item-specific Bernoulli parameters\nwhere \u03b8 + j > \u03b8 \u2212 j is assumed for identifiability. For each item j, the ideal response \u0393 q j ,\u00b7 , if viewed as a function of attribute patterns, divides the patterns into two latent classes {\u03b1 : \u0393 q j ,\u03b1 = 1} and {\u03b1 : \u0393 q j ,\u03b1 = 0}; and for these two latent classes, respectively, the item parameters quantify the noise levels of the response to item j that deviates from the ideal response. Note that the \u03b8 j,\u03b1 equals either \u03b8 (1) and (2) is called the Deterministic Input Noisy output \"And\" (DINA) model in cognitive diagnosis [25] .\nThe second model is the OR-model that assumes the following ideal response\nSuch a disjunctive relationship is often assumed in psychiatric measurement. Assumptions (3) and (2) yield the Deterministic Input Noisy output \"Or\" (DINO) model in cognitive diagnosis [36] . In the Boolean matrix factorization literature, a similar model was proposed by [31, 32] . Adapted to the terminology here, [32] assumes the ideal response takes the form\n, which is equivalent to (3), while [32] constrains all the item-level noise parameters to be the same.\nOne can see from the last equivalent formulation of the OR-model that its ideal response is symmetric about the two vectors \u03b1 and q j ; while for the AND-model this is not the case. There is an interesting duality [10] between the AND-model and the OR-model that \u0393 OR q j ,\u03b1 = 1 \u2212 \u0393 AND q j ,1\u2212\u03b1 . Due to this duality, we next will focus on the asymmetric AND-model without loss of generality."}, {"section_title": "Theory of model identifiability", "text": "This section presents the main theoretical result on model identifiability. Denote the J \u00d7 |A| ideal response matrix by \u0393(Q, A). The \u0393(Q, A) has rows indexed by the J items and columns by attribute patterns in A, and its (j, \u03b1)th entry is defined to be the ideal response \u0393 j,\u03b1 in (1). Given an attribute hierarchy E and the resulting A, two matrices Q 1 and Q 2 are equivalent if \u0393(Q 1 , A) = \u0393(Q 2 , A). We also equivalently write it as\nThe following example illustrates how an attribute hierarchy determines a set of equivalent Q-matrices. Example 2. Consider the attribute hierarchy E = {1 \u2192 2, 1 \u2192 3} in Figure 2 , which results in A = {(000), (100), (110), (101), (111)}. Then the identity matrix I 3 is equivalent to the following matrices under E,\nwhere the \" * \"'s in the third matrix above indicate unspecified values, any of which can be either 0 or 1. This equivalence is due to that attribute \u03b1 1 serves as the prerequisite for both \u03b1 2 and \u03b1 3 , and any item loading vector measuring \u03b1 2 or \u03b1 3 is equivalent to a modified one that also measures \u03b1 1 , in terms of classifying the patterns in A into two categories {\u03b1 : \u0393 q j ,\u03b1 = 1} and {\u03b1 : \u0393 q j ,\u03b1 = 0}.\nThe following main theorem establishes identifiability conditions for an HLAM. See Supplement A for its proof. B. For any item j > K, q j,h = 1 and any k \u2192 h, we set q j,k to \"1\" and obtain a modified Q ,B . The Q ,B contains K distinct column vectors.\nC. For any item j > K, q j,k = 1 and any k \u2192 h, we set q j,h to \"0\" and obtain a modified Q ,C , with entries q c j,k . The Q ,C satisfies that\nTo identify (\u0393(Q, A), \u03b8 + , \u03b8 \u2212 , p), Condition A is necessary; moreover, Conditions A, B and C are necessary and sufficient when there exists no hierarchy with p \u03b1 > 0 for all \u03b1 \u2208 {0, 1} K .\n(ii) In addition to Conditions A-C, if Q is constrained to contain an I K , then (A, \u03b8 + , \u03b8 \u2212 , p) are identifiable, and Q can be identified up to the equivalence class under the true A. On the other hand, it is indeed necessary for Q to contain an I K to ensure an arbitrary A identifiable.\nWhen estimating an HLAM with the goal of recovering the ideal response structure \u0393(Q, A) and the model parameters, Theorem 1(i) guarantees that Conditions A, B and C suffice and are close to being necessary. While the goal is to uniquely determine the attribute hierarchy from the identified \u0393(Q, A), the additional condition that Q contains an I K becomes necessary. This phenomenon can be better understood if one relates it to the identification criteria for the factor loading matrix in factor analysis models [5, 6] ; the loading matrix there is often required to include an identity submatrix or satisfy certain rank constraints, since otherwise the loading matrix can only be identifiable up to a matrix transformation. We would also like to point out that developing identifiability theory for HLAMs that can have arbitrarily complex hierarchies is more difficult than the case without hierarchy, and hence Theorem 1 is a significant technical advancement over previous works [19, 17] .\nWe next present an example as an illustration of Theorem 1.\nExample 3. Consider the attribute hierarchy {\u03b1 1 \u2192 \u03b1 2 , \u03b1 1 \u2192 \u03b1 3 } among K = 3 attributes as in Figure 2 . The following structural matrix Q 7\u00d73 satisfies Conditions A, B and C in Theorem 1. In particular, the first 3 rows of Q 7\u00d73 serves as Q 0 in Condition A. We call the two types of modifications of matrix Q described in Conditions B and C by the name \"Operation\" B and C, respectively. In the following equation, the matrix entries modified by Operations B and C are highlighted, and the resulting Q B 7\u00d73 and Q C 7\u00d73 indeed satisfies the requirements in Conditions B and C. So the HLAM associated with Q 7\u00d73 is identifiable."}, {"section_title": "A scalable algorithm for estimating HLAMs", "text": "This section presents an efficient two-step algorithm for structure learning of HLAMs. The EM algorithm is popular for estimating latent variable models; however for HLAMs, it needs to evaluate subjects' and items' probabilities of all configurations of K-dimensional patterns in each E step, so it is computationally intractable for moderate to large K with complexity O((N + J)2 K ). To resolve this issue, [17] recently proposed an efficient two-step algorithm to estimate latent patterns under a fixed and known Q and established its statistical consistency properties. Here we propose a two-step algorithm that improves the idea of [17] , and it is able to simultaneously learn the structural matrix Q and latent patterns. Our new first step jointly estimates Q and performs dimension reduction of the latent patterns in a scalable way, with computational complexity O((N + J)K). Then based on the estimated Q and candidate patterns, our second step imposes further regularization on proportions of patterns to extract the set of truly existing patterns and the corresponding attribute hierarchy.\nFor a sample of size N , denote by R = (r i,j ) the N \u00d7 J matrix containing the N subjects' response vectors as rows, and denote by A = (a i,k ) the N \u00d7 K matrix containing subjects' latent attribute patterns as rows. Our first step treats (Q, A) as random effect variables with noninformative marginal distributions and \u0398 = (\u03b8 + , \u03b8 \u2212 ) as fixed effect parameters. The log-likelihood of the complete data, R = (r i,j ) N \u00d7J and (Q, A), is as follows under the AND-model,\nWe develop a stochastic EM algorithm for structure learning. In particular, in the E step, we use M Gibbs samples of (Q, A) to stochastically approximate their target posterior expectation; then in the M step we update the estimates of the item parameters \u0398. We call the algorithm EM with Alternating Direction Gibbs (ADG-EM) as each E step iteratively draws Gibbs samples of A (along the direction of updating attribute patterns) and Q (along the direction of updating item loadings). The details of ADG-EM are presented in Algorithm 1. In practice we draw 2M samples of (Q, A) with the first M as burn-in in each E step; we find usually a small number M suffices for good performance and M = 3 is taken in the experiments. Algorithm 1 has a desirable property of performing dimension reduction to obtain a set of candidate patterns, as can be seen from its last step of including all the unique row vectors of the matrix I(A ave > 1/2) in the A candi . This is because the matrix A ave has size N \u00d7 K, which means the number of selected candidate patterns can be at most N , no matter how large 2 K might be. Indeed, in the experimental setting with K = 15 in Section 5, the 2 K = 32768 N = 1200, while the proposed algorithm successfully reduces |A candi | to several hundreds (see Table 1 ), and then estimates true latent structure with good accuracy and scalability.\nAfter using Algorithm 1 to obtain the estimated structural matrix Q and a set of candidate latent patterns A candi , we further impose penalty on the proportion parameters of these candidate patterns p = (p \u03b1 : \u03b1 \u2208 A candi ) for sparse estimation. Denote \u0398 = (\u03b8 j,\u03b1 : j \u2208 [J], \u03b1 \u2208 A candi ). Motivated by [17] , the second stage maximizes the following objective function,\nwhere \u03bb \u2208 (\u2212\u221e, 0) is a tuning parameter encouraging sparsity of (p \u03b1 , \u03b1 \u2208 A candi ), and \u03c1 N \u2212d\nfor some d \u2265 1 is used to avoid the singularity issue of the log function at zero. Note that the Q estimated by Algorithm 1 implicitly appears in the above (6), because it determines the ideal response of patterns to items and further determines whether a \u03b8 j,\u03b1 should equal \u03b8\nTo maximize (6), we apply the Penalized EM (PEM) algorithm proposed in [17] to obtain the set of selected latent patterns A final . The PEM algorithm has complexity O(N |A candi |) in each E step, thanks to the dimension reduction of ADG-EM algorithm in the first stage. We also use the Extended Bayesian Information Criterion (EBIC) [9] to select the tuning parameter \u03bb and obtain the best set of attribute patterns A final . Then finally, the attribute hierarchy E can be determined by examining the order between columns of the |A final | \u00d7 K binary matrix D containing the selected patterns. Denote the columns of the matrix\n, then {k \u2192 } should be included in E. Combined with the proposed Algorithm 1, the final output is ( Q, A final , E), including the structural matrix, latent patterns, and attribute hierarchy.\nWe remark that it is straightforward to handle missing data in an HLAM and still perform structure learning. Indeed, it suffices to replace the objective functions (5) and (6) that are over the {r i,j :\nis the set of indices in R corresponding to those observed entries. Supplement B contains more details on computation."}, {"section_title": "Experiments with synthetic and real data", "text": "Synthetic data. We perform simulations in two different settings, the first having relatively small J with (N, J) = (1200, 120) and the second having relatively large J with (N, J) = (1200, 1200). Two different numbers of attributes K = 8 and K = 15 are considered. We next specify the structural matrices Q 120\u00d7K and Q 1200\u00d7K used to generate the synthetic data. Let\nbe a 3K \u00d7 K matrix that consists of one submatrix I K and two copies of Q 1 . Under J = 120 or Algorithm 1: ADG-EM: Alternating Direction Gibbs EM for Q estimation and dimension reduction Data:\n2 ) element-wisely. Output : A candi , which includes the unique row vectors of A, and binary structural matrix Q. Then ( Q, A candi ) are fed to the Penalized EM algorithm in [17] to maximize (6) and obtain A final .\n1200, the Q J\u00d7K vertically stacks an appropriate number of Q block . The algorithm is implemented in Matlab. For all the scenarios, 200 independent runs are carried out. The second step PEM algorithm is always run over a range of \u03bb \u2208 {\u22120.2 \u00d7 i : i = 1, . . . , 20}, from which EBIC selects the best. Figure 3 presents two particular hierarchies among K = 8 attributes, the diamond and the tree, together with the hierarchy estimation results. More extensive simulation results are presented in Table 1 . In the table, the column \"acc [Q] A \" records the average accuracy of estimating the structural matrix up to the equivalence class under A, as illustrated in Example 2; the \"TPR\" denotes True Positive Rate, the average proportion of true patterns that are selected in A final ; and \"1\u2212FDR\" denotes \"1\u2212False Discovery Rate (FDR)\", the average proportion of selected patterns in A final that are true. The statistical variations of the results presented in Table 1 are included in Supplement B.\nResults in Table 1 not only demonstrate the algorithm's excellent performance, but also provide interesting insight into the differences between the two settings, (I) (N, J) = (1200, 120) and (II) (N, J) = (1200, 1200). In setting (I), the first stage ADG-EM algorithm tends to produce a relatively large number of candidate patterns |A candi | (though definitely below sample size N , even for 2 K = 2 15 ), and the second stage PEM algorithm significantly reduces the number of patterns, usually yielding |A final | = |A 0 |. In contrast, in setting (II), Algorithm 1 itself usually can successfully reduce the number of candidate patterns, giving |A candi | close to |A 0 |, and the PEM algorithm does not seem to improve the selection results very much in such scenarios. One explanation for this phenomenon is that in the small J case, there are not enough items \"measuring\" subjects' latent attributes, so the ADG-EM algorithm is not very sure about which false attribute patterns to exclude (very nicely, ADG-EM does not tend to exclude truly existing patterns), and further regularization of patterns in the PEM algorithm is very necessary and helpful; while in the large J case, there exists enough information about the subjects extracted by the large number of items, and hence the ADG-EM can be more confident about discarding those non-existing patterns in the data. Inspired by this observation, we also apply the ADG-EM algorithm to the task of factorization and reconstruction of large and noisy binary matrices. Supplement C contains some interesting simulation results.\nReal data. We use the proposed method to analyze real data from a large-scale educational assessment, the Trends in International Mathematics and Science Study (TIMSS). This dataset is part of the TIMSS 2011 Austrian data, which was also used in [14] to analyze students' abilities in mathematical sub-competences and can be found in the R package CDM. It includes responses of N = 1010 Austrian fourth grade students and J = 47 items. A number of K = 9 attributes is pre-specified in [14] , together with a tentative Q-matrix. One structure specific to such large scale assessments is that only a subset of all items in the entire study is presented to each of students [14] . This results in many missing values in the N \u00d7 J data matrix, and the considered dataset has a missing rate 51.73%. After running the ADG-EM algorithm with missing data firstly, there is |A candi | = 384, out of the 2 K = 512 possible patterns. Figure 4 (a) presents the results of the second stage PEM algorithm. The smallest EBIC value is achieved when \u03bb \u2208 [\u22122.8, \u22121.8], with 10 estimated latent patterns in A final presented in Figure 4 (b). The hierarchy corresponding to A final in Figure 4 (c) reveals that attribute \u03b1 GR \"Geometry & Reasoning\" has the largest number of prerequisites. And in general, attributes related to either \"reasoning\" or \"geometry\" seem to be higher level skills in the hierarchy. "}, {"section_title": "Conclusion", "text": "We have proposed transparent conditions on the structural matrix for identifying an HLAM and developed a scalable algorithm for estimating an HLAM. The algorithm has great empirical perfor-mance on both small-and large-scale structure learning tasks. This work focuses on basic types of HLAMs that have two item-specific parameters per item. It would be interesting to generalize the theory and algorithm to other latent attribute models, like those considered in [17] . More broadly, this work makes an attempt to bridge the two fields of psychometrics and machine learning. In psychometrics, various latent attribute models have been recently proposed, which carry good scientific interpretability in the underlying latent structure; while in machine learning, relevant latent variable models including RBM and its extensions are popular, which enjoy computational efficiency. This work sheds light on further research that can combine strengths from both fields to analyze large and complex datasets from educational and psychological assessments.\n[ "}, {"section_title": "Supplementary Material", "text": "This supplementary material is organized as follows. Supplement A presents the proof of the main theorem, Theorem 1. Supplement B includes some further details on computation, with details of EBIC in part B.1, algorithms handling missing data in part B.2, and details on the experiments in Section 5 of the main text in part B.3. Supplement C includes simulation results on large noisy binary matrix factorization/reconstruction and structural matrix estimation. The Matlab codes for implementing the algorithms and reproducing the experimental results are included in another zip archive."}, {"section_title": "Supplement A: Proof the main theorem", "text": "We introduce some notations and technical preparations before presenting the proof. Denote an arbitrary response vector by r = (r 1 , . . . , r J ). For an HLAM with the AND-model assumption in (1), the probability mass function of the binary response vector r is\nThe \u03b8 j,\u03b1 = (\u03b8\n, so the structural matrix Q implicitly appears in the above expression through defining the ideal responses {\u0393 q j ,\u03b1 }'s.\nWe next define a useful technical quantity, a 2 J \u00d7 2 K marginal probability matrix T -matrix T (Q, \u03b8 + , \u03b8 \u2212 ) as follows. The rows of T (Q, \u03b8 + , \u03b8 \u2212 ) are indexed by all the possible response patterns r \u2208 {0, 1}\nJ and columns by all the possible attribute patterns \u03b1 \u2208 {0, 1} K . The (r, \u03b1)-entry of the T -matrix is the marginal probability of an subject with attribute pattern \u03b1 that provides positive responses to the set of items {j : r j = 1}. Namely, denote a random response vector by r and view the r as a fixed vector, there is\nDenote the row vector of the T -matrix corresponding to response pattern r by T r,\u00b7 (Q, \u03b8 + , \u03b8 \u2212 ), and denote the column vector of the T -matrix corresponding to attribute pattern \u03b1 by T \u00b7,\u03b1 (Q, \u03b8\nFrom the above definition (8), it is not hard to see that P(r | Q, \u03b8\n. This implies that we can focus on the T -matrix structure, and prove identifiability by showing that T p = Tp gives (Q, \u03b8\nThe T -matrix has another nice algebraic property, established in [40] , that will be frequently used in the later proof. We restate it here. The T (Q, \u03b8 + , \u03b8 \u2212 ) can be viewed as a map of two general J-dimensional vectors \u03b8 + and \u03b8 \u2212 . For an arbitrary J-dimensional vector \u03b8 \u2208 R J , there exists a 2 K \u00d7 2 K invertible matrix D(\u03b8 ) that only depends on \u03b8 such that,\nThere is one basic fact about any attribute hierarchy E and the resulting A: the all-zero and all-one attribute patterns 0 K and 1 K always belong to A that is induced by an arbitrary E. This is because any prerequisite relation among attributes would not rule out the existence of the pattern possessing no attributes or the pattern possessing all attributes.\nProof of Theorem 1. The proofs of part (i) and part (ii) are presented as follows."}, {"section_title": "Proof of part (i).", "text": "We first show the sufficiency of Conditions A, B and C for identifiability of\nSince Condition A is satisfied, from now on we assume without loss of generality that\nWe next show that if for any r \u2208 {0, 1} J ,\nWe denote the submatrix ofQ consisting of its first K row vectors byQ 0 , and the remaining submatrix byQ , soQ = ((Q 0 ) , (Q ) ) . \nWhen there is no ambiguity, we sometimes will denote T r ,\u00b7 (Q, \u03b8\nWe prove the theorem in 6 steps as follows.\nStep 1. In this step we show if (11) holds, theQ 0 must also take the following upper-triangular form with all-one diagonal elements, up to column permutation.\nWe need the following useful lemmas. e m , and we claim that T r ,\u00b7 (Q,\u03b8\nis an all-zero vector. This is because for any\nfor all j \u2208 J , which happens if and only if \u03b1 q h and \u03b1 q j for all j \u2208 J , which is impossible because \u2228 j\u2208Jqj q h by our assumption. So the claim T r ,\u00b7 (Q,\u03b8 + \u2212 \u03b8 ,\u03b8 \u2212 \u2212 \u03b8 ) = 0 is proved, and\nwhich is because for any \u03b1 = 1, we must have \u03b1 q m for some m > K under Condition C, and hence the element T r ,\u03b1 (Q, \u03b8\nWe remark here that \u03b8 (12) is zero, and so is the LHS of it. The row vector T r ,\u00b7 (Q, \u03b8 + \u2212 \u03b8 , \u03b8 \u2212 \u2212 \u03b8 ) has the following property\notherwise.\nNote that {\u03b1 \u2208 {0, 1} K : \u03b1 q h , \u03b1 q J , \u03b1 q S } = {\u03b1 : \u03b1 q h , \u03b1 q S } = A 1 = \u2205, because q S, = 0 and q S,k = 1 hold. Furthermore, we claim that \u03b1\u2208A1 p \u03b1 > 0 under the specified attribute hierarchy. This is because Lemma 1 ensures q m \u2208 A for the considered m > K, and hence the attribute pattern \u03b1 = q m belongs to the set A 1 and also belongs to the set A. This ensures p \u03b1 > 0 and \u03b1\u2208A1 p \u03b1 \u2265 p \u03b1 > 0. Therefore we have\nwhich leads to a contradiction since \u03b8 \u2212 \u2212\u03b8\ne., every factor in the above product is nonzero. This completes the proof of Lemma 2.\nWe now proceed with the proof of Step 1. We first introduce the lexicographic order between two vectors of the same length. For two binary vectors a = (a 1 , . . . , a L ) and\nWe use an induction method to prove the conclusion. First consider attribute 1. Since Q ,1 has the smallest lexicographic order among the columns of Q , there must exist an item set S \u2286 {K + 1, . . . , J} such that\nBased on the above display, we apply Lemma 2 to obtain\nThis means there exists b 1 \u2208 [K] such that the b 1 -th column vector ofQ 0 must equal the basis vector\ni.e., we haveQ \nNow we consider attribute h. By (14) , the column vector Q ,h has the smallest lexicographic order among the K \u2212 h \u2212 1 columns in {Q \u00b7,h , Q \u00b7,h+1 , . . . , Q \u00b7,K }, therefore similar to the argument in the previous paragraph, there must exist an item set S \u2286 {K + 1, . . . , J} such that \nWe point out that b h \u2208 {b 1 , . . . , b h\u22121 }, because by the induction hypothesis (15) \nand the conclusion of Step 1 in (13) is proved.\nStep 2. In this step we prove\u03b8 + j = \u03b8 + j for all j \u2208 {K + 1, . . . , J} in the same way as Step 2 of the proof of Theorem 1 in [19] . The fact p 1 > 0 under any attribute hierarchy is used.\nStep 3. In this step we prove\u03b8\nWe use an induction method here.\nStep 3.1. First consider those attribute k for which there does not exist another attribute h such that Q \u00b7,h \u227a Q \u00b7,k ; and we first aim to show\u03b8\nzero for any \u03b1 = (1, . . . , 1, 0 column k , 1, . . . , 1) =: \u03b1 , so the only potentially nonzero element in T r ,\u00b7 is T r ,\u03b1 . More specifically,\nThe reasoning behind (20) is as follows. Consider any other attribute pattern \u03b1 = \u03b1 with \u03b1 h = 0 for some h = k. Since for k we have Q \u00b7,k Q \u00b7,h for any h = k, there must exist some item j > K s.t. q j,k = 0 and q j,h = 1. For this particular item j, we have T r ,\u03b1 contains a factor of (\u03b8 j,\u03b1 \u2212 \u03b8\nThis shows that T r ,\u03b1 = 0 only if \u03b1 h = 1 for all h = k. Further more, we claim that T r ,1 K = 0 also holds; this is because there exists j > K s.t. q j,k = 1, and for this particular item j we have \u03b8 j,1 K = \u03b8 + j so T r ,1 K contains a factor of (\u03b8 \nWe claim that \u03b1 respects the attribute hierarchy so p \u03b1 > 0. This is true because we have shown earlier k \u2192 h for any attribute h = k. Therefore in (21) the only factor that could potentially be zero is (\u03b8\n, and we obtain\u03b8\nThis completes the first step of the induction.\nStep 3.2. Now as the inductive hypothesis, we consider attribute k and assume that for any other attribute h s.t. Q \u00b7,h \u227a Q \u00b7,k , we already have\u03b8\nk \u2192 h} denotes all the attributes that have higher level in the attribute hierarchy than attribute k. By part (c) of Lemma 1, this implies for any h \u2208 H k , we have\u03b8 \u2212 h = \u03b8 \u2212 h . Also, by Condition C in the theorem, there exist two items j 1 , j 2 > K s.t. q ji,k = 1 and q ji,h = 0 for all h \u2208 H k , for i = 1, 2.\nBefore proceeding with the proof of\u03b8 K . Therefore T r * ,\u00b7 = 0 and T r * ,\u00b7p = 0, so the RHS of (12) is zero. Hence the LHS of (12) is also zero. Condition C implies J j=K+1 q j,k \u2265 2 for all attribute k. Under Condition C and the condition #[(K \u222a {m}) \u2229 {K + 1, . . . , J}] \u2264 1, the attributes required by the items in the set {l > K : l \u2208 K \u222a {m}} must cover all the K attributes. because of the term l>K: l \u2208K\u222a{m} \u03b8 \u2212 l e l in the defined \u03b8 * , we have T r * ,\u03b1 = 0 only if \u03b1 = 1 K . So 0 = RHS of (12) = LHS of (12) Note that by Condition C, there exist two different items j 1 , j 2 > K s.t. q ji,k = 1 and q ji,h = 0 for all h \u2208 H k for i = 1, 2. We next aim to show that inQ, we must also haveq ji,h = 0 for all h \u2208 H k for i = 1, 2. We prove this in two steps.\nStep 3.2 Part I. First, we use proof by contradiction to show theq h satisfies that, for any attribute m \u2192 h the following holds, max( max\nwhere the max operator applied to vectors of the same length means taking the element-wise maximum of the vectors and obtaining a new vector of that same length. Suppose (22) \nthen with this \u03b8 * , we claim that the RHS of (12) is zero, T r * ,\u00b7p = 0. This claim is true because T r * ,\u03b1 contains a factor f \u03b1 of the following form"}, {"section_title": "\u00b7,mq", "text": ",q h ) and \u03b1 q m , which is impossible because of (22) , so f \u03b1 = 0 and T r * ,\u03b1 = 0 for all \u03b1. Therefore by (12) we have T r * ,\u00b7 p = T r * ,\u00b7p = 0. Note that\u03b8\n, and now we consider the term T r * ,\u03b1 . Then due to the last term in \u03b8 * defined in (23), we have T r * ,\u03b1 = 0 only if \u03b1 q j for all j > K s.t. q j,m = 0. We claim that such \u03b1 must also satisfy \u03b1 q for any \u2264 K s.t. Q \u00b7, \u2280 Q \u00b7,m . This is because for any \u2264 K s.t. Q \u00b7, \u2280 Q \u00b7,m , there must exist an item j > K such that q j,m = 0 and q j, = 1, then the fact that \u03b1 q j for this j ensures \u03b1 = 1 and \u03b1 q (recall q E \u223c e k ). Therefore we have\nwhere\nWe claim that there exists some attribute pattern in A 1 that respects the attribute hierarchy, i.e., there exists \u03b1 \u2208 A 1 with p \u03b1 > 0. This can be seen by noting the following two facts: first, the assumption m \u2192 h in the beginning of the current Step 3.2.1 yields that an \u03b1 with \u03b1 m = 0 and \u03b1 h = 1 does not violate the attribute hierarchy; second, an \u03b1 satisfying \u03b1 = 1 for all s.t. Combined with (24), we obtain\nand \u03b1\u2208A1 p \u03b1 p \u03b1 > 0. This gives a contradiction because each factor in the above display is nonzero. Now we have reached the goal of Step 3.2.1 of proving (22) .\nWe remark here that (22) \nStep 3.2 Part II. In this step we use proof by contradiction to show that for i = 1 and 2 there is max max\nSuppose (26) does not hold for i = 1, i.e., max(max \u2264K: \u2192hq ,q j1 ) q h . Then by Lemma 3 we have\u03b8\nand note that the item j 2 is included in the last term of summation above since q j2,h = 0. With \u03b8 * defined as in (27) , we have T r * ,\u03b1 = 0 for all \u03b1 because of the first three terms in (27) and the assumption that max(max \u2264K: \u2192hq ,q j1 ) q h . So (12) gives T r * ,\u00b7 p = T r * ,\u00b7p = 0. Consider T r * ,\u03b1 , then T r * ,\u03b1 = 0 only if \u03b1 q h and \u03b1 q j2 because of the terms\u03b8 + h e h and \u03b8 \u2212 j2 e j2 included in \u03b8 * defined in (27) . Further, because of the last term in \u03b8 * defined in (27) , we have T r * ,\u03b1 = 0 only if \u03b1 satisfies \u03b1 k = 1, \u03b1 h = 0, and\nWe claim that any such \u03b1 satisfying \u03b1 k = 1, \u03b1 h = 0, and (28) also satisfies \u03b1 q j1 , because of the reasoning as follows. We next show \u03b1 b \u2265 q j1,b for all attribute b. Define\nand with this \u03b8 * * and its corresponding response pattern r * * , we still have T r * * ,\u00b7p = 0 and hence T r * * ,\u00b7 p = 0. The T r * * ,\u03b1 = 0 only if \u03b1 satisfies\nWe denote the set of attribute patterns having the above properties by A 2 = {\u03b1 \u2208 {0, 1} K : \u03b1 satisfies (30) And we have the conclusion that there exists some \u03b1 \u2208 A 2 that respects the attribute hierarchy with p \u03b1 > 0, because \u03b1 h = 0 does not contradict any \u03b1 = 1 as specified in (30) (30) we also have \u03b1 b = 1. So the conclusion that \u03b1 \u2208 A 2 , \u03b1 b \u2265 q j1,b for any b is reached. Now we have obtained for \u03b1 \u2208 A 2 there is \u03b1 q j1 . This results in \u03b1 q j for any j > K s.t. q j,h = 0, i.e, \u03b1 max j>K: q j,h =0 q j . We further claim that for any \u03b1 \u2208 A 2 , the \u03b1 q for all \u2192 h must hold. This is because by Condition C, for any \u2192 h there exists j > K such that q j,h = 0 and q j, = 1. And combining with the previously obtained \u03b1 max j>K:q j,h =0 q j , we have the conclusion that \u03b1 = 1 and \u03b1 q . Therefore \u03b1 q for all \u2192 h. Considering the T r * * ,\u00b7 p = 0 with \u03b8 * * defined in (29), we have\nThis leads to a contradiction, since every factor in the above display is nonzero. Now we have reached the goal of Step 3.2.2 of proving (26) for i = 1, and using the exactly same argument gives (26) for i = 2.\nCombining the results of Step 3.2.1 (in (22)) and Step 3.2.2 (in (26)), we obtain an important observation thatq\nThis is true because Step 3.2.1 revealsq h, can potentially equal one only for those that is the prerequisite of attribute h (i.e.,q h, = 1 only if \u2192 h); and further, Step 3.2.2 establishes that taking the element-wise maximum of the vector max l\u2192hq and the vectorq ji still does not give a vector that requires all the attributes covered byq h . Thereforeq ji,h must equal zero. Precisely, (22) Step 3.2 Part III. In this step we prove\u03b8 (31) . Define\nand we claim that T r * ,\u00b7p = 0 with this \u03b8 * defined above, because of the following reasoning. First, due to the first two terms in (32) , T r * ,\u03b1 = 0 only if \u03b1 satisfies \u03b1 k = 1 and \u03b1 m = 1 for any attribute m \u2208 {k} \u222a H k . Note that in Step 2 we obtained\u03b8\nHowever considering the item j 1 with the property q j1,k = 1 and q j1,h = 0 for all h \u2208 H k , then such item j 1 must be included in the third term in (32) (i.e., j>K: q j,k =1 \u03b8 + j e j ), and we have shown (31) K , there must be T r * ,\u03b1 = 0, and the claim that T r * ,\u00b7p = 0 is proved. And we have T r * ,\u00b7 p = 0.\nNext, we consider T r * ,\u03b1 . Due to the last two terms in (32) , T r * ,\u03b1 = 0 only if \u03b1 \u2208 A 4 with A 4 defined as\nWe claim that for any \u03b1 \u2208 A 4 , there is \u03b1 q m for all m \u2208 H k . This claim is true because \u03b1 \u2208 A 4 implies \u03b1 m = 1 for all attribute m such that Q \u00b7,m \u2280 Q \u00b7,k . Recall our inductive hypothesis made in\nStep 3.1 that\u03b8 (32));\nwhere the last equality uses Lemma 1 that\n, we have that for all \u03b1 \u2208 A 5 , there is \u03b1 q m for any attribute m \u2208 H k , and hence \u03b8 m,\u03b1 = \u03b8 + m . Furthermore, we claim that if T r * ,\u03b1 = 0 (which implies \u03b1 \u2208 A 5 ), we have \u03b1 q k for the following reason. For \u03b1 \u2208 A 5 , there is \u03b1 m = 1 for all m \u2208 H k . Consider the item j 1 with q j1,k = 1 and q j1,h = 0 for all h \u2208 H k , and for this j 1 , there is\nThen since \u03b8 + j1 e j1 is included in (32) , in order to have T r * ,\u03b1 = 0 we must have \u03b1 q j1 . Combined with the above (33), we obtain \u03b1 k = 0 and \u03b8 k,\u03b1 = \u03b8 \u2212 k . Denote A 6 = A 5 \u2229 {\u03b1 : \u03b1 k = 0}, and we have T r * ,\u03b1 = 0 only if \u03b1 \u2208 A 6 . Importantly, any \u03b1 in A 6 does not violate the attribute hierarchy since \u03b1 k = 0 does not contradict \u03b1 m = 1 for m \u2208 H k as specified in A 5 . Therefore p \u03b1 > 0 for all \u03b1 \u2208 A 6 under the attribute hierarchy.\nFinally, with (32), we conclude that\notherwise.\nand further\nThen since in the last paragraph we have shown \u03b1\u2208A6 p \u03b1 > 0, the only potentially zero factor in the above display could only be (\u03b8\n, and the proof of Step 3.2.3 is complete.\nStep 3.3. Now we complete the inductive argument in the current Step 3 and conclude\u03b8\n. By completing the induction, we have obtained one more useful byproduct in the proof of Step 3, which is (25) thatq h,m = 0 for any attribute m \u2192 h. This exactly means under the true attribute hierarchy and the induced attribute pattern set A, the first K items ofQ is equivalent to the identity matrix I K . Namely, we obtain\nStep 4. In this step we proveQ E \u223c Q. Without loss of generality, we assume the columns ofQ is arranged in the order (b 1 , b 2 , . . . , b K ) . Recall that A \u2286 {0, 1}\nK denotes the set of attribute patterns that respect the specified attribute hierarchy. For each j \u2208 {K + 1, . . . , J}, in the following two parts (i) and (ii), we first prove A * := {\u03b1 \u2208 A : \u03b1 q j , \u03b1 q j } = \u2205 in (i); and then prove A * * := {\u03b1 \u2208 A : \u03b1 q j , \u03b1 q j } = \u2205 in (ii). Together, these two conclusions would implyq j E \u223c q j .\n(i) We use proof by contradiction and suppose A * = {\u03b1 \u2208 A : \u03b1 q j , \u03b1 q j } = \u2205 for some j \u2208 {K + 1, . . . , J}. Then \u03b1\u2208A * p \u03b1 > 0. Define\nthen T r * ,\u03b1 = 0 for all \u03b1 \u2208 {0, 1} K and hence T r * ,\u00b7p = 0. Based on Step 2 and 3, we hav\u0113\nfor the j and any k withq j,k = 1 used in (35) . Therefore, due to the first summation term in (35) , T r * ,\u03b1 = 0 only if \u03b1 satisfies \u03b1 k = 1 for all k s.t.q j,k = 1 (i.e., \u03b1 q j ); and due to the second term \u03b8 + j e j in (35), T r * ,\u03b1 = 0 only if \u03b8 j,\u03b1 = \u03b8 \u2212 j (i.e., \u03b1 q j ). In summary, T r * ,\u03b1 = 0 only if \u03b1 \u2208 A * , so\nwhich contradicts T r * ,\u00b7p = 0. This contradiction means A * = \u2205 must hold.\n(ii) We also use proof by contradiction and suppose A * * = {\u03b1 \u2208 A : \u03b1 q j , \u03b1 q j } = \u2205 for some j \u2208 {K + 1, . . . , J}. Then there exists \u03b1 \u2208 A with \u03b1 q j but \u03b1 q j , which implies there exists some attribute k \u2208 [K] s.t.q j,k = 1 and q j,k = 0. Based on the above relation, we apply Lemma 3 to obtain\u03b8\nthen based on the first two terms in (36), we have T r * ,\u03b1 = 0 for all \u03b1 \u2208 {0, 1} K . So T r * ,\u00b7p = 0 and further T r * ,\u00b7 p = 0. Now consider T r * ,\u03b1 , then T r * ,\u03b1 = 0 only if \u03b1 belongs to the set A 7 defined as\nthen this A 7 = \u2205 because the \u03b1 * = (\u03b1 * 1 , . . . , \u03b1 * K ) defined as follows belongs to A 7 . The \u03b1 * takes the form \u03b1 * k = 0, \u03b1 * = 0 for all k \u2192 , and \u03b1 * m = 1 for all k \u2192 m. The \u03b1 * also satisfies \u03b1 * q j for the following reason. Since q j,k = 0, then under the attribute hierarchy this q j is equivalent to a q j with q j,k = 0 and q j, = 0 for all s.t. k \u2192 . Therefore for the defined \u03b1 * \u2208 A that respects the attribute hierarchy, there must be \u03b1 * q j Since Lemma 1 establishes that we can consider without loss of generality the case where each row vector of Q respects the attribute hierarchy, we have the conclusion that equivalently, \u03b1 * q j . And further there is \u03b1\u2208A7 p \u03b1 \u2265 p \u03b1 * > 0. Now we have\nwhich leads to a contradiction since each factor in the above term is nonzero. So we have proved the A * * defined earlier must also be an empty set.\nAs stated before, based on the (i) and (ii) shown above, we obtainq j E \u223c q j for every item j \u2208 {K + 1, . . . , J}.\nIn summary, by far we have obtained\u03b8\nStep 5. We next show\u03b8\nfor all j \u2208 {K + 1, . . . , J}, and p = p.\nStep 5.1. In this step, we show\u03b8\n. By Condition C, there exists some item j > K s.t. q j,k = 1, and we denote this item by j k . Define\nthen T r * ,\u03b1 = 0 if and only if \u03b1 = 1 K . This is because considering the the last term of summation in (38), we have T r * ,\u03b1 = 0 only if \u03b1 q J where J := {K + 1, . . . , J} \\ {j k }; and by Condition C there is q J = 1 K . Specifically,\nand there is T r * ,\u00b7 p = T r * ,1 K p 1 K = 0. So by (12) we have T r * ,\u00b7p = 0. Further, the elementT r * ,\u03b1 could be potentially nonzero only if \u03b1 = 1 K . This is because considering the first two terms ( h\u2264K:\nh =kq h ,q j k ); and sinceq j k ,k = 1 there must be max(max h\u2264K:\nStep 5.2. In this step we show\u03b8 \nand note that for any \u03b1 = q k , there must be \u03b1 = q j since q j,k = 1. Now consider the item j, we have\u03b8\nSince j is arbitrary from {K + 1, . . . , J}, we have obtained\u03b8\nStep 6. In this step we show that for \u0393(Q, A) and the alternative \u0393-matrix \u0393 (also denoted by \u0393(Q,\u0100) where\u0100 is the set corresponding to those columns in \u0393 with nonzero proportion parameters inp), the column vectors in \u0393(Q,\u0100) that correspond top \u03b1 > 0 are identical to \u0393(Q, A); furthermore, p \u03c0(\u03b1) = p \u03b1 for \u03b1 \u2208 A, where \u03c0 : A \u2192\u0100 is a one-to-one map. For an arbitrary \u03b1 \u2208 A, define\nThen for any \u03b1 * \u2208 A, the T r * ,\u03b1 * = 0 (equivalently, T r * ,\u03b1 * = 0) if and only if \u03b1 * = \u03b1, because\nand we obtainp \u03c0(\u03b1) = p \u03b1 , Since \u03b1\u2208{0,1} Kp\u03b1 = \u03b1\u2208A p \u03b1 = 1, the equalityp \u03b1 = p \u03b1 for any \u03b1 \u2208 A also impliesp \u03b1 = 0 for all \u03b1 \u2208 {0, 1} K \\ A. So \u0393(Q,\u0100) = \u0393(Q, A) also holds. This completes the proof of Step 6. Now we have shown \u0393(Q, A) = \u0393(Q,\u0100),\u03b8 + = \u03b8 + ,\u1e21 = g,p = p. This completes the proof of the sufficiency of Conditions A, B and C.\nWe next show that Condition A is necessary for identifying (\u0393(Q, A), \u03b8 + , \u03b8 \u2212 , p). We use proof by contradiction and assume that Condition A does not hold. Recall that the type of modification of Q described in Condition A is \"Operation\" A, which sets every q j,k to zero if q j,h = 1 and k \u2192 h. Denote the resulting matrix by Q A . If Condition A fails to hold, then Q A lacks an identity submatrix I K . Without loss of generality, suppose Q A does not contain any row vector in the form e h for some h \u2208 [K]. Combined with the definition of Operation A, this means for any q-vector with q j,h = 1, in the original Q there must be q j, = 1 for some \u2192 h. Then the following two attribute patterns in A will lead to the same column vectors in \u0393(Q, A): \u03b1 1 := 0 K and \u03b1 2 := (\u03b1 2,1 , . . . , \u03b1 2,K ) where \u03b1 2,h = 1, \u03b1 2,k = 1 for all k \u2192 h, and \u03b1 2, = 0 for all \u2192 h. The fact that \u0393 :,\u03b11 = \u0393 :,\u03b12 directly results in that p \u03b11 and p \u03b12 can be at best identified up to their sum, even if all the item parameters \u03b8 + and \u03b8 \u2212 are identified and known. This proves the necessity of Condition A.\nAs for the last claim in part (i) that Conditions A, B and C are necessary and sufficient for identifiability of (Q, p, \u03b8\nwhere there is no hierarchy (i.e., p \u03b1 > 0 for all \u03b1 \u2208 {0, 1} K ), it directly follows from the result in Theorem 1 in [19] ."}, {"section_title": "Proof of part (ii).", "text": "We first show that if Q contains a submatrix I K other than satisfying A, B and C, then (A, \u03b8 + , \u03b8 \u2212 , p) are jointly identifiable. Based on the conclusion of part (i), it suffices to show that if Q contains an I K , then A are identifiable from \u0393(Q, A). That is, we will show that if \u0393(Q, A) = \u0393(Q,\u0100) with both Q andQ containing a submatrix I K , then A =\u0100. Note that when Q contains an I K , the J \u00d7 2 K matrix \u0393(Q, {0, 1} K ) has 2 K distinct column vectors [16] . Without loss of generality, suppose the first K rows of Q andQ are both I K . Then \u0393 1:K,: (Q, A) = \u0393 1:K,: (Q,\u0100) exactly implies A =\u0100, due to this distinctiveness of the 2 K ideal response vectors of the 2 K latent patterns under an identity matrix.\nWe next show that in order to identify an arbitrary A, it is necessary for Q to contain an I K . Suppose Q does not contain an I K , then based on the concept of p-partial identifiability in [16] , certain patterns would become equivalent in that they lead to the same column vectors in \u0393(Q, {0, 1} K ), hence there must exist some A that is not identifiable."}, {"section_title": "Supplement B: Computational details B.1. Details of Extended Bayesian Information Criterion (EBIC)", "text": "Consider the objective function (6) . For a \u03bb \u2208 (\u2212\u221e, 0), denote the estimated set of patterns by\nHere \u03c1 N > 0 is the threshold for selecting latent patterns, and we take a sample size dependent \u03c1 N = 1/(2N ) in all the experiments. The EBIC proposed in [9] has the form\nwhere a larger EBIC parameter \u03b3 \u2208 [0, 1] would encourage a more parsimonious model (i.e., fewer selected latent patterns). We take \u03b3 = 1 for the greatest amount of parsimony. Then A final is taken to be the particular A \u03bb that achieves the smallest EBIC value."}, {"section_title": "B.2. Structure learning with missing data and binary matrix completion", "text": "When there exists missing data in a HLAM, what is observed is not a complete N \u00d7 J binary matrix R; instead, it is R with missing entries. Denote by\nthe set of indices of the observed entries. Then the original objective functions presented in (5) and (6) \nWith missing values in R, the ADG-EM Algorithm 1 and the PEM algorithm in [17] should be replaced by the following Algorithm 2 and Algorithm 3. \n2 ) element-wisely. Output : A candi , which includes the unique row vectors of A, and binary structural matrix Q. Then ( Q, A candi ) are fed to the PEM with missing data to maximize (6) and obtain A final .\nThe algorithms for structure learning with missing data can be also used for binary matrix completion. Note that even if not all entries of R are observed, the entire N \u00d7 K matrix A and the entire J \u00d7 K matrix Q can be estimated from Algorithms 2-3, as long as there are at least some observed entries in each row and each column of R. Then naturally, based on the estimated A and Q, a complete N \u00d7 J matrix R = ( r i,j ) with no missing entries can be reconstructed, by setting r i,j equal to\nwhich is the integer (0 or 1) nearest to the posterior mean of (i, j)th entry of R. \nOutput :{\u03b1 l \u2208 A candi : p \u03b1 l > \u03c1}."}, {"section_title": "B.3. More details on the experiments in Section 5 of the main text", "text": "Denote the output of the ADG-EM Algorithm 1 by Table 1  is acc\nThat is, since an A gives an equivalence class of Q-matrices, the accuracy of estimating Q should be evaluated by the accuracy of estimating the ideal response structure {\u0393 q j ,\u03b1 : \u03b1 \u2208 A} under the true A. More specifically, as long as the J \u00d7 |A| ideal response matrix is estimated accurately, the Q is already identified in the correct equivalence class.\nWe next present the statistical variations of the results in Table 1 of the main text. We choose to present the inter quartile range (i.e., difference between the 75th and the 25th percentiles) as a measure of variation as it is more robust to outliers. See Table 2 for details.\nAs illustrated in Example 2, a set of allowed patterns A \u2286 {0, 1} K would give an equivalence class of Q-matrices, each of which would lead to identical \u0393(Q, A). More generally, the structural matrix Q and the attribute pattern matrix A are coupled together, such that fixing one of them would allow identifying the other up to an equivalence class. However, there is indeed a way to uniquely determine an A from \u0393(Q, A) if we impose one constraint on the structural matrix Q: to require Q to contain a submatrix I K . This fact is shown in the part (ii) of Theorem 1. In particular, if for instance we constrain Q 1:K, = I K , then A is uniquely determined from the K \u00d7 |A| ideal response matrix \u0393(Q 1:K, , A). As discussed in the main text after Theorem 1, this phenomenon is analogous to the identification criteria for the factor loading matrix in factor analysis models, where the loading matrix is often required to include an identity submatrix or satisfy certain rank constraints [5, 6] . Therefore at least theoretically, in estimation, one needs to enforce the constraint that Q contains a submatrix I K to uniquely determine A and the attribute hierarchy. In particular, in the simulation scenario (N, J, K) = (1200, 120, 8) in Table 1 , we enforce such a constraint after running the ADG-EM algorithm, and then use the A candi and the constrained Q as input to the second stage PEM algorithm. Interestingly, we observe that practically, this constraint is not needed when estimating more large-scale problems. For instance, for all the other simulation scenarios in Table 1 and Figure  3 with (N, J) = (1200, 1200) or K = 15, we directly run PEM without such a constraint and the structure learning results presented there are indeed accurate.\nFor the experiment with the Austrian TIMSS 2011 real data that has (N, J, K) = (1010, 47, 9), a tentative Q-matrix is provided in the R package CDM. This tentative Q has all the row vectors being unit vectors, i.e., for each j \u2208 {1, . . . , 47}, there is q j = e k for some k \u2208 [K]. To learn the attribute hierarchy from this dataset, we run Algorithm 2 and Algorithm 3 presented in Section B.2 of this supplementary material to handle the missing entries in R. In particular, we use the tentative Q provided in the R package as the initial value for Algorithm 2 and enforce Q to contain an identify matrix after running Algorithm 2 to obtain Q and A candi . Finally, with the A candi and the enforced Q as input, we run Algorithm 3 and obtain the results presented in Figure 4 in the main text.\nSupplement C: Large noisy binary matrix factorization/reconstruction and structural matrix estimation A nice byproduct of the proposed ADG-EM Algorithm 1 is a scalable algorithm for large-scale noisy binary matrix factorization/reconstruction and latent structure estimation. As discussed in the previous section, if there exists attribute hierarchy, the Q-matrix can be identified up to the equivalence class determined by A. The emphasis of the experiments in the main text is to estimate A; while in the current experiments, we focus on the estimation of the structural matrix Q, and the reconstruction of the ideal response matrix based on the estimated Q.\nWe use Algorithm 1 to decompose the N \u00d7 J large noisy binary matrix R generated under the AND-model. Specifically, R \u2248 A \u2022 Q , where the \"\u2022\" denotes the \"AND\" logical operation between each pair of a i = (a i,1 , . . . , a i,K ) and q j = (q j,1 , . . . , q j,K ), as introduced in (1); while the \"\u2248\" allows for item level noises as quantified by 1 \u2212 \u03b8 + j and \u03b8 \u2212 j in (2) . In matrix form, we have\nWe perform simulations in the scenario (N, J, K) = (1000, 1000, 7), where the true Q vertically stacks J/(2K) copies of submatrix I K and the remaining J/2 rows of Q vertically stacks an appropriate number of another K \u00d7 K submatrix Q 2 in the following form, \nThe ground truth 1000 \u00d7 7 matrix Q is visualized in the bottom-right plot in Figure 6 , with color yellow representing value \"1\" and color blue representing value \"0\". Then under this structural matrix Q, we generate response data R using noise parameters 1 \u2212 \u03b8 + j = \u03b8 \u2212 j = 30%, and proportion parameters p \u03b1 = 1/128 for all \u03b1 \u2208 {0, 1}\n7 . In the current scenario we would like to keep track of the estimation accuracy of Q itself, so we set A = {0, 1}\nK to be saturated such that [Q] A contains only one element: Q itself. For each of 200 simulated datasets, we apply our ADG-EM Algorithm 1 alone to estimate Q and reconstruct the ideal case R using expression (40). The initializations {Q ini }'s are obtained from randomly perturbing about one third entries in the true Q in each run. Instead of specifying a stopping criterion based on the convergence of the objective function, in the current experiment we just run exactly 10 stochastic EM iterations in Algorithm 1; we record the number of entry-differences between the estimated Q and the true Q true along each EM iteration, and present the corresponding boxplot in Figure 5 (b). In addition, we record the number of entry-differences between Q true and the initial value Q ini , which is given as input to the algorithm, and present the boxplot based on 200 runs in Figure 5 (a).\nThe two boxplots in Figure 5 show the superior convergence performance of the proposed ADG-EM algorithm. For each boxplot, the central mark denotes the median, and the bottom and top edges of the box are the 25th and 75th percentiles, respectively. The whiskers extend to the most extreme data points that are not considered outliers, and the outliers are plotted with the '+'. Out of the 1000 \u00d7 7 = 7000 entries in the structural matrix, although the initialization of Q differs from the true one by more than 2000 entries on average, after just one stochastic EM iteration, the number of entry-differences between Q iter. 1 and Q true decreases to less than 300 entries in most cases. After just 3 stochastic EM iterations, for a vast majority of the 200 datasets, the Q true is perfectly recovered and remains unchanged in further iterations of the algorithm. Indeed, after 10 iterations, for each of the 200 datasets, the Q true is exactly recovered! Considering the relatively high noise rate 30% in R (i.e., 30% of the entries in the ideal response matrix are randomly flipped to form the observed R) and the suboptimal initializations, such performance on latent structure estimation is impressive.\n(a) # entry-differences between Q ini and Q true (b) # entry-differences between Q iter and Q true Figure 5 : Boxplots of entry-differences between estimated Q iter (or Q ini ) and the true structural matrix Q true , with size 1000 \u00d7 7. Results are based on 200 independent runs.\nTo obtain a better understanding of the performance of the ADG-EM algorithm, we next present two specific examples that visualize the intermediate results of the algorithm. Still in the setting described above, we simulate a 1000 \u00d7 1000 matrix R with noise rate 30% = \u03b8 \u2212 j = 1 \u2212 \u03b8 + j . In the first example, we use randomly perturbed initialization for (Q, A), which is the same setting as the 200 runs behind Figure 5 . We present the results of Algorithm 1 together with its intermediate results along the first 4 iterations of the stochastic EM steps in Figure 6 . The 6 plots in the first row of Figure  6 show the reconstruction of the data matrix R, and the 6 plots in the second row of Figure 6 show the estimation of the structural matrix Q. Specifically, after the t-th iteration, based on the Q iter. t , the R iter. t is reconstructed following Equation (40). The ground truth for R is just the N \u00d7 J ideal response matrix in the noiseless case R true = (r true i,j ), where r true i,j = \u0393 q j ,ai = K k=1 a q j,k i,k . Along the first 3 stochastic EM iterations, the matrix Q change 2246, 275, 11 entries, respectively. Then from the 4th iteration to the 14th iteration when the stopping criterion is reached, we observe that all the entries of Q remain the same during the sampling in the E step. In the last several iterations the item parameters (\u03b8 + , \u03b8 \u2212 ) continued to change slightly and converge. Let (r In the above display, the 0.2995 reflects the noise rate in the observed data matrix corresponding to 1 \u2212 \u03b8 + j = \u03b8 \u2212 j = 0.3 for each j \u2208 [J]; and the 5.21 \u00d7 10 \u22125 represents the error rate of reconstructing the N \u00d7 J ideal response matrix, which is far smaller than the initial noise rate by several magnitudes. Indeed, there is no discernible difference between R iter. 4 and R true based on the two rightmost plots in the first row of Figure 6 . 2 2 4 6 en tries ch an g e 2 7 5 en tries ch an g e 1 1 en tries ch an g e 0 en try cha ng e e x a ct ly recov er e d ! Figure 6 : Noisy binary matrix factorization and reconstruction with randomly perturbed initialization.\nColor yellow represents value \"1\" and color blue represents value \"0\". Only 3 stochastic EM iterations suffice for perfect estimation of the structural matrix Q.\n2 3 1 2 en tries ch an g e 1 7 4 6 en tries ch an g e 4 0 0 en tries ch an g e 1 4 1 en tries ch an g e e x a ct ly recov er e d ! Figure 7 : Noisy binary matrix factorization and reconstruction with entirely random initialization.\nColor yellow represents value \"1\" and color blue represents value \"0\". Only 4 stochastic EM iterations of the proposed ADG-EM Algorithm 1 suffice for almost perfect decomposition and reconstruction. The stochastic Q after 4 iterations is identical to the true Q after column permutation.\nIn the second visualization example, we use entirely random initialization to obtain the (Q ini , A ini ) as input to Algorithm 1. The results of Algorithm 1 together with its intermediate results along the first 4 iterations of the stochastic EM steps are presented in Figure 7 . Along the first 4 stochastic EM iterations, the matrix Q changed 2312, 1746, 400, 141 entries, respectively. Then from the 5th iteration to the 18th iteration when the stopping criterion is reached, all the entries of Q remain the same during the sampling in the E step. With this entirely random initialization mechanism, we observe that the ADG-EM algorithm is not trapped in some suboptimal local optimum; instead, the finally obtained Q only differs from Q true by a column permutation. This column permutation is the inevitable and trivial ambiguity associated with a latent attribute model with a structural matrix [10] . The proposed ADG-EM algorithm also succeeds in this scenario. For Figure 7 , the reconstruction result for the data matrix R with noise rate 0. One can also see from the above high reconstruction accuracy that estimating Q up to a column permutation does not compromise the reconstruction of R at all and that the reconstruction error is still at the magnitude of 10 \u22125 ."}]