[{"section_title": "Abstract", "text": "Abstract-Multi-atlas segmentation is an effective approach for automatically labeling objects of interest in biomedical images. In this approach, multiple expert-segmented example images, called atlases, are registered to a target image, and deformed atlas segmentations are combined using label fusion. Among the proposed label fusion strategies, weighted voting with spatially varying weight distributions derived from atlas-target intensity similarity have been particularly successful. However, one limitation of these strategies is that the weights are computed independently for each atlas, without taking into account the fact that different atlases may produce similar label errors. To address this limitation, we propose a new solution for the label fusion problem in which weighted voting is formulated in terms of minimizing the total expectation of labeling error and in which pairwise dependency between atlases is explicitly modeled as the joint probability of two atlases making a segmentation error at a voxel. This probability is approximated using intensity similarity between a pair of atlases and the target image in the neighborhood of each voxel. We validate our method in two medical image segmentation problems: hippocampus segmentation and hippocampus subfield segmentation in magnetic resonance (MR) images. For both problems, we show consistent and significant improvement over label fusion strategies that assign atlas weights independently."}, {"section_title": "", "text": "Abstract-Multi-atlas segmentation is an effective approach for automatically labeling objects of interest in biomedical images. In this approach, multiple expert-segmented example images, called atlases, are registered to a target image, and deformed atlas segmentations are combined using label fusion. Among the proposed label fusion strategies, weighted voting with spatially varying weight distributions derived from atlas-target intensity similarity have been particularly successful. However, one limitation of these strategies is that the weights are computed independently for each atlas, without taking into account the fact that different atlases may produce similar label errors. To address this limitation, we propose a new solution for the label fusion problem in which weighted voting is formulated in terms of minimizing the total expectation of labeling error and in which pairwise dependency between atlases is explicitly modeled as the joint probability of two atlases making a segmentation error at a voxel. This probability is approximated using intensity similarity between a pair of atlases and the target image in the neighborhood of each voxel. We validate our method in two medical image segmentation problems: hippocampus segmentation and hippocampus subfield segmentation in magnetic resonance (MR) images. For both problems, we show consistent and significant improvement over label fusion strategies that assign atlas weights independently.\nIndex Terms-Multi-atlas label fusion segmentation, dependence, hippocampal segmentation \u00c7"}, {"section_title": "INTRODUCTION", "text": "A TLAS-BASED segmentation is motivated by the observation that segmentation strongly correlates with image appearance. A target image can be segmented by referring to atlases, i.e., expert-labeled sample images. After warping the atlas to the target image via deformable registration, one can directly transfer labels from the atlas to the target image. As an extension, multi-atlas-based segmentation makes use of more than one atlas to compensate for potential bias associated with using a single atlas and applies label fusion to produce the final segmentation. This method requires higher computational costs but, as extensive empirical studies have verified in the recent literature, e.g., [16] , [3] , [22] , it is more accurate than single atlas-based segmentation. Enabled by the availability and low cost of multicore processors, multi-atlas label fusion (MALF) is becoming more accessible to the medical image analysis community. Recently, the concept has also been applied in computer vision for segmenting natural images [37] , [21] .\nErrors produced by atlas-based segmentation can be attributed to dissimilarity in the structure (e.g., anatomy) and appearance between the atlas and the target image.\nRecent research has been focusing on addressing this problem. For instance, such errors can be reduced by optimally constructing a single atlas that is the most representative of the population using training data [12] , [11] , [18] . Constructing multiple representative atlases from training data has been considered as well and usually works better than single-atlas-based approaches. Multi-atlas construction is done either by constructing one representative atlas for each mode obtained from clustering training images [5] , [2] , [32] or by simply selecting the most relevant atlases for the unknown image on-the-fly [30] , [1] , [41] . Either way, one needs to combine the segmentation results obtained by referring to different atlases to produce the final solution.\nMost existing label fusion methods are based on weighted voting [30] , [16] , [3] , [17] , [33] , where each atlas contributes to the final solution according to a nonnegative weight, with atlases more similar to the target image receiving larger weights. Among weighted voting methods, those that derive weights from local similarity between the atlas and target, and thus allow the weights to vary spatially, have been most successful in practice [3] , [17] , [33] . One common property of these spatially variable weighted voting MALF methods is that the weights for each atlas are computed independently, only taking into consideration the similarity between the warped atlas and the target image. As such, these methods are less effective when the label errors produced by the atlases are not independent, e.g., most atlases produce similar errors. As a simple example, suppose that a single atlas is duplicated multiple times in the atlas set. If weights are derived only from atlas-target similarity, the total contribution of the repeated atlas to the consensus segmentation will increase in proportion to the number of times the atlas is repeated, making it more difficult to correct the label error produced by the duplicated atlas. Likewise, if the atlas set is dominated by a certain kind of anatomical feature or configuration, there will be an inherent bias toward that feature, even when segmenting target images which do not share that feature. As a result, the quality of the segmentation for the less frequent anatomical features/configurations may be reduced.\nAnother class of label fusion methods performs majority voting (MV) among a small subset of atlases that globally or locally best match the target image, discarding the information from poor matching atlases [3] , [7] . These methods are less susceptible to the problem described since the atlas appearing multiple times would only be included in the voting if it is similar to the target image. However, by completely discarding information from poorer matches, these methods lose the attractive property of voting arising from the central limit theorem. In particular, when all atlases are roughly equally similar to the target image, performing voting only among the few best atlases will have greater expected error than voting between all atlases. This paper derives a novel label fusion strategy that aims to reduce the bias due to the fact that atlases may produce correlated segmentation errors, without sacrificing the attractive properties of voting. The strategy is derived from formulating the weighted voting problem as an optimization problem over unknown voting weights, with the expected total error of the consensus segmentation relative to the unknown true segmentation being minimized. This formulation requires the joint distribution of label errors produced by any pair of atlases in the neighborhood of each voxel to be known. In practice, this distribution is unknown, and we estimate it using image intensity similarity. However, unlike previous methods, similarity with the target image is not measured independently at each atlas. Instead, intensity similarity between the target and each pair of images is considered, which leads to an ability to explicitly estimate the probability that a pair of atlases produce the same segmentation error. We hypothesize that this strategy will improve segmentation accuracy over existing techniques that consider atlas-target similarity independently [3] , [33] . To test this hypothesis, we perform cross-validation segmentation experiments in manually labeled MRI datasets, and report significant improvements over earlier methods.\nPreliminary versions of this work appeared in [39] , [38] ."}, {"section_title": "MULTIATLAS-BASED SEGMENTATION", "text": "We start with a brief overview of MALF. Let F T be a target image to be segmented and A 1 \u00bc \u00f0F 1 ; S 1 \u00de; . . . ; A n \u00bc \u00f0F n ; S n \u00de be n atlases. F i and S i denote the ith warped atlas image and the corresponding warped manual segmentation of this atlas, obtained by performing deformable image registration to the target image. Each atlas produces one candidate segmentation for the target image. Each of the candidate segmentations may contain some segmentation errors. Label fusion is the process of integrating the candidate segmentations produced by all atlases to improve the segmentation accuracy in the final solution.\nErrors produced in atlas-based segmentation are mainly due to registration errors, i.e., registration associates wrong regions from an atlas to the target image. Under the assumption that the errors produced by using different atlases are not identical, employing multiple atlases can effectively reduce label errors. For example, the majority voting method [13] , [19] simply counts the votes for each label from each warped atlas and chooses the label receiving the most votes to produce the final segmentation\u015c T :\nwhere l indexes through labels and L is the number of all possible labels, x indexes through image pixels. S l i \u00f0x\u00de is the vote for label l produced by the ith atlas, defined by\nThe power of voting in removing independent noise has long been recognized. For instance, for a simple binary (yes/ no) voting problem, in a group of 23 voters, if three voters always give the same vote and the remaining voters vote randomly, the chance that the final voting result is consistent with what the three resolute voters choose is $75 percent [28] . For multiway voting problems, majority voting is even more powerful in removing independent noise. In our problem, suppose that atlas A i produces correct labels for the target image with probability p i . The probability that the atlas will produce any particular wrong label can be roughly estimated by \u00f01 \u00c0 p i \u00de=\u00f0L \u00c0 1\u00de. When p i > \u00f01 \u00c0 p i \u00de=\u00f0L \u00c0 1\u00de, the atlas works better than random guess. When segmentation errors produced by different atlases are independent, the probability that multiple atlases agree on the same wrong label is exponentially suppressed compared to the probability that they agree on the same correct label. Hence, the combined results are expected to produce significantly fewer errors than those produced by any single atlas.\nSince majority voting assigns equal weights to different atlases, it makes a strong assumption that different atlases produce equally accurate segmentations for the target image. However, as a complex optimization problem, the performance of deformable registration is sensitive to the input images. Hence, it is common that different atlases may produce different registration qualities, and therefore segmentations with different qualities, for the same target image.\nTo improve label fusion accuracy, recent work focuses on developing segmentation quality estimations based on local appearance similarity and assigning greater weights to more accurate segmentations. For instance, the votes received by label l can be estimated b\u0177 \nwhere w i \u00f0x\u00de is a local weight assigned to the ith atlas, with P n i\u00bc1 w i \u00f0x\u00de \u00bc 1. One way to estimate the weight is based on local image similarity under the assumption that images with similar appearance are more likely to have similar segmentations. When the summed squared distance (SSD) and a Gaussian weighting model are used [33] , 1 the weights can be estimated by\nwhere N \u00f0x\u00de defines a neighborhood around x and Z\u00f0x\u00de is a normalization constant. In our experiment, we use a \u00f02r \u00fe 1\u00de \u00c2 \u00f02r \u00fe 1\u00de \u00c2 \u00f02r \u00fe 1\u00de cube-shaped neighborhood specified by the radius r. Since segmentation quality usually is nonuniform over the entire image, the estimation is applied based on local appearance dissimilarity. The inverse distance weighting has been applied as well [3] , [17] 2 :\nw i \u00f0x\u00de \u00bc 1 Z\u00f0x\u00de \nwhere and are model parameters controlling the weight distribution.\nDespite the highly competitive performance produced by these image similarity-based local weighted voting approaches [16] , [3] , [22] , the key limitation of these methods is that they assign voting weights to each atlas independently and thus cannot account for the fact label errors produced by different atlases may be correlated, as pointed out in Section 1. Next, we introduce a method to address this limitation."}, {"section_title": "JOINT LABEL FUSION", "text": "For simplicity, in the theoretical exposition that follows we consider binary segmentation, i.e., segmentation into foreground and background labels. We assume that each voxel in the target image is labeled 0 or 1, and that each atlas segmentation also assigns 0 or 1 to each voxel. Probabilistic segmentation (where each voxel is assigned a probability of having a given label) can also be achieved in practice by using the same weighting scheme as we develop below. Likewise, a segmentation problem with more than two labels can be decomposed into multiple binary segmentation problems, i.e., segmenting each label from the remaining labels. Our method can be applied to multilabel segmentation problems by producing weight maps as described below, using weighted voting to compute a consensus segmentation for each label, and selecting at each voxel the label with the highest value of the consensus segmentation.\nIn binary segmentation, we can model segmentation errors produced in atlas-based segmentation as follows:\nwhere i \u00f0x\u00de is the label difference between the ith atlas and the target image at x. i \u00f0x\u00de 2 f\u00c01; 0g when S i \u00f0x\u00de \u00bc 1 and i \u00f0x\u00de 2 f0; 1g when S i \u00f0x\u00de \u00bc 0. We model the label difference as a discrete random variable, characterized by the following distribution:\nWe adopt the weighted voting framework, where at each x, a consensus segmentation S\u00f0x\u00de is generated as the weighted sum\nwhere w i \u00f0x\u00de are spatially varying weight maps that add up to 1 at each x. Note that whereas the candidate and target segmentations are taken to be binary, the consensus segmentation S\u00f0x\u00de is not. Our aim is to find the set of voting weights that minimize the total expected error between S\u00f0x\u00de and the true segmentation S T \u00f0x\u00de, given by \nwhere w x \u00bc \u00bdw 1 \u00f0x\u00de; . . . ; w n \u00f0x\u00de and t stands for transpose. M x is a pairwise dependency matrix with\nM x \u00f0i; j\u00de estimates how likely atlases i and j are to both produce wrong segmentations for the target image, given the observed feature images. Note that the product i \u00f0x\u00de j \u00f0x\u00de can only take values 0 or 1, with i \u00f0x\u00de j \u00f0x\u00de \u00bc 1 if and only if both atlases produce a label different from the target segmentation.\nUnder this formulation, to achieve optimal label fusion, the voting weights should be selected such that the expectation of the combined label difference is minimized, i.e.,\nUsing Lagrange multipliers, we can derive a closed-form solution to this minimization problem, given by\nwhere 1 n \u00bc \u00bd1; 1; . . . ; 1 is a vector of size n. When M x is not full rank, the weights can be estimated using quadratic programming optimization [27] . However, the weights that minimize (13) are not unique. We take an alternative solution by always adding an identity matrix weighted by a small positive number to M x . With the conditioning matrix, we minimize the following objective function instead:\nHence, adding a small conditioning identity matrix can be interpreted as enforcing a regularization term that prefers more similar voting weights assigned to different atlases.\nTo make sure that the added conditioning matrix is sufficient to avoid inverting an ill-conditioned matrix and the resulting voting weights also give a solution close to the global minimum of the original objective function, w t x M x w x , should be chosen with respect to the scale of the estimated dependency matrix M x . We found that setting ' 1 \u00c0 2% of the maximal scale of estimated M x works well. In our experiments, we estimate M x using normalized intensity patches and the estimated M x is in the range of \u00bd0; 4 (see below). We apply conditioning identity matrices with a fixed weight \u00bc 0:1 in all of our experiments."}, {"section_title": "Toy Example", "text": "Suppose that a pair of atlases A 1 and A 2 produce statistically independent label errors for a given target image. If A 1 produces a wrong label 50 percent of the time and A 2 produces a wrong label 20 percent of the time, we have\nThe optimal voting weights computed by (14) are w \u00bc \u00bd0:2; 0:8 t .\nUsing (14) with a conditioning matrix with \u00bc 0:01 produces a solution w \u00bc \u00bd0:2115; 0:7885 t . By contrast, if we compute weights independently for each atlas, e.g., w i / p\u00f0j i j \u00bc 1\u00de \u00c01 , we obtain w \u00bc \u00bd2=7; 5=7 t . The expected total segmentation errors (9) for these three weight vectors are 0.18, 0.1801, and 0.1837, respectively. Now suppose that another atlas A 3 , which is identical to A 1 , is added to the atlas library. and the optimal voting weights are not unique any more, but obey the following constraint: w 1 \u00fe w 3 \u00bc 0:2 and w 2 \u00bc 0:8. The total weight assigned to the duplicated atlas remains the same. Using (14) with a conditioning matrix with \u00bc 0:01 produces a solution w \u00bc \u00bd0:1068; 0:7864; 0:1068 t . By contrast, if we compute weights independently for each atlas, e.g., w i / p\u00f0j i j \u00bc 1\u00de \u00c01 , we obtain the weight vector \u00bd2=9; 5=9; 2=9 t , with the weight for A 2 substantially reduced and the weight for the repeated atlas A 1 =A 3 boosted. The total expected errors for the three weighting strategies are 0.18, 0.1801, and 0.2099, respectively. Thus, unlike the scheme that assigns weights to atlases independently, the accuracy of the proposed scheme does not suffer from adding an atlas with redundant information. The same holds true even if atlases A 1 and A 3 are not identical but are strongly correlated."}, {"section_title": "Estimating M x from Intensity Similarity", "text": "Our approach relies on knowing M x , the matrix of expected pairwise joint label differences between the atlases and the target image. Note that these terms are conditioned on the target image and all atlas images. Assuming that given the target image and the atlas images in consideration, the pairwise joint label difference term is conditionally independent from the remaining atlas images, we simplify the term as follows:\nFurthermore, by assuming that given the image patches centered around the location in consideration, the pairwise joint label difference term is conditionally independent from distant voxels, we have\nIn the image registration and segmentation literature, it is a common practice to use local image information between two images to predict their label difference. To make our method more comparable to previous label fusion methods, we propose to adapt the inverse distance function (5) to estimate the probability of pairwise joint label difference as follows: \nThe constant of proportionality in (18) is irrelevant since multiplying M x by a positive constant does not change the solution w. Note that when i \u00bc j, i.e., M x \u00f0i; i\u00de is the inverse of the voting weight defined by inverse distance weighting function (5). Intuitively, our approximation is based on the assumption that the expectation of the label difference produced by one atlas is large when the image intensity difference between the warped atlas and the target image is large. Similarly, the expectation of any two atlases both producing a label difference is large only when both atlases have large intensity differences from the target image and the error patterns are strongly correlated."}, {"section_title": "Refining Label Fusion by Local Patch Search", "text": "Registration errors (i.e., failure by the registration algorithm to correctly recover correspondences between objects in images) are the principal source of error in MALF. Because of the regularization constraints involved in registration, and for other reasons, such as failure to reach a global optimum of the registration objective function, the correspondences computed by registration may not always give maximum local similarity between image patches. That is, given a patch F T \u00bdN \u00f0x\u00de in the target image and the patch F i \u00bdN \u00f0x\u00de in the ith registered atlas image, it is often possible to find a nearby point x 0 such that F T \u00bdN \u00f0x\u00de is more similar to the patch F i \u00bdN \u00f0x 0 \u00de than to the patch F i \u00bdN \u00f0x\u00de. As shown recently in [8] , [39] , MALF performance can be moderately improved by using the displaced patch F i \u00bdN \u00f0x 0 \u00de for computing the consensus segmentation of the target image. This local patch search technique can be viewed as refining the point-to-point correspondences computed by registration, while relaxing the regularization constraints that registration imposes on deformation fields.\nMotivated by this observation, we determine the local search correspondence map between the atlas i and the target image as follows:\ni \u00f0x\u00de \u00bc arg min\nNote that the domain of the minimization above is restricted to a neighborhood N 0 \u00f0x\u00de. Again, we use a cubic neighborhood definition, specified by a radius r s . Note that N 0 and N may represent different neighborhoods. Given the set of local search correspondence maps f i g, we refine the definition of the consensus segmentation (8) as\nTo search for the most similar image patches, larger search windows N 0 are more desirable. However, using larger searching windows more severely compromises the regularization constraint on the deformation fields, which makes the task of predicting label differences from local appearance similarities more ambiguous. As a result, the approximation (18) may become less effective. It is reasonable to expect an optimal search range that balances these two factors."}, {"section_title": "EXPERIMENTS", "text": "In this section, we apply our method to two segmentation problems using two types of magnetic resonance (MR) images. The first problem is whole hippocampal segmentation using T1-weighted MRI. We choose this problem because hippocampus segmentation is one of the most studied problems in brain image analysis. The hippocampus plays an important role in memory function [36] . Macroscopic changes in brain anatomy, detected and quantified by magnetic resonance imaging (MRI), consistently have been shown to be predictive of AD pathology and sensitive to AD progression [34] , [9] . Accordingly, automatic hippocampus segmentation from MR images has been widely studied, e.g., [6] , [24] , [29] . On the other hand, the hippocampus is not a homogeneous structure. It contains several distinct subfields with different roles and susceptibilities to pathology. A number of recent studies (see the overview of the literature in [23] ) have proposed imaging techniques and manual segmentation protocols aimed at accurately measuring hippocampal subfield volumes. Clinical utility of hippocampal subfield volumetry was recently demonstrated in dementia (e.g., [25] , [26] ) and other brain diseases. Hence, automatic hippocampal subfield segmentation is attracting more attention. In the second experiment, we apply our label fusion method to hippocampal subfield segmentation using focal T2-weighted MRI.\nSince recent empirical studies, e.g., [3] , [33] , have shown that image similarity-based local weighted voting is the most effective label fusion approach compared with other benchmark segmentation tools such as STAPLE [40] and FreeSurfer [11] , in our experiments we focus on comparing our joint label fusion method (LWJoint) with similaritybased local weighted label fusion. For local weighted label fusion, we apply Gaussian weighting (4) (LWGaussian) and inverse distance weighting (5) (LWInverse). We also use majority voting and STAPLE [40] to define the baseline performance.\nOur method has three free parameters: r, the radius of the local appearance window N used in similarity-based M x estimation; r s , the radius of the local searching window N 0 used in remedying registration errors; and , the parameter used to transfer image similarities in the pairwise joint label difference term (18) . For each segmentation experiment, the parameters are optimized by exhaustive search among a range of values in each parameter (r 2 f1; 2; 3g for whole hippocampus segmentation and r 2 f3; 4; 5g for subfield segmentation; r s 2 f0; 1; 2; 3g; 2 f0:5; 1; . . . ; 10g) using the atlases in a leave-one-out crossvalidation strategy. We measure the average overlap between the automatic segmentation of each atlas obtained via the remaining atlases and the reference segmentation of that atlas, and find the optimal parameters that maximize this average overlap. The optimal local appearance window and optimal local searching window are determined for LWGaussian and LWInverse methods using cross validation as well. In addition, the optimal parameters for the weight assignment models are also determined for LWGaussian and LWInverse, with the searching range 2 \u00bd0:05; 0:1; . . . ; 1 and 2 \u00bd0:5; 1; . . . ; 10, respectively.\nIn our experiment, we normalize the intensity vector obtained from each local image intensity patch such that the normalized vector has zero mean and a constant norm for each label fusion method. Note that the normalization is applied independently at each image location, which may make the resulting voting weights for nearby voxels in an atlas less consistent with each other. To enhance the spatial consistencies of voting weights for nearby voxels, we apply mean filter smoothing with the smoothing window N , the same neighborhood used for local appearance patches, to spatially smooth the voting weights for each atlas."}, {"section_title": "Segmentation of the Hippocampus", "text": "We use the data in the Alzheimer's Disease Neuroimaging Initiative (ADNI).\n3 ADNI MRI data include 1.5 T structural MRI from all 800 subjects and 3 T structural MRI from 200 subjects. Our study is conducted using only 3 T MRI and only includes data from mild cognitive impairment (MCI) patients and controls. Overall, the dataset contains 139 images (57 controls and 82 MCI patients). The images were acquired sagittally, with 1 mm \u00c2 1 mm in-plane resolution and 1.2 mm slice thickness. To obtain manual segmentation for these data, we first apply a landmarkbased semi-automatic hippocampal segmentation method [29] to produce the initial segmentation for each image. Each fully labeled hippocampus was then manually edited using the paintbrush and polygon manual segmentation tools in ITK-SNAP [42] by one of the authors (MA) following a previously validated protocol [15] .\nSegmentation performance is evaluated using cross validation. Note that cross validation is performed twice, once to separate the dataset into an atlas subset and a test subset, and the second time to search for the optimal value of the label fusion parameters among the atlas subset. For outer cross validation, we randomly select 20 images to be the atlases and another 20 images for testing. Image-guided registration is performed between all pairs of atlases, and between all atlases and the target image. Global registration was performed using the FSL FLIRT tool [35] with six degrees of freedom and using the default parameters (normalized mutual information similarity metric; search range from -5 to 5 in x, y, and z). Deformable registration was performed using the ANTS Symmetric Normalization (SyN) algorithm [4] with the cross-correlation similarity metric (with radius 2) and a Gaussian regularizer with \u00bc 3. After registration, reference segmentations from each of the atlases were warped into the target image space. Fig. 1 illustrates optimal label fusion parameter selection for the three methods in the first cross-validation experiment. The figure plots the number of voxels mislabeled by the automatic segmentation, averaged over 20 inner crossvalidation experiments, against the value of each parameter. Note that although the figure plots each parameter separately, the actual search for optimal parameters considers all possible combinations of parameter values. Note that using the appearance window with r \u00bc 1, all methods performed significantly worse than using larger appearance windows. This indicates that estimation of joint atlas error probabilities in (18) is inaccurate for very small appearance windows. For this cross-validation experiment, the optimal parameters for LWGaussian, LWInverse, and LWJoint are ( \u00bc 0:05, r \u00bc 2, r s \u00bc 2), ( \u00bc 6, r \u00bc 2, r s \u00bc 2), and ( \u00bc 0:5, r \u00bc 2, r s \u00bc 3), respectively. In all 10 cross validations, for all three methods the optimal appearance window has radius r \u00bc 2. Most frequently selected local search windows have radius r s \u00bc 2 or r s \u00bc 3. For LWGaussian, the most frequently selected weighting model parameters are 0.05 or 0.1. For LWInverse, the most frequently selected model parameters are located in the range \u00bd4; 6, while for LWJoint, the most frequently selected are located in the range \u00bd0:5; 1:5. Table 1 shows the segmentation performance of each method in terms of Dice similarity coefficient between MALF results and reference segmentations. The Dice similarity coefficient is the ratio of the volume of overlap between two segmentations and their average volume [10] . Average overlap (and standard deviation) is reported, with averaging over all 10 outer cross-validation experiments and over the 20 test images in each experiment. In each outer cross-validation experiment, optimal parameters are computed for each method using inner cross validation. In addition to the local weighted voting methods, we also show the performance by the STAPLE algorithm [40] and majority voting. Overall, STAPLE slightly outperformed majority voting. LWGaussian and LWInverse produced similar results, both significantly outperforming majority voting and STAPLE. LWJoint outperformed LWGaussian and LWInverse over 1 percent Dice overlap. This improvement is statistically significant, with p < 0:00001 on the paired Student's t-test for each cross-validation experiment. Table 1 also gives the results produced by each local Fig. 1 . Optimal label fusion parameter selection for LWGaussian (left), LWInverse (middle), and LWJoint (right) using leave-one-out cross validation. The upper figures plot the average number of mislabeled voxels against the local searching radius r s and the appearance window radius r. The weighting function parameters , are held fixed in these figures at its optimal value for the three methods, respectively. The lower figures plot the average number of mislabeled voxels against the local searching radius r s and the weighting function parameter, and , respectively. The appearance window radius r is held fixed in this figure at its optimal value. weighted voting method without using local search. Our method produced significant improvement over the competing methods without local search as well. See Fig. 2 for a segmentation example produced by our method and LWGaussian. Table 2 presents the average hippocampal volume in control and MCI cohort obtained using different label fusion techniques. The corresponding Cohen's d effect size [14] is also shown (computed as the difference of the sample means of the two cohort, divided by the pooled sample standard deviation). To account for differences in head size, the effect size is computed after normalizing the hippocampal volumes by the subject's intracranial volume. Larger values of Cohen's d indicate greater effect, i.e., greater ability to tell cohorts apart based on hippocampal volume. Our method produced more accurate volume measurements than LWGaussian and LWInverse, compared to the reference segmentations. Since volume differences produced by different automatic segmentation methods are all proportional to that of manual segmentation, the hippocampus volume measured using different methods shows similar separability between the two population groups. LWJoint yields a slightly better effect size than other MALF methods, indicating the volume measurements produced by LWJoint find a slightly more significant difference between the two populations. All MALF algorithms yield greater effect sizes than manual segmentation, likely due to reduced variance in volume estimation."}, {"section_title": "Hippocampal Subfield Segmentation", "text": "To illustrate the performance of LWJoint on a segmentation problem with multiple labels, we apply it to the problem of automatic segmentation of the subfields of the hippocampal formation from oblique coronal T2-weighted MRI. Our experiments use different similarity weighted voting strategies to improve upon the segmentation results presented in our earlier work [43] . This earlier work also used MALF with spatially varying similarity-weighted label fusion, but the strategy employed there did not consider optimality, and as we show below, performed worse than any of the local weighted voting methods considered here."}, {"section_title": "Imaging Data, Manual Segmentation and Experimental Setup", "text": "The experiments use in vivo MRI from 32 subjects from an aging and dementia study [26] . The data were acquired on a Bruker Med-Spec 4T system controlled by a Siemens Trio console and equipped with a USA Instruments eight channel array coil that consisted of a separate transmit coil enclosing the eight receiver coils. The following sequences, which were part of a larger research imaging and spectroscopy protocol, were acquired: 1) 3D T1-weighted gradient echo MRI (MPRAGE) TR=TE=TI \u00bc 2300=3=950 ms, The T1-weighted and T2-weighted MR images have complimentary characteristics. The T2-weighted MRIs depict details of the internal structure of the hippocampus with high in-slice resolution and good contrast between subfields, but these images also have a limited field of view and large slice spacing. On the other hand, the T1-weighted images have nearly isotropic voxels and cover the entire brain, but lack contrast between subfields. Manual segmentation protocols that can reliably subdivide the hippocampus into subregions corresponding to its anatomical subfields have been developed for focal T2-weighted data [44] , [26] . Our manual segmentation protocol is derived from [26] ; it has been expanded to include more slices and additional subfields. Each hippocampus formation is partitioned into anterior (head), posterior (tail), mid-region (body), subiculum (SUB), entorhinal cortex (ERC), and parahippocampal gyrus (PHG). The hippocampal body is further divided into cornu Ammonis fields 1-3 (CA1-3), dentate gyrus (DG), and a miscellaneous label, which contains cysts, arteries, etc. Manual segmentation of hippocampal subfields is unreliable in the head and tail. The boundaries between the head, tail, and body regions are defined by a pair of slices in the MRI image. Overall, there are nine subfields defined. See [43] for more detail about the manual subfield segmentation.\nAs in whole-hippocampus segmentation, we perform a series of 10 cross-validation experiments. In each, 22 subjects are randomly selected as atlases, and the remaining 10 are selected for testing. Registration between all pairs of subjects is performed using SyN using a multimodality similarity term that assigns equal weight to the T1-weighted image similarity and T2-weighted image similarity (see [43] for details). However, as in [43] , similarity-weighted label fusion is applied only using T2-weighted image intensities. The motivation for this is that the T1-weighted MR images mainly serve to align the hippocampal region, while the T2-weighted MR image provide details used for subfield alignment.\nSince the in-plane resolution of the T2-weighted images is much higher than slice thickness, instead of the cubic neighborhood definition used in the whole hippocampus segmentation experiment we use an anisotropic neighborhood Fig. 3 illustrates some of the parameter selection experiments for the three methods using the atlases in the first outer cross-validation experiment. For this cross-validation experiment, the optimal parameters for LWGaussian, LWInverse, and LWJoint are ( \u00bc 0"}, {"section_title": "Results", "text": "In all 10 cross validations, all three label fusion methods select the same optimal appearance window and optimal local searching window, which are r \u00bc 3 and r s \u00bc 3, respectively. For LWGaussian, the most frequently selected weighting model parameters are 0.1 or 0.15. For LWInverse, the most frequently selected model parameters are located in the range \u00bd4; 6, while for LWJoint, the most frequently selected are in the range \u00bd1:5; 2:5. Table 3 reports the average segmentation accuracy, relative to manual segmentation, obtained by majority voting, STAPLE, 4 our earlier work [43] , LWInverse, LWGaussian, and LWJoint. For this application, STAPLE performed comparably to majority voting. Again, LWGaussian and LWInverse produced similar performance, which is significantly better than majority voting and STAPLE. Our method produced the best average Dice similarity for all subfields. On average, we outperformed similarity-based label fusion methods by $1 percent Dice similarity. Improvements made by LWJoint for most subfields are statistically significant. Table 3 also reports the optimal results produced by each local weighted voting methods without applying local search; our joint method outperformed the competing methods in most subfields as well. Fig. 4 shows some segmentation results produced by different methods.\nNote that since the same set of cross-validation experiments (with the same atlas/test partitions in each) were conducted in [43] , the segmentation accuracy reported there can be directly compared with our results. In [43] , a different local weighting algorithm was implemented. Instead of using Gaussian or inverse distance weighting, weights used in [43] were normalized by the image similarity rank. Unlike our implementation of image similarity-based local weighted label fusion, the implementation in [43] did not apply the local searching technique. Furthermore, [43] did not select the optimal parameters for each cross-validation experiment. As a result, the Dice scores produced by LWInverse and LWGaussian similarity-based weighted voting without local search are slightly better than those reported in [43] , and the results with local search are on average about 1 percent higher for all subfields. Our method outperformed [43] by about $2 percent on average.\nThe manual segmentation protocol in [43] always uses slice boundaries to delimit the hippocampal body from the head and tail. This is an artificial boundary, necessitated by the anisotropy of the T2 images, for which there is no real anatomical counterpart. In fact, head, body, and tail do not truly constitute different anatomical regions, but rather separate regions of the hippocampus where partitioning into subfields is deemed reliable or unreliable due to the bending and folding of the hippocampus. Thus, to make the comparisons between automatic and manual segmentation more fair, [43] allows the automatic algorithm to make use of the manual partitioning of slices into head, body, and tail. This is accomplished by a heuristic \"fix-up\" algorithm. For example, if MALF labels a voxel as HEAD, but the slice is considered a body slice by the manual rater, the MALF result is changed by choosing the body subfield (i.e., CA1-4, DG, or SUB) with the highest label probability. Table 4 presents the results of LWGaussian, LWInverse, and , and LWJoint (right) using leave-one-out cross validation. The upper figures plot the average number of mislabeled voxels against the local searching radius r s and the appearance window radius r. The weighting function parameters , are held fixed in these figures at its optimal value for the three methods, respectively. The lower figures plot the average number of mislabeled voxels against the local searching radius r s and the weighting function parameter, and , respectively. The appearance window radius r is held fixed in this figure at its optimal value.\nLWJoint label fusion strategies with/without local search, after applying the fix-up algorithm. Again, LWJoint is the top performer, with accuracy for all subfields except CA3, TAIL, ERC within 1.5 percent of the interrater precision."}, {"section_title": "CONCLUSIONS AND DISCUSSION", "text": "We presented a novel formulation to solve the weightedvoting based label fusion problem. Unlike previous label fusion techniques that independently assign voting weights to each atlas, our method takes the dependencies among the atlases into consideration and attempts to directly reduces the expected label error in the combined solution. Provided estimated pairwise dependencies among the atlases, the voting weights can be efficiently solved in a closed form. In our experiments, we estimated the pairwise dependency terms from local image intensities and compared our method with previous label fusion methods in whole hippocampus segmentation and hippocampus subfield segmentation using MR images. For both problems, our method outperformed competing methods."}, {"section_title": "Comparing to the State-of-the-Art in Hippocampus Segmentation", "text": "Since the hippocampus segmentation problem has been widely studied, putting our results in context helps to reveal the significance of our results. Before making a formal comparison, we note that, as pointed out in [7] , direct comparisons of quantitative segmentation results across publications are difficult and not always fair due to the inconsistency in the underlying segmentation protocol, the imaging protocol, and the patient population. However, the comparisons carried out below indicate the highly competitive performance achieved by our label fusion technique. In the recent hippocampus segmentation literature, some of the best reported accuracy results have been obtained using MALF [7] , [8] , [20] . All three of these best-performing methods are based on independent label fusion with similarity-based local weighting. Collins and Pruessner [7] and Coupe et al. [8] conduct leave-one-out experiments in a dataset containing 80 control subjects, i.e., 79 atlases are used in their experiment. They report average Dice overlaps of 0.887 and 0.884, respectively. In contrast, we report average Dice overlap of 0:900 AE 0:020 for control subjects, more than 1 percent Dice overlap improvement. For patients with MCI, we report Dice overlap of 0:885 AE 0:028. Leung et al. [20] use a template library of 55 images. However, for each image in the library, both the original and its flipped mirror image are used as atlases. Hence, [20] effectively uses 110 atlases for label fusion. Leung et al. [20] report results in terms of the Jaccard index (JI\u00f0A; B\u00de \u00bc jA\\Bj jA[Bj ), reporting an average of 0:80 AE 0:03 for the left side hippocampus in 10 control subjects and 0:81 AE 0:04 in 10 MCI patients. Our results for the left side hippocampus, in terms of JI, are 0:826 AE 0:031 for controls and 0:803 AE 0:041 for MCI patients. Overall, we produced results that compare favorably to the state of the art, using significantly fewer atlases."}, {"section_title": "Computational Complexity", "text": "Comparing to independently assigning voting weights to each atlas, our method requires an additional step of solving the inverse of the pairwise dependence matrix. Since the number of atlases applied in practice is often small, solving the matrix inverse does not substantially increase the computational burden for label fusion. In fact, the most time consuming step is the local searching algorithm. Without the local searching algorithm, for our hippocampus segmentation experiment on ADNI data our algorithm segments one hippocampus in a few seconds on a single core 2G HZ CPU using our current Matlab implementation. Regardless, the vast majority of the computational time is spent performing deformable registration between the atlases and the target image, and the cost of label fusion is negligible in comparison."}, {"section_title": "Relation to the STAPLE Algorithm", "text": "Comparing to the popular expectation-maximization-based STAPLE algorithms [40] , [31] , there are two key differences in our work. First, like other label fusion methods, the STAPLE algorithms also assume that the segmentation errors from different candidate segmentations are independent. Hence, they cannot reduce consistent bias in the candidate segmentations. Second, the classic STAPLE algorithms ignore the appearance information in the target image and the atlas images after the registration. This limitation may affect the reliability of the estimated accuracy in each candidate segmentation."}, {"section_title": "Estimation of the Pairwise Dependency Matrix", "text": "The label fusion accuracy of our method depends on the accuracy of the estimated pairwise dependencies between atlases. Hence, one natural way to extend our work is to improve the pairwise dependence estimation. Following the common practice, our current method uses the image intensity to estimate the segmentation label relations. Since local image appearance similarity may be unreliable in predicting registration errors, to further improve the performance one can incorporate prior knowledge that is empirically learned from the atlases to compliment the similarity-based estimation. For example, to estimate the optimal parameters for label fusion method, we applied a leave-one-out strategy on the set of atlases that segments each atlas using the remaining atlases. These leave-one-out experiments also provide the error redundancy produced by each pair of the remaining atlases in the native space of each segmented atlas. By registering and warping each atlas to a common reference space, one can estimate the empirical average error redundancy between any pair of the atlases. The empirical estimation complements the local appearance-based estimation and can be combined with the appearance-based estimation for segmenting new images. This is a natural direction for future research.\nDisease Cooperative Study at the University of California, San Diego. ADNI data are disseminated by the Laboratory for Neuro Imaging at the University of California, Los Angeles. This research was also supported by NIH grants P30 AG010129, K01 AG030514, and the Dana Foundation. . For more information on this or any other computing topic, please visit our Digital Library at www.computer.org/publications/dlib."}]