[{"section_title": "Abstract", "text": "Iterative learning control (ILC) is used as a means for task execution of a time sub-optimal trajectory. The use of cascaded ILC procedures in a robot application is experimentally shown to drastically enlarge the region of convergence and efficiently compensate for unmodeled dynamics in the motion system. Objectives considered are the duration of motion, maximum liquid slosh during the motion, and the residual slosh after the motion."}, {"section_title": "Introduction", "text": "Although time-optimal control lends itself to trajectory generation in mechatronic and robotic motion control, such theory provides few clues as to its implementation. One of the first aspects of motion control is whether to rely on open-loop control or solutions involving feedback control. Many industrial control solutions use open-loop solutions only and there are many obstacles to the use of sensor feedback. Among feedback control solutions one can distinguish among feedback used for dynamic control loops, adaptive control and iterative learning control. Iterative learning control (ILC) singles out itself as the most suitable method to improve on repetitive tasks without excessive requirements on sensor-feedback quality or control-loop bandwidth [l, 141. Moreover, ILC permits the application to trajectories obtained from a variety of sources including open-loop control, time-optimal control, and modelpredictive control (MPC).\nWe have chosen to study the usage of 'cascaded ILC' as a means to improve control performance of time suboptimaYminimum energy based control by adapting the solution to unmodeled dynamics present in the mechatronic environment of a packaging machinelrobot. This paper deals with a control problem common in machines for packaging fluids. The operation of a packaging machine can be divided into three independent sub tasks: folding, fill- setup for experimental evaluation of generated trajectories (lower). The arrow (-) in the lower picture indicates the horizontal motion of the container.\ning, and sealing. These tasks are performed simultaneously on three different packages. The operation of the machine is as follows: The folded package is placed in a holder which carries the package through the machine. The movement of the package, which we will concentrate on, is stepwise and the same movement is repeatedly applied in every step and on every package in the machine (Fig. 1) .\nRecently, movement of open containers containing liquid has been investigated with the goal to move as fast as possible without slosh, see [18,6,5,7].\nThe outline of the paper is as fcillows: In Section 2 we state the problem and relate to previously presented results. Section 3 outlines our proposed method and the experimental evaluation is described in Section 4 and concluded in Secs. 5-7."}, {"section_title": "Problem formulation", "text": "The package contains liquid when it is moved between the filling station and the sealing station. Acceleration of the package induces motion of the liquid in the package, this is referred to as slosh or liquid vibration. The amount of slosh depends on how the package is accelerated, the geometry of the package and the properties of the fluid. If there is too much slosh, the liquid might splash out of the package and contaminate the machine or onto the sealing surfaces. This can result in packages that are not properly sealed and possibly not airtight.\nThe problem is to move the container as fast as possible under the constraint of low slosh during the motion and rapid decay of the waves after each stop in order to increase the production rate and thereby lower the packaging cost.\nExperiments show that the behavior of the slosh is very repeatable for a given acceleration profile, which makes it suitable for the application of Iterative Learning Control.\nThe movement of the packages is usually controlled by a conveyer servo system which controls the position of the packages along one degree of freedom. In our case we have used an industrial robot for the motion control, therefore we need to control at least three degrees of freedom. To mimic the motion the fluid. Modeling of liquid slosh in open containers has been studied in several applications, e.g., ship dynamics, fuel slosh in aerospace application, movement of containers and has been used for earthquake analysis.\nThe nonlinear effects are evident for very rapid movements when the surface elevation is large and the nonlinear phenomena include a nonlinear amplitude dependent oscillation frequency and asymmetric oscillation. Various linear and nonlinear models for small surface oscillation amplitudes were presented in e.g., [17, 121. A review of the slosh modeling problem can be found in [7] .\nA simple linear model which captures the behavior well for small amplitudes is given by where x2 is the surface elevation in meters, x1 is the time derivative of the surface elevation divided by O, x3 is the container velocity, x4 the container position, o the natural frequency of the fluid oscillation, 2 an equivalent motor constant for the horizontal motion and vrjn(t) the desired linear reference velocity for the container. control system of the conveyor belt, an acceleration reference is specified which is integrated to obtain a velocity and a position reference. For an industrial implementation the only measurement available to the servo system is the position of the container. The measurements of the liquid elevation by a laser sensor on the experimental platform is only used for off-line update of the acceleration profile. Therefore, the only way to control the slosh is open loop via the reference trajectory.\nFor a rectangular container with liquid depth h and width a the oscillation frequency of the first harmonic is given by the following expression:\nwhich gives the value o = 21 .O rads for the container used in the experiments of Section 4."}, {"section_title": "Methods", "text": ""}, {"section_title": "Iterative learning control", "text": "The method of iterative learning control (ILC) applies well to the repetitive nature of the task we consider. Early contribution to ILC applied in robotics were made in [16, 1, 3,4]. During the last years ILC has re-gained a lot of attention, see e.g., [ 11, 141 and the references therein.\nThe general update law for a one-step ILC in'discrete time can be written\n(1) where Q(q) and L(q) are linear filters and ek(t) = r(t) -y k ( t ) is the output error with respect to the desired reference r(t). As the update law applies to a whole time sequence of measurements (iteration k), there are no restrictions on causality of Q(a) and W ."}, {"section_title": "Slosh", "text": "The amount of slosh depends on how the package is accelerated, the geometry of the package, and the properties of\nThe following constraints should be considered:\nWith a model of the slosh available, the acceleration reference can be calculated using optimal control techniques [2,15]."}, {"section_title": "Slosh LLC", "text": "The drawback with the minimum-time solution is that it is very sensitive to model uncertainties as shown in [8] . Grundelius and Bernhardsson instead suggested to use the solution of a Minimum Energy Problem, which generates a much smoother acceleration profile already for a marginal increase in time to the time optimal solution. The update law is similar to algorithms presented in e. g., [lo, 81."}, {"section_title": "Initial acceleration profile, uo(t):", "text": "The initial acceleration profile uo(t) for the iterative slosh update is taken as the sampled version of the continuous solution uc(t) to the Minimum Energy Problem (4) subject to the constraints (Cl-C4). Top* is the time from the solution of the minimum-time problem and A can be viewed as a tuning parameter relaxing the solution by offering more time."}, {"section_title": "Update law for uk(t):", "text": "The update law for correction of the acceleration profile is based on discrete time algorithm presented in [9] .\nFrom the linear slosh model and the initial value U&) of the Minimum Energy Problem a reference #(t) for the surface elevation on the backward side of the package and an initial acceleration reference ug(t) can be obtained.\nThe derivation of the update law considers a sampled discrete time version of the system where uk(t) denotes the acceleration reference of iteration k at time t = n . tsmp. where tsmp is the sample time. The algorithm uses measurements of the slosh elevation on the backward and on the forward side of the package for each iteration k. These are denoted by $ ( t ) and"}, {"section_title": "Y i ( t )", "text": "The optimal update laws is the correction to the previous reference &k(t) = uk+l ( t ) -uk(t) which minimizes the prediction error ek+l ( t ) = r ( where the constraint A8Uk = 0 is a sampled version of the constraints C3 and C4. The choice for the weighting matrices W1 , W2, W, gives a trade-off between the slosh error and the control signal. The solutions to Eq. 6 can be parameterized as 6Uk = ker(A)9, where 9 is an arbitrary vector. Inserting this expression gives\nwhich can be written in the form of Eq. 5."}, {"section_title": "Robot system", "text": "The robot controller was implemented in the most simple way as distributed joint controller!; without any feedforward terms to compensate for cross-coupling effects between the joints. Each joint controller consists of cascaded PI-controllers for velocity and position control to which the integrated acceleration references are fed."}, {"section_title": "Robot JLC", "text": "At iteration k the slosh L C algorithm calculates the acceleration profile uk+l(.), which should be applied to the package, mounted at the robot TCP.\nThe reference trajectories to the robot joints involved in the movement are then calculated via the inverse kinematics. As the motion is along a straight line in the plane as indicated in Fig. 1 , we can restrict our:selves to use only three joints of the robot to generate the trajectory: Joint 2 and Joint 3 for the horizontal motion and Joint 6 to compensate for the rotation of the package.\nAs each joint is independently controlled we approximate the closed loop system from the angular position reference to the angular position response with a first order linear continuous time model. That is for the generic Joint i:\nThe parameters ai in Eq. (8) were identified from simple step response experiments. As will be shown in Section 5 neglected cross-couplings between the links and unmodeled resonant dynamics deteriorate the desired performance considerably before compensation (at iteration k = 0).\nThe joint model of Eq. (8) iij used for the implementation of the model-based ILC algorithm as well as for the heuristic method described in [ 141. Simulations with the two ILC methods gave rather similar results, wherefore the heuristic method was implemented in the experiments."}, {"section_title": "Task executive ILC algorithm", "text": "The general algorithm used in the experiment includes the use of the slosh L C and the robot ILC according to the following scheme: ( I ) well enough, go to step 3.1."}, {"section_title": "4.", "text": "Execute an iteration of slosh E C by reproducing on the robot the acceleration U;(?) performed in the last iteration of robot ILC.\n5. k + k + l 6. Calculate the new acceleration uk (1) using the slosh ILC algorithm. 7 . If the slosh behavior needs to be improved go to step 3."}, {"section_title": "Experiments", "text": ""}, {"section_title": "Experimental setup", "text": "The experiments were implemented using the Open Robot Control System (ORC) at the Robotics Laboratory, Dept. of Automatic Control, Lund 1131. The manipulator is an industrial robot with six degrees of freedom, Irb2000, manufactured by ABB Robotics. The ORC system entitles full freedom to implement own low-level controller software by for instance down-loading and dynamically linking compiled Matlab/Simulink-code to the robot real-time system as well as it provides convenient methods to implement the high-level ILC-controller on a host computer which receives batch-data from the robot system and down-loads new reference trajectories for the next iteration.\nThe motion for moving the package horizontally is generated by providing position and velocity references for three of the distributed joint controllers of the robot (joint 2 and joint 3 for the horizontal motion and joint 6 for controlling the orientation of the package).\nThe container is attached to the tool center point of the robot and an infrared laser scanner is mounted above it to measure the slosh, see Fig. 2 .\nThe sampling time for the laser sensor and for the update of references to the position control loop is tsmp = 5 ms.\nTo get a good description of the slosh in the package during motion, measurements of the liquid elevation on both sides of the container ('backward side' and 'forward side') are needed. However, in the experiments only one sensor is available (located on the 'backward side'), see Fig. 2 . It is possible to overcome this problem by performing the same movement twice. The first time the package is moved forward by a spatial acceleration uk(t) the backward side surface elevation $ ( t ) is measured. After the distance d = 0.2 m has been covered the robot waits some seconds, necessary to let the residual slosh inside the container decrease towards zero. After that the robot moves the container backwards to the starting position with spatial acceleration -U,&). The backward motion thus makes it possible to measure the same surface elevation d(t) on the backward side which is present on the forward side when the robot moves forward."}, {"section_title": "Results", "text": "Initial experiments without 'the outer reference iterations' (robot ILC) were tested in case 'the slosh ILC' would be able to compensate also for the uncertain dynamics in the motion control system. However, this approach showed very poor convergence performance for fast motions and the behavior of the slosh was very sensitive to the effects of the resonant modes excited by cross-couplings between the joints.\nThe convergence of the trajectories for Joint 3 using the 'robot ILC' is shown in Fig. 3 . The effect of the cross-couplings between the joints is clearly seen in the overshoot of the velocity signal. The controller for Joint 3 is not perfectly tuned as there is a small overshoot also when we are 'locking' joint 2, but these effects are all taken care of by the reference update.\nUsing the combination of 'robot ILC' and 'slosh ILC' as outlined in Section 3 reduces the slosh considerably, see Fig. 4 for T = 0.46 s . For slower motion the residual will be further reduced. Fig. 5 shows a comparison between the initial acceleration profile and the updated acceleration reference after for T = 0.46 s. The initial trajectory is generated by solving the Minimum Energy Problem. It was experimentally verified that for slow transition times the linear slosh model gave a good description of the true system, while the deviations grew larger with faster motion. However, the ILC procedure manages to capture and compensate for the model uncertainties.\nIn Fig. 6 the residuals for the first three iterations of the slosh ILC, T = 0.46 s, are shown together with a measure of the remaining energy in the residual, which clearly decreases with the iterations. However, after 3 or 4 iterations in general no improvements were made for the slosh ILC.\nIn Fig. 7 we see that the results improve for a longer transition time (slower motion), T = 0.7 s, as could be expected. the horizontal and rotational acceleration references by solving a minimum energy optimal control problem.\nAs the angle measurements of the robots are co-located with the actuators excessive numb'er of 'outer reference iterations' may very well reduce the position and velocity errors on the motor-side, but may cause undesired motion on the arm-side, see also [ 141."}, {"section_title": "Discussion", "text": "7 Conclusions The experimental setup was implemented on an open robot control system using an industrial manipulator to mimic the horizontal motion of a packaging machine. Even though the \"conveyor belt-type-of-motion\" described above may be the best motivated one from an industrial point of view for this application, other trajectories could be considered for further reduction of time and slosh. A method that utilize tilting of the container was derived in [7] , which enables faster movements with less slosh. The methods simultaneously calculate An iterative procedure to optimal motion control of liquid containers has been suggested arid evaluated experimentally. The procedure combines 'outer iterations' for reference following with 'inner iteration' for slosh reduction. The cascaded use of the ILC procedures enlarges the region of convergence significantly and efficiently comptmsates for unmodeled dynamics in the motion system. "}]