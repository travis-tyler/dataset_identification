[{"section_title": "Abstract", "text": "Medical image analysis using deep neural networks has been actively studied. Deep neural networks are trained by learning data. For accurate training of deep neural networks, the learning data should be sufficient, of good quality, and should have a generalized property. However, in medical images, it is difficult to acquire sufficient patient data because of the difficulty of patient recruitment, the burden of annotation of lesions by experts, and the invasion of patients' privacy. In comparison, the medical images of healthy volunteers can be easily acquired. Using healthy brain images, the proposed method synthesizes multi-contrast magnetic resonance images of brain tumors. Because tumors have complex features, the proposed method simplifies them into concentric circles that are easily controllable. Then it converts the concentric circles into various realistic shapes of tumors through deep neural networks. Because numerous healthy brain images are easily available, our method can synthesize a huge number of the brain tumor images with various concentric circles. We performed qualitative and quantitative analysis to assess the usefulness of augmented data from the proposed method. Intuitive and interesting experimental results are available online at https: //github.com/KSH0660/BrainTumor Keywords brain tumor MR images \u00b7 data augmentation \u00b7 deep neural networks \u00b7 tumor image synthesis"}, {"section_title": "Introduction", "text": "Medical image analysis technologies have evolved considerably thanks to emerging deep neural networks. In general, well-annotated labels are required for supervised learning of deep neural networks. Several institutions provide public datasets of patient brain MRI images, such as BraTS [1] , ADNI, and ISLES. These datasets have good quality and easy accessibility, but the quantity of data might be insufficient for the learning of deep neural networks. It is very difficult to obtain a large amount of patient data, which is costly and time-consuming. In comparison, obtaining the medical data of healthy volunteers is relatively easy. In addition, there are many medical datasets obtained from healthy people, such as HCP [2] and OASIS.\nThe most common solutions to overcome the lack of patient data are data augmentation methods, such as flip, rotate, and color jittering. These methods are simple to implement and widely used, and they often yield decent performance gains. Variations of the position, angle, brightness, and contrast of an image can be efficient for data augmentation, but this approach has limitations in terms of sufficient diversity [3] .\nTo ensure diversity, there are several algorithms [4] [5] [6] [7] [8] for the synthesis of brain tumor images using a generative model, especially generative adversarial networks (GANs) [9] . Several GAN-based algorithms [4] [5] [6] use random noise vectors (i.e. unconditional GAN) as input data, and synthesize brain tumor images. However, unintended images could be generated by the unconditional GAN algorithms. Other algorithms [7, 8] use tumor masks rather than noise vectors as the input data for tumor image synthesis. They successfully synthesize brain tumor images as intended. However, because simple modification of tumor masks is done as the input condition, the synthesized images are not significantly different from the existing training dataset.\nThe proposed method synthesizes brain tumor images from normal brain images and concentric circles that are simplified tumor masks. The tumor masks are defined by complex features, such as grade, appearance, size, and location. Thus, these features of the tumor masks are condensed and simplified to concentric circles. In the proposed method, the user-defined concentric circles are converted to various tumor masks through deep neural networks. The normal brain images are masked by the tumor mask, and the masked region is inpainted with the tumor images synthesized by the deep neural networks. Because the non-tumor parts are not synthesized but filled with real normal brain images, the synthesized brain tumor images have a realistic appearance. In addition, in terms of data augmentation, a large number of tumor images can be generated because the number of normal images is much larger than that of patient images as shown in Table 1 . The remaining sections are organized as follows. Section 2 introduces previous works about the synthesis of medical images using GAN. Section 3 presents our proposed method, its training scheme, and various loss functions and implementation details. In Section 4, extensive experiments to evaluate the proposed method are presented. Some issues are discussed in Section 5. Finally, our conclusions are presented in Section 6."}, {"section_title": "Related Work", "text": ""}, {"section_title": "Medical Image Synthesis with Generative Networks", "text": "Tumor segmentation methods [10] [11] [12] have used conventional augmentation methods such as shift and rotation [10] , patch rotation [11] , and flip [12] , to improve the learning performance of the deep neural network. However, the diversity of data augmented by conventional methods is limited. To increase the diversity of data, previous works have used the GAN-based data augmentation methods [7, 8, [13] [14] [15] . In synthesizing the brain tumor magnetic resonance (MR) images, not only images but also tumor masks must be generated. This is because both images and tumor masks are used for supervised learning in the brain tumor segmentation. Conditional synthesis methods [7, 8] synthesize brain tumor images as well as tumor masks, whereas unconditional synthesis methods [13] [14] [15] synthesize only the brain tumor images.\nSeveral GAN methods (e.g. DCGAN [4] , WGAN [5] , PGGAN [6] ) have been studied for unconditional synthesis. They usually generate images from random noise. The learning phase may be simple, but there are limitations to generating the intended output. DCGAN is a basic and simple GAN method. Bermudez et al. [13] proposed a method that synthesizes brain tumor images using DCGAN. WGAN uses another optimization method, and generally produces better output performance; it was used to synthesize brain tumor images by Han et al. [14] . PGGAN is a progressive learning scheme for the best performance. Christopher Bowles et al. [15] proposed the method that synthesizes of brain tumor images by a PGGAN-based method. However, all of these methods have the disadvantage that they cannot be used for supervised learning because they are unconditional synthesis methods (i.e. only tumor images are synthesized without tumor masks).\nThe conditional synthesis methods do not generate the images from random noise, but from a brain tumor label map, where the brain tumor label map consists of a brain image and a tumor mask. They can be used as augmentation methods for supervised learning about tumor segmentation. Shin et al. [8] proposed a method that uses a pix2pix [16] model. This method synthesizes brain tumor MR images from brain atlas maps. Mok and Chung [7] proposed a coarse-to-fine GAN to synthesize brain tumor MR images using deformed label maps of 2D axial slices as conditional inputs. However, because the label map transformed from an existing one is used as the conditional input, the number of images that can be synthesized is limited and the results may be unrealistic. "}, {"section_title": "User-guided Image Inpainting through Deep Learning", "text": "There are several inpainting methods to fill holes in images using deep learning [17] [18] [19] [20] [21] [22] . The holes are filled with the contextual attention of the background [17] . It uses coarse-to-fine networks to fill the hole more harmoniously. Partial convolution is used to fill the holes in an image gradually from the outside [18] . Both global and local discriminators are used to harmonize the filled hole and the entire image [19] . The image inpainting was performed by finding variables with which the holes in an image can be inpainted well [20] . The methods mentioned above inpaint the hole in an image by using background.\nThere are several ways to inpaint images by user-guidance [21, 22] . A hole can be inpainted by using a synthesized image [21] . A free-form mask is filled by a user-guided sketch [22] . A given image was transformed into various images using guidance masks [23] . The network of [23] used the spatially-adaptive normalization of the feature maps for mask-dependency."}, {"section_title": "The Proposed Method", "text": "As shown in Fig.1 , the proposed method synthesizes multi-contrast brain tumor MR images using two kinds of inputs, namely, multi-contrast normal brain MR images and concentric circles. It consists of four networks; two networks of G binary and G grade for generation of the tumor mask, and two network of G inpaint and D inpaint for synthesis of the brain tumor images. At first, G binary generates a binary tumor mask,m binary , which represents the tumor's geometric features, that is, the size, position, and appearance. Second, G grade generates the grade of the tumor binary mask, whose output is the grade tumor mask,m grade . Finally, G inpaint synthesizes the multi-contrast brain tumor MR images, and D inpaint is the discriminator network to evaluate G inpaint .\nT denote the multi-contrast MR images of the brain tumor, and let m grade be the grade tumor mask. The superscripts of FLAIR, T1w, T1c, and T2w denote images obtained by fluid attenuated inversion recovery (FLAIR), and T1-weighted, contrast-enhanced T1-weighted, and T2-weighted imaging sequences, respectively. The multi-contrast normal brain images are denoted by use an operator, \u03b2(\u00b7), for binary masking of objects. For example, \u03b2(m grade ) means the binarized grade tumor mask, i.e. binary tumor mask, m binary ."}, {"section_title": "Generation of the Grade Tumor Masks", "text": "There are three grades of brain tumors, as shown in Fig.2 . The geometric features and grade information of tumors can be simplified to concentric circles. The concentric circles, c = {c 1 , c 2 , c 3 }, are generated from the tumor masks according to two policies. The three concentric circles should have the same center position as the given tumor mask and the area per grade of tumor should be equal to the area of c 1 \u2212 c 2 , c 2 \u2212 c 3 , and c 3 , which correspond to the area of edema, enhancing tumor, and necrotic and non-enhancing tumor, respectively, as shown in Fig.2 . As shown in Fig.2A , the grade tumor masks are simplified into concentric circles by the aforementioned policies. There are five variables that define the concentric circles, i.e., coordinates of the center of the concentric circles, (c x , c y ), and the radii of three concentric circles, r 1 , r 2 , and r 3 , which represent the grade information as shown in Fig.2B . Therefore, a new tumor mask can be simply generated from these five variables.\nThen, two networks, G bianry and G grade , convert the concentric circles to grade tumor masks. For conversion from the concentric circles to the grade tumor mask, initially G binary generates the binary tumor mask,m binary , as follows:\nwhere c 1 is the outermost concentric circle, which represents the whole tumor region, and \u03b2(\u00b7) means the binarization operator. Thus, \u03b2(X T 1w N ) represents the binarized T1-weighted image of the normal brain, i.e. the shape of the normal brain. Any contrast MR image of the normal brain can be used for this process. At this step, the geometric shape of the tumor is produced from the concentric circles and the binarized normal brain image. The appearance is determined by the appropriate combination of the brain's shape and the concentric circles. A detailed description of the appropriate combination will be explained in section 4. (1) and the tumor mask is forwarded to (2) . The feature maps of outputs of (1) and (2) are concatenated and then forwarded to each branch network of (3). White and grey blocks represent CNN-based blocks and residual-based blocks, respectively. means concatenation.\nAfter generation of the binary tumor mask,m binary , G grade generates the grade tumor mask,m grade , as follows:\nHere, G grade aims to determine the grade information ofm binary , by referring the area of c 1 \u2212 c 2 , c 2 \u2212 c 3 , and c 3 . Through this step, concentric circles are converted to the grade tumor mask. The ability to generate appropriate grade tumor masks from easily controllable concentric circles has great advantages in terms of the diversity of the augmented data."}, {"section_title": "Synthesis of Brain Tumor Images", "text": "Brain tumor images are synthesized using normal brain images, X N , and a grade tumor mask,m grade , through G inpaint . As a preliminary procedure of G inpaint , the tumor parts of the normal brain images which are the same region asm grade are masked. The masked region are inpainted with the synthesized tumor through G inpaint , as follows:\nwhere the multiplication factor of (1 \u2212m binary ) represents the masking process. Here, G inpaint harmonically synthesizes the tumor-part images with the non-tumor parts. Also,m grade is used in G inpaint for user-guided image inpainting as mentioned in section 2.2. As shown in Fig.3 , G inpaint utilizes masked multi-contrast images andm grade as input images and generates multi-contrast tumor images.\nThe steps for synthesizing a total of N brain tumor images are described in Algorithm 1. The concentric circles are generated by five randomly selected variables, where the generated tumor masks should be located within the brain. This simple and reliable algorithm can quickly synthesize brain tumor images.\nAlgorithm 1: How to synthesize brain tumor MR images (Number of images is N)\nThe concentric circles, c 1 , c 2 , c 3 are determined by five variables, c x , c y , r 1 , r 2 , r 3 ; \nWe analyzed how the synthesized image changes depending on the size and position of the concentric circles with a given X N as shown in Fig.5 . The grade tumor masks are generated by G grade as shown in Fig.5(C1-C4) , generated with the given X N in Fig.5(B) and various concentric circles in Fig.5(A1-A4) . Them grade are generated according to the sizes, locations, and grade information of the concentric circles. In the cases of Fig.5(A1) and (A2) having the same size and position but different grade information, the generated tumor masks in Fig.5(C1) and (C2) have the same appearance, but only different grade information ofm grade . In the cases of Fig.5(A1) and (A3) having the same location but different sizes and grade information,m grade in Fig.5(C1) and (C3) are in the same location, but have different appearances and grade information. The concentric circles in Fig.5(A1) and (A4) have the same size and same grade information, but different locations. Them grade in Fig.5(C1) and (C4) have the same size and grade information, but are different in appearance. These results show that the appearance of the tumor mask is affected by the size, grade information and location of the concentric circles. The images,X T , in Fig.5(D1-D4) were synthesized through Fig.5(A1-A4) and (B) . The tumor parts of the synthesized brain tumor images depend on the concentric circles. It is proven that even one X N can be used to synthesize a variety ofX T if various concentric circles are used.\nAs shown in Fig.6(A, B1-B4) , only one example of concentric circles is combined with various normal brain images, X N , as input of the proposed network. Variousm grade in Fig.6 (C1-C4) are generated depending on normal brain images while the same concentric circles are applied. In addition, the synthesized results,X T , show how the normal brain images affect the tumor-part images as shown in Fig.6(D1-D4) .\nThe pixel loss function, L inpaint:pix , is the simplest and most commonly used loss function in general deep learning algorithms. However, as shown in Fig.7(A) , the results tend to be blurry and less realistic. To overcome this problem, we include adversarial loss function, L inpaint:adv , and content loss function, L inpaint:cont , as shown in Fig.7(B)-(D) . When L inpaint:adv is used together with L inpaint:pix as shown in Fig.7(B) , a lot of lattice artifacts appear. In general, it is due to the instability of learning of the GAN-based algorithm. Here L inpaint:cont is used together with L inpaint:pix to make the synthesized images look more perceptually realistic as shown in Fig.7(C) . Finally, the results of the trained network using all the loss functions are shown in Fig.7(D) , where blurring and lattice artifacts are not seen. "}, {"section_title": "Network Training and Loss Functions", "text": "BraTS 2018 [1] is used as the dataset for training of the proposed network. For inputs and ground truths of each network, the given images from the dataset are preprocessed as shown in Fig.4 . There are brain tumor MR images, X T , and grade tumor mask, m grade , as shown in Fig.4(A1-A2) . The concentric circles, c 1 , c 2 , and c 3 , by simplifying the tumor mask are shown in Fig.4(B) . The shapes of the brain and m binary are shown in Fig.4(C1-C2) . Masked brain tumor images are produced by multiplication of a factor of (1 \u2212 m binary ) as shown in Fig.4(D) . The proposed networks are trained by using preprocessed images and given images from the dataset, as input and ground truths for each network, such as m binary and m grade , notm binary andm grade . Details of the loss function used in each training will be explained.\nFirst, G binary is trained to generate m binary using c 1 and \u03b2(X T 1w T ) through minimization of pixel loss, L binary , as follows:\nwhere c 1 is the outer-most concentric circle, \u03b2(X T 1w T ) represents the shape of the brain, and \u00b7 1 denotes the absolute sum.\nSimilarly, G grade is trained to estimate m grade from the concentric circles andm binary through minimization of the pixel loss, L grade , as follows:\nFor the synthesis of brain tumor images, various loss functions are used. The pixel loss function, L inpaint:pix ; a content loss function, L inpaint:cont ; and an adversarial loss function, L inpaint:adv , are used for the training of G inpaint and D inpaint , where D inpaint is the discriminator network. The pixel loss function, L inpaint:pix , is defined as follows:\nIf only L inpaint:pix is used for training, it is not sufficient to make the output a realistic tumor in shape. The content loss function can make the output more perceptually similar to the ground truth, which is defined as follows:\nwhere \u03a8 represents the second layer's output of VGG-19 [24] . This loss function is commonly used to match image styles [25, 26] , which is also known as a perceptual loss.\nThe adversarial learning scheme makes the output more realistic and sharp in texture. L inpaint:adv for G inpaint and D inpaint is described as\nwhere E x\u223cP R and Ex \u223cP G are the expectation values over the real brain tumor images and the synthesized brain tumor images, respectively. Here, G inpaint is trained to minimize L inpaint:adv , whereas D inpaint is trained to maximize L inpaint:adv .\nWhile training of G binary and G grade uses only simple pixel loss function, training of G inpaint and D inpaint uses various loss functions to prevent the blurry and inapparent texture of outputs. A detailed analysis according to loss functions is presented in section 4."}, {"section_title": "Training Configurations and Implementation Details", "text": "There are a total of four networks in the proposed method: G binary , G grade , G inpaint , and D inpaint ; G binary and G grade use the U-NET [10] . The input layers of G binary and G grade are both two-channel images of (256, 256, 2), and the output layer is a one-channel image of (256, 256, 1). The structure of G inpaint is shown in Fig.3 . The input layers of G inpaint are the tumor grade mask, which has one channel, (256, 256, 1), and four-channel multi-contrast MR images of the masked normal brain, (256, 256, 4) . Then, the output layer of G inpaint is four-channel synthesized brain tumor images of (256, 256, 4). The detailed network structures are explained in Table 2 .\nOur method was implemented in the PyTorch framework with PyCharm 2018.3.4 on the Ubuntu 16.04.3 platform. All experiments were conducted on a workstation equipped with TITAN Xp graphic card with 12 GB memory. In the training of all networks, ADAM [28] was used for optimization with a learning rate of 0.001. We terminated the backpropagation after 200 epochs for preventing over-fitting. Our whole scheme including four networks required seven days for training. We saved all network parameters every 10 epochs, and the networks that had the lowest validation loss were chosen among the 20 saved models. "}, {"section_title": "Experiments", "text": ""}, {"section_title": "Data Preprocessing", "text": "We used the BraTS 2018 as the brain tumor dataset. Twenty-eight subjects of a total of 285 subjects were used to measure the validation loss of the networks and the tumor segmentation performance. A total of 190 subjects with good quality among the remaining 257 subjects were selected for training of the networks. These 190 subjects were subjectively selected according to whether the tumors were well represented in the multi-contrast images. For each subject, we selected 66 slices from the whole brain volume, excluding the end parts of the brain. Therefore, 66 slices of a total of 190 subjects, that is 12540 slices, were used as training data. Each image was normalized using Gaussian normalization and clipping over the range of [-0.5, 5]. Then, for the grade tumor masks and concentric circles, pixels corresponding to edema (ED), enhancing tumor (ET), and necrotic/non-enhancing tumor (NCT/NET) of the tumor were set to values of 0.5, 0.75, and 1, respectively."}, {"section_title": "Comparisons with Other GAN Methods", "text": "The results produced by the proposed method are compared with those produced by other GAN-based synthesis methods in Fig.8 . The first three rows are results of the unconditional GAN-based methods, which use random noise as an input, namely, DCGAN, WGAN, and PGGAN. As mentioned earlier, DCGAN is simple to train, but the results of DCGAN are unstable and unrealistic. The results generated by WGAN, on the other hand, are sharper, but unstable too. PGGAN is the best performance generative algorithm among the unconditional GANs, and brain tumor images are synthesized realistically. However, these unconditional GAN-based methods can only synthesize brain tumor images, not grade tumor masks, both of which are necessary for the training of supervised learning networks.\nThe 4th and 5th rows show the results of Pix2pix and CBGAN, respectively, where the brain tumor images were synthesized from the brain tumor label maps. Their results seem relatively unnatural because the normal parts must also be synthesized and the loss functions of their methods may not be sufficient. In the case of Pix2pix, there are lattice artifacts due to GAN's instability. In the case of CBGAN, similar to our proposed method, it uses various loss functions to remove lattice artifacts and to have learning stability. However, the non-tumor parts are displayed unnaturally compared to the proposed method. The proposed method fills the non-tumor part with the normal brain image as it is and generates only the tumor part. Thus, the results of the proposed method look most realistic."}, {"section_title": "FID Score", "text": "The realistic degree of brain tumor images is quantitatively analyzed through the Fr\u00e9chet inception distance (FID) score [29] , which has generally been used to measure the performance of GAN-based algorithms. The FID score represents the distance between training data and generated data. A lower FID score indicates greater similarity with training data. Therefore, as listed in Table 3 , the FID score is used to measure the similarity between the training data and the generated data according to various loss functions, and the FID scores are compared for the proposed method and other GAN-based algorithms, CBGAN and Pix2pix. The proposed method had lower FID values than the CBGAN and Pix2pix methods because our method uses real normal brain images for the non-tumor part. "}, {"section_title": "Segmentation Performance through Data Augmentation", "text": "In tumor segmentation experiment, three metrics of dice, sensitivity, and precision are usually used to measure the performance. Dice, sensitivity, and precision are each defined as follows: Dice = 2 \u00b7 T P 2 \u00b7 T P + F P + F N , Sensitivity = T P T P + F N , P recision = T P T P + F P (9) where TP, FP, FN, and TN denotes true positive, false positive, false negative and true negative, respectively.\nDice is affected by FN as well as FP. Therefore, it can be used to comprehensively analyze the performance. However, dice cannot provide enough information to analyze whether the low dice is due to FP or FN. Therefore, analyses of sensitivity and precision are necessary. Sensitivity is affected by FN, and precision is affected by FP.\nUNet [10] was used for tumor segmentation. Only the numbers of input channels and output channels of UNet were modified in the experiments. The input channel has multi-contrast MR images of the brain tumor, and the output channel has five segmented images of the whole tumor (WT), tumor core (TC), enhancing tumor (ET), non-tumor part, and background. We measured the segmentation performance at epochs of 200 and used the Adam optimizer with a learning rate of 0.0002.\nThe experimental results for brain tumor segmentation are listed in Table 4 . A total of 5k brain tumor images were randomly chosen from a total of 12.5k. The UNet for brain tumor segmentation was trained by using the selected 5k brain tumor images and the augmented 7.5k brain tumor images that were synthesized by various augmentation methods. In each case, the segmentation performance of WT, TC, and ET of the tumors was measured using the metrics of dice, sensitivity, and precision. The proposed method was compared with conventional augmentation methods and other GAN-based methods. Furthermore, for the proposed method, comparative experiments were performed according to the loss functions.\nThe results of the conventional augmentation methods show a meaningful performance improvement over the basic performance from only the real 5k brain tumor images. This is why many algorithms have adopted data augmentation for network training. We analyzed the performance depending on each loss function and proved the validity of the loss function. The proposed method shows a significant performance improvement over the conventional augmentation methods and other GAN-based methods. "}, {"section_title": "Discussion", "text": "Three metric values of the proposed method are high compared to those of conventional augmentation methods and other GAN-based methods. Although the conventional augmentation methods improved the segmentation performance, the improvement was not sufficient. The other GAN-based methods of CBGAN and pix2pix also improved the segmentation performance. They synthesized not only the tumor area but also non-tumor parts. Therefore, the synthesized brain tumor images may be unrealistic and thus cannot improve the segmentation performance significantly. Because our proposed method fills the non-tumor part with the synthesized tumor and uses normal brain images for non-tumor parts in the synthesized brain tumor images, it produces more realistic images. In other words, when the data augmented by our method are used for training of the segmentation network, the dice value of the proposed method, which is the combined value of precision and sensitivity, is improved.\nThere are several considerations regarding our proposed method. The first consideration is the absence of pathological knowledge of the actual tumor location. Although we have freely determined the location, size and grade information of the tumor, it is necessary to examine whether the synthesized tumors are pathologically realistic shape. Combining our algorithm with pathological knowledge can improve the data augmentation performance. The next consideration is the deformation of the surrounding normal tissue due to the tumor. Because the non-tumor part is taken from a normal brain image as it is, the deformation of the surrounding area is not shown. If all of these are taken into account, it is expected that it would be possible to synthesize not only photographically realistic but also pathologically realistic brain tumor images."}, {"section_title": "Conclusion", "text": "Our proposed method simplifies grade tumor masks into the concentric circles, so that the sizes and location of the concentric circles can be easily controlled to provide diversity of tumor images. New grade tumor masks can be stably generated from concentric circles, and brain tumor images are synthesized through deep neural networks. The five variables defining three concentric circles are very simple to manipulate, and the number of healthy people is much larger than that of brain tumor patients. This can enable the synthesis of numerous brain tumor images. In terms of data augmentation, the proposed method can successfully synthesize brain tumor images that can be used to train tumor segmentation networks or other deep neural networks."}]