[{"section_title": "Abstract", "text": "Abstract-This paper presents the relevance voxel machine (RVoxM), a dedicated Bayesian model for making predictions based on medical imaging data. In contrast to the generic machine learning algorithms that have often been used for this purpose, the method is designed to utilize a small number of spatially clustered sets of voxels that are particularly suited for clinical interpretation. RVoxM automatically tunes all its free parameters during the training phase, and offers the additional advantage of producing probabilistic prediction outcomes. We demonstrate RVoxM as a regression model by predicting age from volumetric gray matter segmentations, and as a classification model by distinguishing patients with Alzheimer's disease from healthy controls using surface-based cortical thickness data. Our results indicate that RVoxM yields biologically meaningful models, while providing state-of-the-art predictive accuracy."}, {"section_title": "", "text": "The Relevance Voxel Machine (RVoxM): A Self-Tuning Bayesian Model for Informative Image-Based Prediction Mert R. Sabuncu*, Koen Van Leemput, and Alzheimer's Disease Neuroimaging Initiative\nAbstract-This paper presents the relevance voxel machine (RVoxM), a dedicated Bayesian model for making predictions based on medical imaging data. In contrast to the generic machine learning algorithms that have often been used for this purpose, the method is designed to utilize a small number of spatially clustered sets of voxels that are particularly suited for clinical interpretation. RVoxM automatically tunes all its free parameters during the training phase, and offers the additional advantage of producing probabilistic prediction outcomes. We demonstrate RVoxM as a regression model by predicting age from volumetric gray matter segmentations, and as a classification model by distinguishing"}, {"section_title": "I. INTRODUCTION", "text": ""}, {"section_title": "M", "text": "EDICAL image-based prediction aims at estimating a clinically or experimentally relevant quantity directly from individual medical scans. In a typical scenario, the properties of prediction models are learned from so-called training data-a set of images for which the quantity of interest is known. The trained models can then be applied to make predictions on new cases. In so-called image-based regression problems, the quantity to be estimated is continuously valued, such as a score evaluating a subject's brain maturity. In other cases, the aim is to predict a discrete value indicating one of several conditions, such as a clinical diagnosis, which is a classification problem.\nImage-based prediction models derive their predictive power from considering all image voxels simultaneously, distilling high prediction accuracy from many voxel-level measurements that are each only weakly predictive when considered individually. This approach is fundamentally different from more traditional ways of relating image content to the biomedical context, such as voxel-and deformation-based morphometry [1] - [3] , cortical thickness analysis [4] , or voxel-level functional magnetic resonance imaging (fMRI) analysis [5] , in which maps of affected anatomical areas are generated by merely considering each location separately. Unlike such \"mapping\" approaches, prediction methods explore patterns of association between voxels, offering powerful new analysis tools in such applications as \"mind reading\" [6] , [7] , studying neural information processing [8] - [10] , image-based clinical diagnosis [11] - [16] , and examining global patterns associated with healthy development, aging, pathology, or other factors of interest [17] , [18] .\nThe principal difficulty in obtaining good regression and classification models for medical imaging data is the enormous number of voxels in images, which leads to two interconnected modeling challenges. First, since the number of training images is typically several orders of magnitude smaller than the number of voxels, the complexity of voxel-based prediction models needs to be strictly controlled in order to avoid so-called 0278-0062/$31.00 \u00a9 2012 IEEE \"over-fitting\" to the training data, where small modeling errors in the training images are obtained at the expense of poor prediction performance on new cases. Second, the aim is often not only to predict well, but also to obtain insight into the anatomical or functional variations that are driving the predictions-in some applications, such as task-related fMRI, this is even the primary result. Interpreting complex patterns of association between thousands of image voxels is a highly challenging task, especially when the results indicate that all the voxels are of importance simultaneously; when the voxels contributing most to the predictions appear randomly scattered throughout the image area; or when the relevant inter-location relationships are nonlinear in nature [19] - [22] .\nVarious approaches for restricting model complexity in medical image-based prediction have been proposed in the literature, often with the adverse effect of reducing biological interpretability. Some methods only allow a selected few voxels to contribute to the prediction, either by performing voxel-wise tests a priori [7] or by pruning less predictive voxels as part of a larger modeling process [23] - [25] . Others aim at using spatially connected patches of voxels as \"features\" instead of individual voxels themselves, either by averaging over a priori defined anatomical structures [7] , [20] , [26] , [27] , or by trying to cluster neighboring voxels in such a way that good prediction performance is obtained [22] . Yet others rely directly on more off-the-shelf techniques, for instance using only a few of all the available training subjects in sparse kernel-based machine learning methods [14] , or reducing feature dimensionality by spatial smoothing, image downsampling, or principal component analysis [9] , [28] , [29] .\nIn order to obtain prediction models that are expressly more biologically informative, some authors have started to exploit the specific spatial, functional, or temporal structure of their imaging data as a basis for regularization [30] - [37] . Building on this idea, we propose in this paper the relevance voxel machine (RVoxM), a novel Bayesian method for image-based prediction that combines excellent prediction accuracy with intuitive interpretability of its results. RVoxM considers a family of probabilistic models to express that 1) not all image locations may be equally relevant for making predictions about a specific experimental or clinical condition, and 2) image areas that are somehow biologically connected may be more similar in their relevance for prediction than completely unrelated ones. It then assesses which model within this family explains the training data best, using the fact that simple models that sufficiently explain the data without unnecessary complexity are automatically preferred in Bayesian analysis [38] . As we shall see, this technique yields models that are sparse-only a small subset of voxels is actually used to compute predictions-as well as spatially smooth-in our experiments we used spatial proximity as a measure of biological connectivity. Such models are easier to interpret than speckles of isolated voxels scattered throughout the image area, and at the same time have an adequately reduced number of degrees of freedom to avoid over-fitting to the training data.\nCompared to many existing image-based prediction methods, our Bayesian approach has several advantages.\n\u2022 Simultaneous regularization, feature selection, and biological consistency: Rather than computing discriminative features in a separate preprocessing step [22] , [25] , [28] , or using postprocessing to analyze which subset of voxels contributes most to the predictions [9] , [34] , [37] , the proposed method automatically determines which voxels are relevant-and uses only these voxels to make predictions-in a single consistent modeling framework.\nIn line with anatomical expectations, the obtained maps of \"relevance voxels\" have spatial structure, facilitating biological interpretation and contributing to the regularization of the method.\n\u2022 Self-tuning: The proposed method automatically tunes all the parameters of the prediction model, allowing the model to adapt to whatever degree of spatial sparseness and smoothness is indicated by the training data. In contrast, other image-based prediction methods rely on regularization parameters that need to be determined externally, either by manual selection [30] , [33] , [34] or using cross-validation [22] , [26] , [28] , [31] , [35] , [37] . As illustrated in [39] , the latter can be extremely challenging when several regularization parameters need to be determined simultaneously.\n\u2022 Probabilistic predictions: In contrast to the decision machines [40] widely used in biomedical image classification, which aim to minimize the risk of misclassification, the method we propose computes posterior probabilities of class membership, from which optimal class assignments can subsequently be derived. The ability to obtain probabilistic predictions rather than \"hard\" decisions is important for building real-world diagnostic systems, in which image-based evidence may need to be combined with other sources of information to obtain a reliable diagnosis, and the risk of making false positive diagnoses needs to be weighed differently than that of false negative ones [41] . We originally presented RVoxM in a short conference paper that only dealt with the regression problem [42] . The current manuscript extends the theory to encapsulate classification, contains more details on theoretical derivations, and includes more extensive experimental results.\nA reference Matlab implementation of the method is freely available from the authors."}, {"section_title": "II. RVoxM FOR REGRESSION", "text": "For regression problems, the aim is to predict a real-valued target variable from an image , where denotes a voxel-level measurement at the voxel indexed by , and is the total number of voxels. For notational convenience in the remainder, an extra element with value 1 is also included to account for constant offsets in our predictions.\nWe use a standard linear regression model for , defined by the Gaussian conditional distribution (1) with variance and mean (2) where denotes a vector of unknown, adjustable \"weights\" encoding the strength of each voxel's contribution to the prediction of . In order to complete the model, we also define a prior on these weights that expresses our prior anatomical expectations that not all locations in the image may be equally predictive, and that biologically related areas may be more similarly predictive than completely unrelated ones. In particular, we use a prior of the form (3) where and are so-called hyper-parameters, and is a matrix chosen so that elements of the vector evaluate to large values when biologically connected voxels happen to have very different weights in , effectively making such configurations a priori less likely.\nThe role of the hyper-parameters in (3) is to express a wide range of regression models that can each be tried and tested, ranging from very complex models with many degrees of freedom (when all the hyper-parameters are set to small values) to heavily regularized ones with limited expressive power (when all the hyper-parameters are large). It is these hyper-parameters that are automatically learned from training data, as will be explained in Section II-A, allowing the data to select the appropriate form of the model. When a large value for is selected, the model encodes a preference for configurations of in which biologically connected voxels have similar weights. At the same time, setting some of the hyper-parameters to very large values (infinity in theory) will clamp the values for the weights in the corresponding voxels to zero, effectively \"switching off\" the contribution of these voxels to the prediction and removing them from the model. This ability for the data to determine which inputs should influence the predictions is similar to the automatic relevance determination (ARD) mechanism [43] used in the relevance vector machine (RVM) [44] ; in fact, for our model reduces to an RVM with the voxel-wise intensities stacked as basis functions.\nFor the remainder of this paper, we will use a matrix that simply encourages local spatial smoothness of as a proxy for biological connectivity. In particular, we will use a sparse matrix with as many rows as there are pairs of neighboring voxels in the image; for a pair , the corresponding row has zero entries everywhere expect for the th and th column, which have entries 1 and 1, respectively. To simplify notation in subsequent sections, we rewrite (3) in the form (4) which shows that the prior is a zero-mean Gaussian with inverse covariance , where is also known as the Laplacian matrix in graph theory. While our choice of here simply penalizes spatial gradients in , it is worth noting that more advanced measures of biological connectivity can easily be integrated into the model as well-each with its own hyper-parameter that is automatically determined. Examples of such measures might include left-right symmetry relationships, as well as voxel-to-voxel connectivity strengths derived from functional image studies or based on detailed anatomical segmentations."}, {"section_title": "A. Training", "text": "Given a set of training images with corresponding target values , we can determine the appropriate form of the regression function by estimating the hyper-parameters that maximize the so-called marginal likelood function, which expresses how probable the observed training data is for different settings of the hyper-parameters. Fig. 1 shows the graphical model which depicts the dependency relationship between the variables. Collecting all the training images in the \"design\" matrix , and the corresponding target values in the vector , the marginal likelihood function is obtained by integrating out the weight parameters, yielding [41] (5) where (6) Our goal is now to maximize (5) with respect to the hyper-parameters , , and -known in the literature as the evidence procedure [45] , type-II maximum likelihood estimation [46] , or restricted maximum likelihood estimation [47] .\nWe follow a heuristic optimization strategy similar to the one proposed in [45] , which has also been used to train RVM regression models [44] . In particular, we maximize -which is equivalent to maximizing but computationally more convenient-by observing that its derivatives to the hyper-parameters are given by the following expressions (see Appendix A for detailed derivations): (7) (8) (9) where is the th diagonal component of the matrix (10) and the th component of the vector (11) Because their derivatives are zero at a maximum of the objective function, one strategy of optimizing for and is to equate (7) and (8) to zero and rearranging, yielding the following re-estimation equations: (12) and (13) In Appendix B, we show that both (12) and (13) are guaranteed to yield non-negative and . For the hyper-parameter , we use a standard gradient-ascent approach, yielding the following update equation: (14) where is an appropriate step-size.\nTraining now proceeds by choosing initial values for the hyper-parameters , , and , and then iteratively recomputing and [ (10) and (11)] and the hyper-parameters [(12), (13) , and (14)], each in turn, until convergence. In our implementation, we initialize with , , , and . We monitor the value of the objective function at each iteration, and terminate when the change over the previous iteration is below a certain tolerance. Section IV provides detailed pseudo-code for this algorithm, optimized for the computational and memory requirements of image-sized problems.\nAlthough we have no theoretical guarantees that the proposed update equations for the hyper-parameters improve the objective function at each iteration, our experiments indicate that this is indeed the case."}, {"section_title": "B. Prediction", "text": "Once we have learned suitable hyper-parameters , , and from the training data, we can make predictions about the target variable for a new input image by evaluating the predictive distribution (15) where is given by (1) and (16) is the posterior distribution over the voxel weights. and are defined by (10) and (11), in which , , and have been set to their optimized values.\nIt can be shown that the predictive distribution of (15) is a Gaussian with mean (17) and variance [41] . In practice, we will therefore use (17) for making predictions, i.e., the linear regression model of (2) where the voxel weights have been set to . As we shall see in Section V, most of these weights will typically be zero with the remaining voxels appearing in spatially clustered patches, immediately highlighting which image areas are driving the predictions."}, {"section_title": "III. RVoxM FOR CLASSIFICATION", "text": "In image-based binary classification, the aim is to predict a binary variable from an individual image . As in regression, we define the linear model (18) but transform the output by a logistic sigmoid function (19) to map it into the interval [0, 1]. We can then use to represent the probability that (Bernoulli distribution) (20) and complete the model by using the same prior on as in the regression case [ (3)]. Note that, unlike in the regression model, there is no hyper-parameter for the noise variance here.\nTraining the classification model entails estimating the hyperparameters that maximize the marginal likelihood function (21) where and contains the known, binary outcomes for all the training images . In contrast to the regression case, the integration over cannot be evaluated analytically, and we need to resort to approximations. In Appendix C, we show that around a current hyper-parameter estimate , we can map the classification problem to a regression one (22) where we have defined a covariance matrix and local regression \"target variables\"\nwith the inverse variances of subject-specific regression \"noise\" collected in the diagonal matrix , and and . In these equations, are the \"most probable\" voxel weights given the hyper-parameters :\nwhich involves solving a concave optimization problem. As detailed in Appendix C, we use Newton's method to perform this optimization.\nUsing the local mapping of (22), learning the hyper-parameters now proceeds by iteratively using the regression update (12) and (14), but with and defined as (24) and (25) Once we have learned the hyper-parameters and this way, we can make predictions about the target variable for a new input image by evaluating the predictive distribution (26) where , and and are defined by (24) and (25) in which the hyper-parameters have been set to their optimized values. The approximation in (26) is based on the so-called Laplace approximation and on the similarity between the logistic sigmoid function and the probit function; see [41, pp. 217-220] , for details. Equation (26) can be thresholded at 0.5 to obtain a discrete prediction."}, {"section_title": "IV. IMPLEMENTATION", "text": "In most applications where RVoxM will be useful, the number of voxels to consider is so large (e.g., or ) that a naive implementation of the proposed training update equations is computationally prohibitive-computing alone already involves inverting a dense matrix, which can take time.\nOne approach to alleviate the computational burden is to exploit the sparsity of the matrix and use Woodbury's matrix identity [48] to compute as (27) where . Since is sparse (with a the number of nonzero entries in each row being independent of ), the complexity of computing and subsequently is and , respectively. A naive computation of using (6) is . Yet rewriting as (28) reduces the complexity of computing to . Inverting is . Putting all this together, we can compute using (27) in time. Since the number of available training subjects is typically in the hundreds at best, in practice this means a reduction in computation time from to . Since is so large, even an complexity is still a heavy computational burden. In practice, however, many of the 's tend to grow very large, effectively switching off the contribution of the corresponding voxels. We therefore resort to the type of greedy algorithm originally used for RVM training [44] , whereby once a voxel has been switched off (i.e., its has become larger than some threshold-in our implementation -it gets permanently discarded from the remaining computations. This provides a significant acceleration of the learning algorithm, as gradually more and more voxels are pruned from the model. To see how voxels can be removed from the computations, consider that if , and, as a result, the th row and th column of and become zero vectors and . Consequently, the update equations for the hyper-parameters are unaffected by simply deleting the th column from , and both the th column and the th row from and . Finally, rather than manipulating the dense matrices and in their entirety, it is possible to compute their relevant contributions only one row at a time, avoiding the need to explicitly store such prohibitively large matrices.\nAlgorithm IV-1 provides pseudo-code for a RVoxM training procedure that has been optimized along the lines described above. For the classification case, a subroutine that optimizes for is given in Algorithm IV-2."}, {"section_title": "V. EXPERIMENTS", "text": "In order to illustrate the ability of RVoxM to yield informative models that predict well, we here present two experiments using T1-weighted structural magnetic resonance imaging (MRI) scans. The first experiment aims at predicting a subject's age from a volumetric gray matter segmentation (i.e., a regression scenario), whereas the second one focuses on discriminating Alzheimer's patients from healthy controls using surface-based cortical thickness measurements (illustrating a classification application)."}, {"section_title": "A. Predicting Age", "text": "Both the structure and function of the human brain undergo significant changes over a person's lifetime, and these changes can be detected using neuroimaging [49] , [50] . Image-based prediction methods for estimating an individual's age from a brain MRI scan have attracted recent attention [17] , [29] , [51] since they provide a novel perspective for studying healthy development and aging patterns, while characterizing pathologic deviations in disease. In the current experiment, we employed the publicly available cross-sectional OASIS dataset [52] , which consists of 436 subjects aged 18-96. For each subject, three or four individual T1-weighted MRI scans acquired in single scan sessions were averaged to obtain a single high-quality image. The subjects are all right-handed and include both men and women. 100 of the subjects over the age of 60 have been clinically diagnosed with very mild to moderate Alzheimer's disease (AD).\nWe processed all the MRI scans with SPM8, 1 using default settings, to obtain spatially aligned gray matter maps for each subject. Briefly, the SPM software performs a simultaneous registration and segmentation of each MRI volume [53] , aligning the image nonlinearly with a standard template while at the same time computing each voxel's probability of belonging to different tissue types, such as gray or white matter. The resulting gray matter probability maps are then spatially transferred over to the coordinates of the template and modulated by the Jacobian of the nonlinear transformations, yielding the so-called gray matter density maps commonly analyzed in voxel-based morphometry (VBM) studies [1] .\nUnsmoothed gray matter density values were used as the voxel-level measurements in the present experiment. The average gray matter density volume computed on the training data was thresholded at 50% to obtain a mask of voxels that went into the analysis. On the analyzed data, there were an approximate total of 75 k voxels in the mask. We employed a six-connectivity neighborhood to define the Laplacian matrix.\nTo assess generalization accuracy and stability, we performed five-fold cross-validation on the data from the cognitively normal and healthy subjects ( 336, 43.7 23.8 years, 62.5% female). In each cross-validation session, four fifths of the data were used for training an RVoxM. This model was then applied to the remaining fifth for testing. Each training session took about 100 CPU hours with our Matlab implementation, on a Xeon 5472 3.0 GHz CPU. Fig. 2 shows the predicted age versus the real age for each subject. Note that each subject was treated as a test subject in only one of the five cross-validation sessions; the figure shows the predictions pooled across the sessions. The correlation between the real versus the predicted age is 0.94, and the root mean square error (RMSE) is less than 7.9 years. It is interesting to note that the deviation from the best fit line seems to increase for older subjects who are beyond middle-age. This is likely driven by latent pathology, as recent studies have estimated that up to 30% of cognitively normal elderly subjects are actually at the preclinical stages of Alzheimer's disease [54] .\n1 http://www.fil.ion.ucl.ac.uk/spm/software/spm8/. Fig. 2 . RVoxM-based predicted age versus real age in a cohort of 336 cognitively healthy subjects. Fig. 3 illustrates the \"relevance voxels\"-those voxels that have nonzero contribution in the final prediction model-across the five training sessions. It can be appreciated that most voxels have a zero contribution (i.e., the model is sparse), and that the relevance voxels occur in clusters, providing clear clues as to what parts of the gray matter are driving the age prediction process. Furthermore, the relevance voxels exhibit an overall consistent pattern across the five training sessions, as can be deduced from the yellow regions in the bottom row of Fig. 3 , thus providing evidence that these patterns are likely to be associated with the underlying biology and can be interpreted. The relevance patterns include peri-sylvian areas (e.g., Heschl's gyrus) as well as deep structures (e.g., thalamus), and are in broad agreement with published aging-associated morphology maps (e.g., [55] ).\nIn addition to RVoxM, we also tested two other methods as benchmarks. The first method, referred to as \"RVM,\" was specifically proposed recently for estimating age from structural MRI [29] . It uses a principal component analysis (PCA) to achieve a dimensionality-reduced representation of the image data, and subsequently applies a linear RVM algorithm in the resulting feature space. We used the optimal implementation The frequency at which a voxel was selected as being relevant (i.e., receiving a nonzero weight in a training session) across the five cross-validation sessions.\nsettings that were described in [29] and a public implementation of RVM. 2 The second benchmark (\"RVoxM-NoReg\") was an implementation of RVoxM with no spatial regularization, i.e., with the hyper-parameter intentionally clamped to zero. A comparison with the latter benchmark gives us an insight into the effect of spatial regularization on the results. Fig. 4 plots the average RMSE for all three algorithms (top), as well as the average difference between the individual-level prediction errors (square of predicted age minus true age) obtained by RVoxM and the other two methods (bottom). Overall, RVoxM yields the best accuracy with a RMSE less than 7.9 years-the difference between RVoxM's performance and the other two benchmarks is statistically significant (paired t-test, ). RVoxM also attains the highest correlation (r-value) between the subjects' real age and predicted age among all three methods: 0.94 for RVoxM versus 0.9 and 0.93 for RVM and RVoxM-NoReg, respectively. We note that [29] reported a slightly better correlation value for RVM , which is probably due to the increased sample size (410 training subjects instead of the 268 training subjects used here).\nFinally, we also examined the deviation of the predicted \"brain age\" from the real age particularly in elderly subjects. Recent work on a young cohort attributed such a deviation observed in fMRI data to the nonlinear development trajectory of the brain [17] . Moreover, neuroimaging studies on dementia and Alzheimer's have suggested that these diseases might accelerate atrophy in the brain [56] . As such, we hypothesized that the mini mental state examination (MMSE) score, a cognitive assessment that predicts dementia, may explain some of the nonlinear behavior in the predicted \"brain age\" of elderly subjects. To test this hypothesis, we used the RVoxM from the first of the five-fold cross-validation experiment, which was trained on 268 cognitively healthy subjects. We applied this RVoxM model to predict the \"brain age\" of 100 AD patients 2 http://www.vectoranomaly.com/downloads/downloads.htm. and 30 cognitively healthy elderly subjects from the test group (see Fig. 5 ). Note that none of these subjects were used to train the RVoxM and we excluded 33 young healthy subjects, for which we did not have an MMSE score. We then conducted a linear regression analysis, where the predicted age was treated as the outcome variable and real age, MMSE and sex were the independent variables. Both the real age (coefficient: 0.84, ) and the MMSE score (coefficient: 0.77, ) were independently associated with the predicted age, but the subject's sex was not. This suggests that pathological processes that are reflected as cognitive decline might explain some of the deviation in the predicted brain age."}, {"section_title": "B. Predicting Alzheimer's Diagnosis", "text": "Here, we demonstrate RVoxM as a classifier for discriminating healthy controls from AD patients based on their brain MRI scans. Instead of working with volumetric MRI data, we implemented RVoxM on a 2-D surface model of the cerebral cortex, further demonstrating the versatility of the proposed algorithm. We applied RVoxM to the publicly available Alzheimer's Disease Neuroimaging Initiative (ADNI) dataset, 3 which consisted of 818 subjects at the time of writing. At recruitment, 229 subjects were categorized as cognitively healthy; 396 subjects as amnestic Mild Cognitive Impairment (MCI)-a transitionary, clinically defined pre-AD stage; and 193 subjects as AD. All subjects were clinically followed up every six months, starting from a baseline clinical assessment. Each follow-up visit typically included a cognitive assessment and a structural MRI scan. In the present experiment, we only analyzed baseline MRI scans. We processed all MRI scans with the FreeSurfer software suite [57] , [58] , computing subject-specific models of the cortical surface as well as thickness measurements across the entire cortical mantle [4] . Subject-level thickness measurements were then transferred to a common coordinate system, represented as a icosohedron-based triangulation of the sphere, via a surface-based nonlinear registration procedure [59] , and analyzed by RVoxM. We utilized the so-called fsaverage6 representation, consisting of approximately 82 000 vertices across the two hemispheres with an inter-vertex distance of approximately 2 mm. We emphasize that we did not smooth these cortical thickness maps for any of our experiments. The matrix for the spatial regularization was obtained by using the neighborhood structure of the triangulated mesh.\nOur analysis used MRI scans from 150 AD patients (75.1 7.4 years, 47% female), and an age and sex-matched control group ( ; cognitively normal (CN); 76.1 5.8 years; 47% female). 4 As in the age prediction experiment, we conducted a five-fold cross-validation, where each clinical group was first divided into five subgroups. During each fold, one AD and one CN subgroup were set aside as the test set and the RVoxM classification algorithm was trained on the remaining subjects, which took around 110 CPU hours (Matlab implementation, Xeon 5472 3.0 GHz CPU). The obtained classification model was then tested on the corresponding test group. The presented results are combined across all five training/test sessions.\nFor comparison, we also implemented the following four benchmark algorithms.\n1) RVoxM-NoReg: Similar to the regression experiment, we implemented the RVoxM classifier with the spatial regularization intentionally switched off, i.e., with . 2) SVM: We also applied a linear support vector machine (SVM) classifier, a demonstrated state-of-the-art AD classification method [39] , to the cortical thickness maps. For this purpose, we used the popular SVM implementation provided by the freely available LIBSVM software package [60] . 3) SVM-Seg: We applied the same linear SVM implementation to thickness measurements in 70 automatically segmented cortical subregions. In particular, we used FreeSurfer to parcellate the entire cortical mantle based on the underlying sulcal pattern [61] , computed a list of average thickness measurements for each of the resulting subregions, and used these as the attribute vector for the SVM. 4) RVM-Seg: Finally, we also applied an implementation of the RVM binary classifier 5 with a linear kernel to the same thickness measurements of the 70 cortical ROIs used for SVM-Seg. Fig. 6 shows the receiver operating characteristics (ROC) curve for RVoxM and the four benchmark algorithms. The ROC curves were generated by varying a threshold applied to the continuous prediction score that each of the algorithms generates [(26) for RVoxM]. For each threshold value, we computed the specificity and sensitivity values on each test group corresponding to each of the five folds. These specificity and sensitivity values were then averaged to obtain the presented ROC curves. Based on the area under the ROC curve (AUC), SVM (93%) and RVoxM (93%) perform the best for discriminating AD patients from healthy controls.\nThere is a clear difference between RVoxM and RVoxMNoReg (AUC: 89%), which once again underscores the significance of incorporating the spatial smoothness term into the model. Although SVM and RVoxM have a similar classification performance, it is worth emphasizing that SVM uses all 82 000 mesh vertices simultaneously to make its predictions, complicating the interpretation of its underlying models. Fig. 7 illustrates the RVoxM \"relevance vertices\" that play a role in discriminating the two clinical groups based on thickness measurements. This figure shows the average values, where the average was taken across the five cross-validation sessions. Similar to the regression result, one can appreciate that a large number of vertices have a zero contribution (i.e., the model is sparse), and that the relevance vertices appear in spatial clusters. Fig. 8 shows the frequency at which each relevance vertex was selected (i.e., had a nonzero contribution) across the five cross-validation sessions. There are certain regions that consis-5 http://www.vectoranomaly.com/downloads/downloads.htm.\ntently contribute across the different training sessions (in particular those colored yellow). These vertices include the entorhinal cortex, superior temporal sulcus and posterior cingulate/precuneus, and overlap the so-called default network regions that are known to be targeted in AD [62] . However, there are other regions (mostly in shades of red) that are less consistent and are chosen only in one or two training sessions. We will discuss the possible causes of such model instabilities, as well as ways to mitigate their effect, in Section VI.\nWe also used the RVoxM model from the first of the five-fold cross-validation training sessions to compute an \"AD score\" (26) for all remaining ADNI subjects, which we subdivided into four groups: 1) cognitively normal, healthy controls, who remained so throughout the study and who were not included in the training data set ; 2) subjects with MCI who were stable and did not progress to dementia (sMCI, ); 3) subjects who had MCI at baseline but then progressed to AD (pMCI; ); and 4) AD patients . Fig. 9 plots the average AD score for each of these groups, computed from their baseline MRI scans. We observe that, at baseline, the stable MCI group has an average AD score less than 0.5 and therefore appears more \"control-like,\" whereas the progressive MCI group has a more \"AD-like\" average AD score that is greater than 0.5. These results suggest that an RVoxM-based classification of someone's MRI scan might be informative for predicting future clinical decline. To test this hypothesis directly, we conducted a survival analysis with a Cox regression model [63] on all MCI subjects combined , where the outcome of interest was time-to-diagnosis. Age, sex, education (years), APOE allele count, APOE allele count and the RVoxM-based AD score were entered as independent variables. The only variable that was associated with time-to-diagnosis was the RVoxM-based AD score (coefficient: 0.66,\n). This results suggests that a baseline MRI scan contains predictive information about future clinical decline and this in- formation is, to some extent, extracted by the RVoxM AD classifier."}, {"section_title": "VI. DISCUSSION AND CONCLUSION", "text": "In this paper, we presented the RVoxM, a novel Bayesian model for image-based prediction that is designed to yield intuitive and interpretable results. It allows the predictive influence of individual voxels to vary, and to be more similar in biologically related areas than in completely unrelated ones. Bayesian analysis is then used to select the appropriate form of the model based on annotated training data. As demonstrated in our experiments, RVoxM yields models that are sparse and spatially smooth when spatial proximity is used as a measure of biological connectivity. We believe that such models are easier to interpret than models that use all the image voxels simultaneously, or that base their predictions on a set of isolated voxels scattered throughout the image area. Importantly, our experiments also indicate that RVoxM automatically avoids over-fitting to the training data and produces excellent predictions on test data.\nCompared to other prediction models used in medical image analysis, RVoxM offers the following advantages:\n\u2022 regularization, feature selection, and biological consistency within a single algorithm; \u2022 automatic tuning of all parameters, i.e., no free parameters to set manually or via cross-validation; and \u2022 probabilistic classification predictions, rather than binary decision outcomes. Although we only applied RVoxM to structural gray matter morphometry in this paper, the method is general and can be extended to handle multiple tissue types at the same time; analyze functional or metabolic imaging modalities; or include nonimaging sources of information such as blood tests, cerebrospinal fluid (CSF) markers, and genetic or demographic data [28] . Furthermore, one can easily incorporate more advanced measures of biological connectivity than the simple spatial smoothness prior used in our experiments. Connectivity information based on symmetry (if the two hemispheres are expected to have similar contributions) or obtained from functional or diffusion imaging can be added by including extra terms \" \" in (3), with corresponding hyper-parameters that will then be automatically learned from the training data as well.\nWhen discussing the properties of RVoxM, it is useful to consider the training-phase optimization of its hyper-parameters within an ideal Bayesian framework, which would not involve any optimization at all. For the sake of clarity, we will concentrate on the regression case only, although similar arguments apply to the classification case as well. Letting denote the collection of log-transformed hyper-parameters, 6 and assuming a uniform prior distribution on :\n, the true Bayesian predictive distribution over the target variable for a new input image is given by which involves integrating over both and . RVoxM effectively performs the integration over analytically, while approximating the remaining integral over , assuming it is dominated by the optimal hyper-parameter value (29) RVoxM first estimates by maximizing [optimization of (5)], and then uses the resulting distribution to make predictions [ (15)]. The approximation of (29) has the disadvantage that it gives rise to a high-dimensional, nonconvex optimization problem, putting RVoxM at risk of local optima and other convergence issues [64] . As demonstrated in [65] , these problems can be avoided by approximating the integral over using Monte Carlo sampling instead: given enough samples from the posterior , the resulting predictive distribution can be made arbitrarily close to the true one. Although theoretically superior to RVoxM, this approach will only be computationally feasible when a small subset of potentially relevant image voxels are somehow selected a priori [65] , limiting its appeal in practical settings.\nThe ideal Bayesian prediction model that RVoxM approximates also helps explain why RVoxM tends to set many voxel weights to zero values, even though its prior [(4)] may not seem to encourage such solutions. Writing reveals that the predictive distribution is obtained by adding contributions of all possible values of , each weighed by its posterior probability . Although the integral over can not easily be approximated to obtain a practically useful algorithm [44] , [66] , the crucial insight is that the posterior will be high for 's with many zero entries, because the \"true\" prior (30) obtained by integrating out the hyper-parameters, encourages such solutions. Indeed, for the special case where the spatial smoothness hyper-parameter is clamped to zero but otherwise , (30) evaluates to [44] which is sharply peaked at zero for each voxel and therefore favors sparsity. This \"true\" prior can be compared to the so-called\nLaplace prior often used to obtain sparsity in Bayesian models [67] , or-taking the negative log-as the norm in the popular \"lasso\" regularized regression method [68] .\nRVoxM goes beyond merely inducing sparsity in the models by allowing nonzero values for the hyper-paramer , enforcing spatial consistency. This helps remedy the well-known problem with sparsity-only promoting methods that when several variables (i.e., voxels) have similar prediction power, only one tends to be picked with little regard as to which one [69] , [70] . In order to avoid such overly sparse models, which hamper biological interpretation, a popular solution in regularized regression is the so-called \"elastic net,\" which adds a regularization term to the sparsity-inducing regularizer of lasso [70] . In Bayesian approaches, proposed remedies include using hyperparameters that optimize another objective function than the likelihood [69] , or assuming voxels belong to a small set of clusters with common regularization [65] , [71] . The way RVoxM addresses this issue is by expanding the family of candidate models that can be tried to explain the training data, relying on the fact that relatively simple models-with fewer degrees of freedom-tend to provide better explanations than overly complex ones [38] . By also allowing high values of , simple and therefore good models are no longer only those in which just a select few predictive voxels are in the model, but especially those in which neigboring, similarly predictive voxels are in the model together.\nBecause of the way it seeks sparse but spatially connected solutions, RVoxM is closely related to so-called \"structured sparsity\"-inducing methods, which aim at selecting problem-relevant groups of variables for inclusion in the model, rather than single variables individually [72] - [76] . In such methods, grouplevel sparsity is often obtained by variations on the so-called \"group lasso\", a generalization of lasso in which the norm of each group, rather than the amplitude of individual variables, is penalized using the norm [77] , [78] . Perhaps most closely related to RVoxM is the so-called \"smooth lasso\" method, a variant of the elastic net in which the norm for sparsity is preserved, but the norm on the variables themselves is replaced by an norm on their spatial derivatives [79] .\nAn issue we have not fully addressed in this work is quantifying how repeatable the relevant voxel set is when the RVoxM model is trained on different subjects drawn from the same population. Although the relevant voxel pattern was quite consistent across different training datasets in our regression experiment (see bottom row of Fig. 3) , there was an appreciable amount of variation in the classification case (see Fig. 8 ). We believe such variations can be further decreased by making more relevant anatomical information available to the RVoxM model-e.g., by including a symmetry regularization term in the prior. The stability of the relevant patterns and the predictions can also be improved by using randomization experiments, in which different models are learned from resampled training data to obtain an average, ensemble prediction model [80] , or to select only those voxels that appear frequently across the different models [81] , [82] . Instability of informative feature sets has been studied extensively in the literature [83] , [84] , and can be attributed to three related factors: 1) the limited amount of training data and over-fitting to the quirks of these data, 2) the mismatch between the utilized model and the underlying true discriminative pattern, and 3) the local optima the numerical solver might get trapped in. All three factors apply to the case of RVoxM, and a detailed analysis of these effects will be carried out in future work, using techniques similar to the ones employed in [85] - [87] .\nOne drawback of the presented training algorithm is its computational complexity, which under typical conditions is quadratic in the number of voxels. Our experiments demonstrate that, using standard Matlab code, we can train on a dataset of relatively high-resolution data from hundreds subjects in a matter of days. This computation time, we believe, is acceptable for such datasets that can take years to collect. It is worth emphasizing that a heavy computational burden is incurred only once for a given training dataset and that, after the model has been trained, making predictions on new images is very fast. Since RVoxM automatically tunes all its hyper-parameters within a single training session, there is no need for the repeated cross-validation training runs that are necessary in most other image-based prediction methods and that also take time. Furthermore, more advanced regularization terms can be added to the prior of RVoxM with minimal additional computational cost, whereas the number of training runs required to set the corresponding hyper-parameters using cross-validation would increase exponentially and quickly become impractical.\nAlthough the reported computation times can be reduced significantly by using a non-Matlab based implementation that exploits the parallellization opportunities inherent in Algorithm IV.1; classification problems with more than two classes, as well as higher-resolution and much larger datasets, will still present a serious computational challenge to analyze with RVoxM. The training algorithm we have presented starts with all voxels included in the initial model, and gradually prunes the vast majority of the voxels as the iterations progress. Although this causes the algorithm to gradually speed up, the computational complexity of the first few iterations is still quadratic in the number of voxels. Similar to the dramatically accelerated training procedure for RVM models developed in [88] , we are therefore investigating an alternative, \"constructive\" approach that starts with an empty model and sequentially adds voxels instead, while also modifying the weights of the voxels already in the model. In [88] , this was accomplished by deriving an analytical expression for the optimal weight of a voxel, given the current weight of all other voxels; we are currently exploring if a similar approach is also possible for RVoxM."}, {"section_title": "APPENDIX A DERIVATIONS FOR THE REGRESSION MODEL", "text": "We here derive various partial derivatives of with respect to the hyper-parameters , , and . Using the determinant identity and Woodbury's inversion identity we can write as\nUsing , we obtain (32) and similarly (33) and (34) Using the same technique on , we have (35) and (36) Finally, we have (37) and similarly (38) and (39) To obtain (7), we take the partial derivative of (31) with respect to and plug in the result of (32), (35) , and (37), yielding (40) Rewriting using Woodbury's inversion identity as (41) and plugging this result into (40), we finally obtain (7). Taking the partial derivative of (31) with respect to and plugging in (33) and (38) yields (42) which explains (8) . Similarly, we obtain (9) by taking the partial derivative of (31) with respect to and plugging in (34) , (36) , and (39) ."}, {"section_title": "APPENDIX B NON-NEGATIVE PROPERTIES OF THE UPDATE RULES", "text": "We here show that the update (12) and (13) \nwhere we have used (41) to obtain (27) , and expanded using (27) to obtain (44) . is the positive semi-definite matrix defined in (6) and is the th column of . For (13) we have (45) where we have used , is the Cholesky decomposition of , is the th column of and the inequality is due to being positive semi-definite."}, {"section_title": "APPENDIX C DERIVATIONS FOR THE CLASSIFICATION MODEL", "text": "We here explain how we compute the most probable voxel weights in the classification model [(23) ] and locally approximate the classification training problem by a regression one [(22) ].\nFor a given set of hyper-parameters , we compute the voxel weights maximizing the posterior distribution by using Newton's method, i.e., by repeatedly performing until convergence, with gradient and Hessian matrix where we have defined , , , and . Since the Hessian is always positive definite, is concave and therefore has a unique maximum [41] .\nOnce the optimum weights are obtained, we approximate the integral in (21) by replacing the integrand with an unnormalized Gaussian centered around (Laplace approximation), yielding (46) for the log marginal likelihood, where we have defined Around the most probable voxel weights corresponding to some hyper-parameters ( (23)), we can linearize as follows:\nand therefore\nAs a result, we have that and therefore that (47) where the constant depends only on . Using this result, we obtain (48) and because also that and therefore (49) Plugging (47) and (48) into (46), we have that where we have used (49) in the last step. Comparing this result to (31) finally yields (22) ."}, {"section_title": "ACKNOWLEDGMENT", "text": "Data used in the preparation of this paper were obtained from the Alzheimer's Disease Neuroimaging Initiative (ADNI) database (ADNI). As such, the investigators within the ADNI contributed to the design and implementation of ADNI and/or provided data but did not participate in analysis or writing of this report. A complete listing of ADNI investigators is available at http://tinyurl.com/ADNI-main."}]