[{"section_title": "Abstract", "text": "ABSTRACT Alzheimer's disease (AD) is an irreversible progressive neurodegenerative disorder. Mild cognitive impairment (MCI) is the prodromal state of AD, which is further classified into a progressive state (i.e., pMCI) and a stable state (i.e., sMCI). With the development of deep learning, the convolutional neural networks (CNNs) have made great progress in image recognition using magnetic resonance imaging (MRI) and positron emission tomography (PET) for AD diagnosis. However, due to the limited availability of these imaging data, it is still challenging to effectively use CNNs for AD diagnosis. Toward this end, we design a novel deep learning framework. Specifically, the virtues of 3D-CNN and fully stacked bidirectional long short-term memory (FSBi-LSTM) are exploited in our framework. First, we design a 3D-CNN architecture to derive deep feature representation from both MRI and PET. Then, we apply FSBi-LSTM on the hidden spatial information from deep feature maps to further improve its performance. Finally, we validate our method on the AD neuroimaging initiative (ADNI) dataset. Our method achieves average accuracies of 94.82%, 86.36%, and 65.35% for differentiating AD from normal control (NC), pMCI from NC, and sMCI from NC, respectively, and outperforms the related algorithms in the literature.\nINDEX TERMS Alzheimer's disease, 3D-CNN, FSBi-LSTM, multi-modal fusion."}, {"section_title": "", "text": "traditional machine learning techniques [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] [14] [15] [16] [17] [18] . Generally, traditional machine learning methods exploit two types of features in early diagnosis of AD, including region of interest (ROI) based features [4] , [12] [13] [14] , [16] , [18] and voxel based features [7] , [8] , [10] . More specifically, the former relies heavily on specific assumptions about structural or functional abnormalities in the brain, such as regional cortical thickness [19] , hippocampal volume [20] , and gray matter volume [21] . However, these feature extraction methods are limited since they require complex preprocessing steps and advanced clinical domain knowledge. In addition, the brain is a huge interconnected network, and ROIs cannot sufficiently express these connections. Moreover, extraction of ROIs yields a large amount of information loss due to compression. The latter focuses on acquiring features by measuring tissue density, such as gray matter (GM), white matter (WM), and cerebrospinal fluid (CSF) without relying on any hypothesis on the brain structure. However, image volumes come with a huge number of voxels (in millions), while the number of samples is limited. Hence, the overfitting issue can occur. Traditional machine learning methods rely on manual feature extraction, which depends heavily on professional knowledge, repeated attempts, and tends to be time-consuming and subjective.\nTo solve these problems and to further improve performance, convolutional neural networks (CNNs) are an effective solution and have showed great success in AD diagnosis [22] [23] [24] [25] [26] [27] [28] [29] [30] . However, these studies were unable to build a deep 3D-CNN network, such as VGG [31] , since it is difficult to obtain a huge amount of labeled clinical data. Hence, shallow 3D-CNN networks are preferred. However, in traditional CNN models, the fully connected (FC) layer can only input 1D data. The feature maps of 3D-CNN parts are always in 3D, thus the 3D spatial information in the feature maps will be lost in the flattening operation. As a result, many efforts have been devoted to solving the shortcomings of CNNs in this aspect [23] , [24] , [29] by using other layer to replace the fully-connected (FC) layer.\nRecurrent neural network (RNN) is a powerful model in sequence analysis. Since RNN adopts a ''state'' vector in its hidden units, it implicitly contains information of the sequence's all history information [32] . Recent studies have shown that, RNN and related structure networks not only can analyze sequence information, but also can achieve good results in structure analysis [24] , [33] . Compared with RNN, its improved version long short-term memory (LSTM) can effectively solve problems of gradient explosion or gradient disappearance by using several gates to control information flow [34] . Furthermore, bidirectional LSTM (Bi-LSTM) can have contextual information in both directions [35] . In fact, Bi-LSTM can get more information without choosing the scanning direction, which can be enhanced by stacking the LSTM to explore the spatial information of feature maps from 3D-CNN as well.\nTherefore, we propose to use the stacked Bi-LSTM (SBi-LSTM) instead of the traditional Bi-LSTM [36] in this paper. In addition, each output of LSTM is related to historical input, but the current input has a greater impact. Hence, the FC layer can boost accuracy by enhancing the connection between different output nodes of SBi-LSTM. Motivated by this observation, we design a novel deep learning network that uses multimodal data for AD diagnosis via 3D-CNN and fully stacked bidirectional LSTM (FSBi-LSTM). Specifically, the image of each MRI or PET is transferred to the 3D-CNN network to extract features from a more macroscopic perspective. In addition, FSBi-LSTM is used to extract high-level semantic and spatial information instead of the traditional FC layer. By inputting one pixel of all features to the corresponding position at each step, FSBi-LSTM can preserve the spatial information of feature maps corresponding to different parts of the data. Because the output of LSTM is closely related to the neighboring input, we add a FC layer for feature extraction after the output of SBi-LSTM. Accordingly, the output of each step is closely related to other steps. Finally, the features from MRI and PET are fused and fed into the SoftMax classifier for disease diagnosis.\nThe rest of this paper is organized as follows. We briefly recall the relevant researches in Section II. Then, we give the detailed description of our method in Section III. Section IV describes the experimental results. The advantages and limitations of the proposed method are discussed in Section V. Finally, we summarize conclusions in Section VI."}, {"section_title": "II. RELTEAD WORK A. TRADITIONAL MACHINE LEARNING BASED METHODS", "text": "Many studies in literature focused on developing automatic algorithms to observe the functional and anatomical neural lesions related to AD by traditional machine learning methods [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] [14] [15] [16] [17] [18] . For example, Gray et al. introduced a multimodal classification method by using similarity measure generated from random forest classifier [10] . Zhang et al. proposed a multi-layer classifier, where the first layer is multiview input and explores the complex correlation between the feature and the label by building a latent representation [15] . A discriminative sparse learning method was recommended by Lei et al. to predict the clinical score jointly with relational regularization and use multimodal features to classify AD stages [16] . However, these methods are computationally intensive and mainly depend on the handcrafted features, which are not appealing and difficult to obtain."}, {"section_title": "B. DEEP LEARNING BASED METHODS", "text": "To address the traditional machine learning problems, some studies have used the deep learning for AD diagnosis, recently [22] [23] [24] [25] [26] [27] [28] [29] [30] . For instance, Islam et al. presented an AD diagnosis method based on 2D DenseNet and sliced the MRI data in three directions. Three parallel 2D DenseNets were then used to analyze and fuse the final diagnosis results [28] . Liu et al. proposed a deep multitask multichannel learning configuration for clinical score regression and brain disease FIGURE 1. General framework of the proposed FSBi-LSTM method for AD diagnosis from MRI and PET neuroimages. C is convolutional layer, the P is mean pooling layer, @ is the number of filters such as 15@3\u00d7 3\u00d7 3 is 15 filters which size are 3\u00d7 3\u00d7 3 and P2 \u00d7 2 \u00d7 2 is pooling layers, which size are 2 \u00d7 0 \u00d7 2.\nclassification via MRI data and subjects' demographic information [24] . They identified the landmarks of discriminative anatomical from MRI data via data driven technique and then extracted multiple image patches from these detected landmarks. However, flattening operation before using the FC layer always ignores the spatial information in the feature map. In addition, Liu et al. recommended a framework based on 2D CNN and bidirectional gated recurrent unit (Bi-GRU) to alleviate the effect of this problem [30] . However, the way of converting 3D data into a series of 2D slices causes CNNs to completely ignore the characteristics of 3D data, and different slicing methods may lead to loss of different features. Moreover, existing CNN-based methods use the flattening layer after the CNN because the FC layer can only process 1D information. Using flattening layer will lead to the feature maps loss in all the 3D spatial information. In our work, we propose to utilize FSBi-LSTM to get rich spatial and semantic information from feature maps for efficient diagnosis of AD from MRI and PET."}, {"section_title": "III. METHODOLOGY", "text": "The framework of our proposed method is shown in Fig. 1 . We employ 3D-CNN to extract the primary features of both MRI and PET inputs. Then, FSBi-LSTM is used to extract high level semantic and spatial information from the output of 3D-CNN instead of traditional FC layer. Finally, the learned features are concatenated and further passed to SoftMax classifier for disease diagnosis. In the following, a detailed description of the proposed method is presented."}, {"section_title": "A. DATA PREPROCESSING", "text": "For the MRI data, we conduct Anterior Commissure (AC)-Posterior Commissure (PC) reorientation and resample the data to 256 \u00d7 256 \u00d7 256 via MIPAV Software (https://mipav.cit.nih.gov/). Tissue intensities inhomogeneity is then corrected using N3 algorithm [37] followed by skull stripping and cerebellum removal. Afterwards, we segment the brain to GM, WM, and CSF using FSL package [38] . Existing research shows that compared with WM or CSF, GM demonstrated higher relatedness to AD/MCI [7] . Therefore, we choose the GM masks in this work. Finally, we use the hierarchical attribute matching mechanism for elastic registration (HAMMER) algorithm [39] to spatially register the GM masks to the MNI brain atlas coordinate space and extract the regional volumetric maps by image warping and tissue preserving method [40] . For the PET, firstly, we rigidly VOLUME 7, 2019 align them to the MRI space. Then, we use Gaussian kernel with zero mean and unit standard deviation to handle MRI and PET. Finally, all the MRI and PET data are down-sampled to 64 \u00d7 64 \u00d7 64 to save memory without compromising the classification as suggested by Suk et al. [7] ."}, {"section_title": "B. FEATURE LEARNING BASED 3D-CNN", "text": "The CNN is a powerful multilayer neural network in image analysis. However, 2D-CNN structures are designed for analyzing 2D images, which is inefficient to extract 3D medical images' spatial information. Therefore, we adopt the 3D convolution kernel instead of 2D one. For hierarchical learning the multi-level features, we use alternatively stacking convolutional layers and down-sampling layers to build the 3D convolutional kernel. Finally, we get feature maps from CNN model.\nThe input image is convolved with a list of kernel filters in convolutional layer. Then, a bias term is added between the activation function and convolutional layer. In this work, the rectified linear unit (ReLU) is chosen as the activation function. Finally, the CNN model can output a series of feature maps. We define the voxel positions for a given 3D image as x, y,and z,respectively, the j-th 3D kernel weight represents as W l kj \u03b4 x , \u03b4 y , \u03b4 z connects the l-1 layer's k-th feature maps and the j-th feature maps of the l layer, the k-th feature maps of the l-1 layer as F l\u22121 k , the kernel size corresponding to the x, y, and z is \u03b4 x , \u03b4 y , and \u03b4 z , respectively. The convolutional response of the kernel filter is u l kj (x, y, z). Then, the 3D convolutional layer is defined as\nAfter convolution, we add a ReLU to activate features:\nwhere b l j is bias term from the l-th layer's j-th feature map, F l j (x, y, z) is obtained by summation of the response maps of the j-th 3D feature map's different convolution kernels.\nAfter convolutional layer, a max-pooling layer is added to obtain more efficient and compact features. Besides, by using max-pooling layer, the features become more compact from low level to high level which can achieve the robustness against some variations.\nIn our model, the 3D-CNN architecture is adapted from Liu et al. [29] . However, since input data are not exactly the same, we modify the 3D-CNN structure of Liu et al. [29] by increasing the number of convolutional filters and layers. In addition, to avoid overfitting, we have appropriately reduced the number of filters in each convolution layer. More details can be found in Fig. 1 . After 6 stacking convolutional and max-pooling layers, we add 2 FC layers and SoftMax classifier for training. All the features before the FC layers are flattened into an 1D vector. After training, we extract the feature before the last max-pooling layer as input to the FSBi-LSTM. "}, {"section_title": "C. FSBI-LSTM BASED CLASSIFICATION", "text": "Typically, FC layers are used to do high level analysis in the CNN. However, the FC layers are unable to effectively extract all the spatial information from the feature map as it just simply connects all neurons. Fig. 2 shows the spatial information, which represents the relation between the feature maps and the input data. We can see each model's output of our 3D-CNN network contains 200 features with each dimension at 2 \u00d7 2 \u00d7 2. In this figure, each column (i.e., the black box in Fig. 2) shows the whole features of the brain. Then, each row (i.e., the red box in Fig. 2 ) shows all the features of a part of the brain. If we intercept a row-byrow feature maps like a red box, it is actually a part-by-part examination of the brain. Existing research shows that RNN and similar networks have the function of fusing different structures [24] , [33] . Therefore, we design a FSBi-LSTM instead of FC layer to extract all the spatial information from the feature maps.\nIn traditional RNN, the output of the current cell state is defined as h t and is expressed as\nwhere the x t is input of the t-th unit, U is the weight from the input layer to the hidden layer, and W is the connection weight from the previous unit to the current unit. The f (\u00b7) is the tanh function. However, the traditional RNNs have problems of gradient explosion or gradient disappearance.\nTo address this problem, we introduce the concept of gate and cell state using LSTM. In LSTM, the gate is an FC layer and the current cell state is defined as c t . In order to control h t and c t , LSTM mainly uses three gates, including the input gate, the forget gate, and the output gate, respectively. The input gate is given as\nwhere W xi is the weight of input x t , W hi is the weight of the last cell output h t\u22121 , b i is bias of the input gate, and \u03c3 is the sigmoid function. Similarly, the forget gate is given as\nThe weight of input x t is defined as W xf , the weight of the last cell output h t\u22121 is W hf and b if is bias of the forget gate. In addition, we calculate the state of the input modulation (i.e., short memory) based on the last output and the current input. It is computed as\nwhere W xc is the weight of input x t , W hc is the weight of last cell output h t\u22121 , b c is bias of the output gate, and \u03d5 is the tanh function. We calculate the cell state at the current time. It is generated by multiplying the element by the forget gate from the last unit state, multiplying the element by the input gate with the current input unit state, and adding the two products together. The long memory, c t , is denoted as\nwhere denotes element-wise multiplication. In this way, we combine LSTM's current and long-term memory to form a new unit state. By controlling the forget gate, we can choose useful historical information. While controlling the input gate, we can avoid feeding insignificant current content into memory. The output gate controls the long-term memory on current output, which is represented as\nwhere W xo is the weight matrix of input x t , W ho is the weight matrix of the last cell output h t\u22121 and b io is bias for the output gate. Finally, the output of LSTM is determined by the output gate and the unit state, which is formulated as\nEqs. 4 to 9 are the calculation process of single LSTM cell.\nWe use H (\u00b7) to denote a LSTM cell. The idea of a Bi-LSTM assumes that each training sequence has to input forward and backward via two LSTMs. In output layer, two LSTMs are connected. This structure provides each point to complete future and previous contextual information in the output layer. Bi-LSTM computes the forward hidden sequence \u2212 \u2192 h and backward hidden sequence \u2190 \u2212 h as\nwhere W x \nwhere W\u2212 \u2192 h y (forward hidden state weights),W\u2190 \u2212 h y (backward hidden state weights), b is a bias vector for each layer.\nBy superimposing a basic LSTM cell in both forward and backward LSTM of Bi-LSTM and adding a FC layer in the output, we can get the FSBi-LSTM. For the hidden layer of FSBi-LSTM, the forward calculation is the same as LSTM except that the input sequence is opposite to the two hidden layers. FSBi-LSTM computes the forward hidden sequence \u2212 \u2192 h s and backward hidden sequence \u2190 \u2212 h s , which is expressed as\nwhere\n, and \u2190 \u2212 b hs are the same as Eqs. 10 and 11, respectively. Finally, the output of SBi-LSTM is denoted as\nIn fact, y st can be used as the final feature processing after fusion. However, the feature maps used are the brain structure feature maps, and all features are related to each other. Therefore, each output node is related to the current input. The outputs of every repeating cell can be of equal importance and shall be concatenated into a full connection layer. We may extract a common closely connected brain structure information from all the SBi-LSTM cells to represent constant ''trait'' information of each subject via the FC layer, instead of the part of the brain structure information. This is the whole computing process of FSBi-LSTM. Since MRI and PET modalities are used in this study, fusion is an effective way for performance boosting. Based on our data and network structure, we devise 3 fusion strategies: fusion before SBi-LSTM (FSB), fusion before FC layer (FFC) and fusion before final SoftMax classifier (FFS). Fig. 3 shows the structure of different fusion strategies. Since FSB needs to fuse forward LSTM and backward LSTM, we choose FFS as our integration strategy. As a result, we can avoid modal fusion influence on the performance of FSBi-LSTM. After the fusion, we use SoftMax classifier to get the final diagnosis result."}, {"section_title": "IV. EXPERIMENTAL RESULTS", "text": ""}, {"section_title": "A. EXPERIMENTAL SETUP", "text": "In this paper, our dataset is based on the Alzheimer's Disease Neuroimaging Initiative (ADNI) (http://adni.loni.usc.edu/). We choose the baseline MRI data and 18-FluoroDeoxyGlucose PET data acquired from 93 AD, 76 pMCI, 128 sMCI, and 100 normal control (NC). To verify the efficacy of our model, we set up the following experiments: AD vs. NC, pMCI vs. NC, and sMCI vs. NC instead of AD vs. NC, MCI vs. NC, and pMCI vs. sMCI. The main reason for this setup is that more meaningful pathological structures can be found by comparing with healthy people. We use two duals by alternatively stacking 6 convolutional and max-pooling layers to get the feature maps from MRI and PET, separately. In order to facilitate training, we add two FC layers and SoftMax as the classifier. To avoid overfitting, we randomly drop out ten percent of neurons during training in the 3D-CNN. In 3D-CNN part, we set all the convolutional layer stride to 2 and padding is the same with layer input, we choose Adam optimizer [41] for optimization and categorical cross entropy as the loss function. In addition, we set the batch size as 20, the number of epochs as 60, the learning rate as 10 \u22124 , the fuzz factor as 10 \u22129 , the first order exponential decay rates for the moment estimates as 0.9, and the second order exponential decay rates for the moment estimates as 0.999. After 3D-CNN training via two models, we extract the feature before the last max-pooling layer as input to the FSBi-LSTM. In FSBi-LSTM part, we choose RMSprop as the optimizer [42] for speeding up training and categorical cross entropy as the loss function. We set the batch size as 30, the number of epochs as 25, the learning rate as 10 \u22123 , the fuzz factor as 10 \u22128 , the rho as 0.9, and the learning rate decay as 10 \u22125 . For classification performance evaluation, we use different performance metrics, namely, accuracy (ACC), sensitivity (SEN), specificity (SPEC), F1 score (F1), balanced accuracy (BAC), and area under receive operation curve (AUC). A 10-fold cross-validation algorithm is adopted to assess both classification performance. Specifically, all samples are divided into 10 portions, then samples in one portion are successively used as the testing data while the rest are utilized as the training data. All the experiments are conducted on a Windows machine with NVIDIA TITAN Xt GPU and implemented using Keras library with Tensorflow as backend."}, {"section_title": "B. DEPTH EFFECTS ON SBI-LSTM AND FSBI-LSTM", "text": "For investigating the influence of depth on the FSBi-LSTM performance, we test our model with varied number of layers while fixing the other parameters. In order to compare the impact of the FC layer on the performance, we also set up different layers of SBi-LSTM for comparison. Namely, we test the following models: 1 layer FBi-LSTM (FBL1), 1 layer Bi-LSTM (BL1), 2 layers FSBi-LSTM (FSBL2), 2 layers SBi-LSTM (SBL2), 3 layers FSBi-LSTM (FSBL3), 3 layers SBi-LSTM (SBL3), 4 layers FSBi-LSTM (FSBL4), and 4 layers SBi-LSTM (SBL4). We use the same CNN output feature maps to test these configurations. We then use t-test statistical analysis to evaluate the significance of the obtained results. Our results show statistical significance with the confidence interval at 0.001. Table 1 summarizes the influence of the number of LSTM layers and the FC layer on the FSBi-LSTM (boldfaces denote the best performance). Fig. 4 illustrates the corresponding results on different classification tasks under different configurations of the proposed method. As shown in Table 1 and Fig. 4 , our model outperforms other LSTM-based models. We find the optimal number of LSTM layers by changing the number of layers of LSTM in FSBi-LSTM. From these experiments, we have the following observations:\n(1) Model performance can be improved by increasing LSTM layers, but this is not always true. In our experiment, the best performance is obtained when the number of LSTM layers is set to 2. The reason is that, if the number of layers is smaller than 2, the FSBi-LSTM model cannot extract enough deep features. On the other hand, if the layer number is bigger than 2, the performance decreases due to the gradient vanishing problem, which occurs when the network depth is increased. In addition, as layer number increases, the overfitting issue occurs with the increased number of parameter and fixed training data samples. Therefore, we choose 2 layers LSTM in our FSBi-LSTM model.\n(2) FSBi-LSTM performs better than SBi-LSTM as the former can better preserve extracted features from the input since the feature maps represent the brain structure feature maps, and all the features are related to each other. Due to the characteristics of LSTM, the output of each node is the most relevant to the current input, and the outputs of every repeating cell can be of equal importance. Therefore, we can extract closely connected brain structure information from all the SBi-LSTM cells to represent constant ''trait'' information of each subject by FC layer. Thus, FSBi-LSTM performs better than SBi-LSTM."}, {"section_title": "C. EFFECT OF FUSION STRATEGIES", "text": "The previous studies demonstrated that different fusion strategies with modal choices can have varied classification results [7] , [43] . Thus, we evaluate the effectiveness of our FSBi-LSTM using different feature fusion strategies. Fig. 3 shows the three different strategies and model structures. Furthermore, we use the t-test to evaluate the significance of the obtained results. Our results again show statistical significance with the confidence interval at 0.001. Likewise, we use the same CNN output feature maps to test different fusion strategies. Table 2 and Fig. 5 show the influence of fusion strategies on the FSBi-LSTM performance (boldfaces denote the best performance).\nFrom the results in Fig. 5 and Table 2 , it is clear that the multi-modal fusion can get better results than a single modality. The results also show that MRI has better performance than PET since MRI can sufficiently capture structural information of brain regions. In addition, comparisons of different fusion strategies show that FFS has the best performance. The main reasons are as follows. In case of FFC, forward LSTM, backward LSTM fusion and mode fusion will interfere with each other. On the other hand, in FSB, fusion can be either along the edge of the feature map, which causes the input size too long (400\u00d78). If fusion is along the short edge of feature map, which makes the feature map size becomes 200\u00d716. Accordingly, MRI is the forward input of SBi-LSTM, while PET is the backward input of SBi-LSTM, which will have an influence for fusion forward and backward. "}, {"section_title": "D. FUSION METHOD COMPARISON", "text": "In this sub-section, we compare FSBi-LSTM with other commonly used feature fusion methods. There are three main types of fusion methods. The first type is to use the other RNN cell instead of the LSTM cell such as simple RNN and GRU [44] , we denote them as FSBi-RNN and FSBi-GRU. The second type is to use the CNN model instead of the RNN model including both 2D-CNN and 3D-CNN. The third type is the traditional machine learning method via Fisher vector (FV) [45] and support vector machine (SVM) [46] . We use the t-test to evaluate the significance of the results. When the confidence interval is set as 0.001, our results have statistical significance. We use the same CNN output feature map to test different feature fusion methods. Table 3 and Fig. 6 illustrate the influence of the number of feature fusion methods. In addition, Fig.7 shows the ROC curves of different models. From these results, we observe that the result of FSBi-LSTM is better than that of FSBi-RNN and FSBi-GRU.\nThe main explanations of the superior performance are as follows. Compared with the simple RNN cell, the LSTM cell can use three gates to solve the gradient exploding/gradient vanishing problem. In addition, as a variant of LSTM cell, GRU cell synthesizes a single update gate from the forget gate and the input gate, which can train the network faster with decreased accuracy. However, our network is insensitive to time but sensitive to accuracy. Hence, we choose the LSTM instead of the GRU. Compared with 2D-CNN and 3D-CNN, we use CNN to extract spatial information from feature maps. FSBi-LSTM can provide a better result than the FSBi-LSTM with progressive scans, which is more effective than direct convolution using convolution kernels to identify the informative features. Because CNN structure cannot output 1D feature, LSTM structure can output 1D feature to avoid space information loss caused by the flattening operation. Compared with 2D-CNN, 3D-CNN can get a better result, because 2D-CNN loses 3D information. Accordingly, the FSBi-LSTM can produce better results than traditional machine learning methods as our method can extract deep features."}, {"section_title": "E. VISUALIZATION ANALYSIS", "text": "For the visualization analysis, we have conducted two experiments: t-SNE feature visualization and disease-related region search. For the t-SNE feature visualization experiments, we visualize the feature maps before and after input FSBi-LSTM through the t-SNE model. We also visualize the feature maps obtained from different models and tasks. The results shown in Fig. 8 demonstrates FSBi-LSTM plays an important role in feature discrimination. However, the last subfigures show that the diagnostic performance of sMCI is still limited. From Fig. 8 , we can see that intra-class differences are even greater than inter-class differences between sMCI and NC.\nBrain consists of many regions which are responsible for many tasks and not all regions are closely related to AD. Hence, we attempt to utilize our proposed method to search for these relevant ROIs for understanding brain abnormalities. To achieve this aim, we exclude brain images' different local areas systematically with a 3D ROI grey box and monitor the classifier outputs. If the grey box covers the important area that is related to AD, the correct class' prediction will significantly drops. Here, we use the 93 brain ROIs proposed by Kabani et al. [47] as a reference. We use the whole brain as a control group. We then shield 93 brain regions in turn and get 93 classification results after shielding. The classification accuracy obtained by shielding different brain regions is shown in Table 4 . We also choose the top 10 brain regions, which have the greatest impacts on the diagnosis of AD, pMCI, and sMCI, respectively, as illustrated in Fig. 9 .\nFrom the results, we conclude that the top 10 ROIs with the greatest impact on the diagnosis of AD are: uncus right, superior frontal gyrus right, parahippocampal gyrus left, superior temporal gyrus right, hippocampal formation right, subthalamic nucleus right, thalamus right, middle frontal gyrus left, precuneus left, and inferior temporal gyrus left. The top 10 ROIs with the greatest impact on the diagnosis of FIGURE 8. The t-SNE visualization result of feature maps from different models and different tasks. pMCI are: medial frontal gyrus left, postcentral gyrus right, medial front-orbital gyrus left, postcentral gyrus left, middle frontal gyrus left, lateral front-orbital gyrus right, fornix left, caudate nucleus right, a cingulate region left, and entorhinal cortex left. Finally, the top 10 ROIs with greatest impact on the diagnosis of sMCI are: superior temporal gyrus right, parahippocampal gyrus left, caudate nucleus right, medial front-orbital gyrus right, occipital lobe WM right, inferior occipital gyrus left, lateral ventricle right, anterior limb of internal capsule right, nucleus accumbens left, and middle temporal gyrus right."}, {"section_title": "F. COMPARISION WITH OTHER DEEP LEARNING MODEL", "text": "In this subsection, we compare the performance of the proposed method with other related deep learning models.\nTo guarantee fair comparison, we choose the models that used the same dataset. Tables 5, 6 , and 7 show that our method can obtain higher accuracies than existing methods. In [30] , Liu et al. used 2D-CNN to capture the features of image slices, then the SBi-GRU was cascaded to learn and integrate the inter-slice features for image classification. Our method outperforms this method due to the following reasons. The 3D-CNN can preserve more space information than 2D slices without information loss although GRU can replenish 3D information. Compared with Liu et al [29] , the FSBi-LSTM with progressive scans is more effective than direct convolution using a 2D convolution kernels to identify the informative features. Because flattening may lead to a large loss of 3D spatial information when feature maps output from 3D-CNN is input into 2D-CNN network to extract high level semantic features. Comparing with the input data that is cut into several blocks to train several relatively independent 3D-CNN modules and then fusion, our method of down-sampling can greatly reduce the demand for data as we have less training parameters. Compared with our previous work [36] , LSTM can effectively alleviate the gradient vanishing problem by controlling information flow with several gates. In addition, if we use the FC layer, we can further extract and sort out the output of SBi-LSTM. Thus, our method can achieve the best result."}, {"section_title": "V. DISCUSSIONS AND LIMITATIONS", "text": "In this study, the proposed framework efficiently shows good performance on the three binary classification tasks (i.e. AD vs. NC, pMCI vs. NC, and sMCI vs. NC). In our proposed framework, there are 3D-CNN and FSBi-LSTM. Compared with the traditional computational algorithms (such as strength and similarity guided group-level brain functional network), our method does not need prior knowledge to extract features manually, which can avoid the subjectivity.\nIt is important to know whether further processing of extracted features in the CNN network can further improve the early diagnosis of AD. Hence, we provide a comprehensive investigation about the influence of the model performance. In fact, the brain structural and functional information extracted using CNN are regarded as sequences and then further analyzed by FSBi-LSTM to get the high-level space information. In addition, FSBi-LSTM has fewer parameters than FC layers (27938 vs. 57578), which can make convergence faster.\nAlso, we enhance the relationship between features extracted by SBi-LSTM to further boost AD early diagnosis performance. From the experimental results, it is clear that our method is statistically superior to the related algorithms (i.e., SBi-LSTM and SBi-GRU) and previous studies. The primary explanation is that the input feature maps are the brain structure feature maps, and all the features are related to each other. Therefore, the outputs of every repeating cells are equally important. Besides, each output node of LSTM is more relevant to the current input node. Hence, with this layer, we may extract common closely connected brain structure information from all the SBi-LSTM cells, which may represent constant ''trait'' information of each subject, instead of the part of the brain structure information. Finally, it is noteworthy that the experimental results of our method are consistent with the related previous studies [36] . VOLUME 7, 2019 Despite the promising performance achieved by the proposed method, it still suffers from few limitations. First, despite the good accuracies obtained for AD vs. NC and pMCI vs. NC tasks, the diagnostic performance of sMCI is still limited. This is probably due to that the anatomical changes of sMCI are very subtle and cannot be well observed. Second, our method cannot directly find the brain lesion structure by up-sampling or deconvolution due to the cascade of CNN and LSTM. Instead, it is only found by shielding the brain area. Third, in this study, we do not utilize the longitudinal MRI data, which can further provide complementary information about disease evolution.\nSince we only focus on the voxel features currently, it might be beneficial to use the state-of-the-art methods to integrate the visual features computer vision techniques as well. For processing, we can maximize the preservation of structural information in the brain. Besides, the sharing and common information can be uncovered by us among different features to facilitate the prognosis and diagnosis in the clinical application. These insights and limitations are yet to be explored in our future work."}, {"section_title": "VI. CONCLUSIONS", "text": "In this paper, a novel framework composed of 3D-CNN and FSBi-LSTM is proposed for diagnosing AD. Specifically, we propose a new LSTM network framework instead of the FC layer in 3D-CNN. Our method can preserve space information from feature map as much as possible. Compared with traditional SBi-LSTM, FSBi-LSTM extracts common closely connected brain structure information from all the SBi-LSTM cells, which can represent constant ''trait'' information of each subject via the FC layer, instead of the part of the brain structure information. We perform extensive experiments based on the ADNI dataset and demonstrate the effectiveness of our method. Our method also outperforms the other competitive methods by using CNN for label identification. Furthermore, we enhance the clinical explanation of in-depth learning in clinical diagnosis through brain shielding experiments.\nCHIYU FENG received the B.E. degree in communication engineering from Shenzhen University, in 2017, where he is currently pursuing the M.S. degree. His research interests include machine learning, pattern recognition, and medical image analysis. "}, {"section_title": "AHMED ELAZAB", "text": ""}]