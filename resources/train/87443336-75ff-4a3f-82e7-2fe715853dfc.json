[{"section_title": "Introduction", "text": "Deep learning models [27, 35, 43] are capable of learning the hierarchical structure of features extracted from real- world images. Convolutional Neural Networks (CNNs) are a class of multi-layer, fully trainable models that are able to capture highly nonlinear mappings between inputs and outputs [20] . Recently, CNNs have been successfully applied to a variety of applications, including image classification [19] , segmentation [30] , and biological problems [15] . Feature learning with deep learning model typically requires a large amount of training data. Thus, feature learning for domains with scarce data is not feasible. However, a key challenge in applying CNNs to biological problems is that the available labeled training samples are very limited. Transfer learning [2, 25, 37] is one of the approaches to address this problem and help feature learning in the datascarce target domain by transferring knowledge from datarich source domain. In this study, we aim to explore whether the nice transfer learning property of CNN can be help apply CNN to general biological image researches.\nIn fact, even when we are able to transfer knowledge from the large amounts of image data to some other domain, employing transfer learning with deep model on longitudinal or multiple brain region of interests (ROIs) data is still Figure 2 : The streamline of our proposed framework. We pre-train the deep CNN model on the Imagenet dataset and use the pre-trained model as a feature extractor for the ADNI dataset. We employ the extracted features from three time points or ROIs to conduct the multi-task dictionary learning for AD progression prediction, generating the sparse features for different time points or ROIs. Finally, we use Lasso regression on the learnt features to predict future MMSE and ADAS-Cog scores.\nchallenging. Fig. 1 depicts three most promising imaging ROIs associated with brain image analysis [13] . Usually the large number of longitudinal or multiple ROI features measured from limited number of subjects makes it necessary to reduce feature dimensions. Dictionary learning [23, 21] has been proposed to use a small number of basis vectors termed dictionary to represent local features effectively and concisely [11] and help image content analysis. However, most existing works on dictionary learning focus on the prediction of target at a single time point [23] or on a single ROI [40, 41] . Here, we propose a novel approach that employs dictionary learning to identify important and concise features, i.e. the knowledge learned from the large amount of natural images by developing a universal representation for medical images through a deep CNN model, which is expected to improve the performance of computer aided diagnosis and prognosis.\nRecently, Multi-Task Learning (MTL) [32, 36, 44, 31] has been successfully used on regression under the different time slots. Collobert et al. [8] proposed a deep neural network with MTL to solve the grammatical and semantical problems on Natural Language Processing. Zhang et al. [43] integrated transfer learning with MTL on CNN for biological image analysis. Maurer et al. [24] proposed a sparse coding model for MTL and transfer learning based on the generative methods, but it is not associated with deep learning model. The common issue for the medical imaging research is that the longitudinal features of patients among different time points or features from different ROIs will always be beneficial to study together. To further improve our dictionary learning CNN model, we propose multi-task Stochastic Coordinate Coding (MSCC) algorithm to partition the dictionaries into the common and individual parts, considering the variance of subjects from multiply time points or multiple ROIs. In this study, we focus on the longitudinal dataset of a real world application, predicting future clinical scores in Alzheimers disease (AD). For the same subject, it may have different representations at different time points. For the traditional CNN application, it is relatively challenging to explore that the similarity and variance of subject features among different time points. We propose MSCC to learn these different tasks simultaneously and utilize both shared and individual dictionaries to encode such consistent and changing imaging features systematically.\nOur main contributions can be summarized as follows:\n\u2022 We employ transfer learning and CNN to explore whether the transfer learning property of CNN can be enhanced to generate features from geometry mesh of biological images since the current bottleneck for CNNs to be applied to many biological problems is the limited amount of available labeled training data. We pre-train the deep neural network on the ImageNet data and transfer the knowledge of natural images to generate the neuroimaging features for the real world application.\n\u2022 We considered the variance of subjects from different time points or ROIs and proposed a novel unsupervised dictionary learning method, termed Multitask Stochastic Coordinate Coding (MSCC), learning the different tasks simultaneously and utilizing shared and individual dictionary to encode both consistent and changing imaging features. To the best of our knowledge, it is the first deep model to integrate multi-task learning with dictionary learning research for brain imaging analysis.\n\u2022 We tested our hypothesis on two different feature sets (three time points and three brain areas) to better predict the future clinical cognitive scores. Specifically, we used the multiple time points features as multiple tasks input to predict future cognitive scores. We also use multiple ROIs as multiple tasks input to predict three future time points clinical scores. Our new approach outperforms seven other state-of-the-art methods and is able to boost the performance of diagnoses ranging from cognitively unimpaired to AD."}, {"section_title": "Multi-task Dictionary Learning based Convolutional Neural Network", "text": "Our first goal here is to explore whether this transfer learning framework of CNN can be generalized to biological image studies. Specifically, we pre-train the CNN model using ImageNet [10] data, containing millions of labeled natural images with thousands of categories to obtain initial parameters and subsequently generate the features on the longitudinal data for each tasks. In the experiments, we apply Alexnet [19] , which contains 7 layers, including convolutional layers with fixed filter sizes and different numbers of feature maps. We employ rectified non-linearity, maxpooling on each layer in our CNN model. We pretrain the CNN model on the ImageNet dataset, then remove the last fully-connected layer (this layer's outputs are the 1000 class scores for a different task like ImageNet). Finally, we treat the rest of the CNN as a fixed feature extractor for the publicly available Alzheimer's Disease Neuroimaging Initiative (ADNI) database [17] .\nWe further propose to use multi-task learning strategy to boost the future clinical score regression accuracy. The entire pipeline of our method is illustrated in Fig. 2 . To be specific, we train the deep CNN model on the Imagenet dataset firstly. Then we employ the pretrained network as a feature extractor for the ADNI dataset from multiple time points or multiple brain ROIs. The AlexNet has a seven layer structure deep neural network. As a result, we generate seven deep output features for each time point. We further employ MSCC to conduct the multi-task learning simultaneously, generating the sparse features and dictionaries from the deep features of different time points or different brain ROIs. In MSCC, we utilize shared and individual dictionaries to encode both consistent and changing imaging features along longitudinal time points. In the end, we employ the sparse codes generated from MSCC to perform the Lasso [29] and predict the future AD progression. MSCC is one kind of online learning methods and the advantage of online learning method is to solve the cases that the size of the input data might be too large (sample size up to 2867562 in this paper) to fit into memory or the input data comes in a form of a stream."}, {"section_title": "Multi-task Stochastic Coordinate Coding", "text": ""}, {"section_title": "Dictionary Learning", "text": "Given a finite training set of signals X = (x 1 , ..., x n ) where X \u2208 R p\u00d7n . Each x i is an image patch and x i \u2208 R p . Dictionary learning aims to learn a dictionary D where D \u2208 R p\u00d7l and a sparse code matrix Z, Z \u2208 R l\u00d7n . The original signals X is modeled by a sparse linear combination of D and Z as X \u2248 DZ. Given one image patch x i , we can formulate the following optimization problem:\nwhere \u03a8 = {D \u2208 R p\u00d7l : \u2200j \u2208 1, ..., l, ||D j || 2 \u2264 1}, D j denotes the jth column of D. \u03bb is the positive regularization parameter. z i is the learnt sparse codes for x i and Z = (z 1 , ..., z n ).\nThe optimization of Eq.1 can be decomposed into an alternative learning process in the Online Dictionary Learning methods (ODL) [23] . Given each image patch x i , ODL keeps the D fixed and learn z i , then keep z i fixed and learn D. The learning process runs \u03ba (a fixed constant) iterations until there are no more changes on D and Z."}, {"section_title": "The Proposed Algorithm", "text": "Given features from T different tasks: {X 1 ,X 2 , ..., X T }, our objective is to learn a set of sparse codes {Z 1 , Z 2 , ..., Z T } for each task where X t \u2208 R p\u00d7nt , Z t \u2208 R lt\u00d7nt and t \u2208 {1, ..., T }. n t is the number of subjects for X t and l t is the dimension of each sparse code in Z t . When employing the ODL to learn the sparse codes Z t by X t individually, we obtain a set of dictionary {D 1 , ..., D T } but there is no correlationship between learnt for t = 1 to T do 3: for i = 1 to n t do 4: Get an image patch x t (i) from sample X t . \nUpdate theD t andD t by one step SGD: "}, {"section_title": "(i).", "text": ""}, {"section_title": "11:", "text": "Update the shared dictionary \u03a6: \u03a6 =D k+1 t ."}, {"section_title": "12:", "text": "end for 13: end for 14: end for dictionaries. Another solution is to construct the features {X 1 , ..., X T } into one matrix X to obtain the dictionary D. However, if there is no latent common information shared by the same subject during different time points, only one dictionary D is not enough to show the variation among features from different time points. Such fact is supposed to be easily revealed in the variance of dictionary atoms and the sparsity of their corresponding sparse code matrices. To address this challenge, we integrate the idea of multi-task learning into the online dictionary learning method. We propose a novel dictionary learning algorithm, termed as Multi-task Stochastic Coordinate Coding (MSCC), to learn the sparse codes of subjects from different time points.\nFor the subjects' feature matrix X t of a particular task, MSCC learns a dictionary D t and sparse codes Z t . D t is composed of two parts:\np\u00d7lt andl +l t = l t .D t is the same among all the learnt dictionaries {D 1 , ..., D T } whileD t is different from each other and only learnt from the corresponding subjects' feature matrix X t . Therefore, objective function of MSCC can be reformulated as follows:\nwhere\nFig . 3 illustrates the framework of MSCC with features Algorithm 2 Updating sparse codes z\nend for 13: end for of ADNI from three different time points, which represents as X 1 , X 2 and X 3 , respectively. Through the multi-task learning process of MSCC, we obtain the dictionary and sparse codes for features from each time point t: D t and Z t . In MSCC, a dictionary D t is composed by a shared part D t and an individual partD t ,D 1 =D 2 =D 3 . For the individual part of dictionaries, MSCC learns a differentD t only from the corresponding feature matrix X t . We vary the number of columnsl t inD t to introduce the variant in the learnt sparse codes Z t . As a result, the dimensions of learnt sparse codes matrix Z t are different from each other.\nThe initialization of dictionaries in MSCC is critical to the entire learning process. We propose a random patch method to initialize the dictionaries from different time points. The main idea of the random patch method is to randomly select l image patches from n subjects {x 1 , x 2 , ..., x n } to construct D where D \u2208 R p\u00d7l . It is a similar way to perform the random patch approach in MSCC. In MSCC, the way we initializeD t is to randomly selectl subjects' feature from features' matrices across different time points {X 1 , \u00b7 \u00b7 \u00b7 , X T } to construct it. For the individual part of each dictionary, we randomly selectl subjects' feature from the corresponding matrix X t to construct D t .\nAfter initializing dictionary D t for each time point, we set all the sparse code Z t to be zero at the beginning. The key steps of MSCC are summarized in Algorithm 1.\nIn algorithm 1, k denotes the epoch number where k \u2208 [1, \u03ba]. \u03a6 represent the shared part of each dictionary D t which is initialized by the random patch method. For each subject's feature x t (i) extracted from X t , we learn the ith \nis the same among all the dictionaries."}, {"section_title": "Updating Sparse Codes and Dictionaries", "text": "The learning process of sparse code z k+1 t (i) is shown in algorithm 2. At first, we generate the non-zero index set I k+1 t by one step of CCD to record the nonzero entry of z k+1 t (i). Then we perform S steps CCD to update the sparse codes only on the non-zero entries of z k+1 t (i), accelerating the learning process significantly. \u2126 is a sparse matrix multiplication function that has three input parameters. Take \u2126(A, b, I) as an example, A denotes a matrix, b is a vector and I is an index set that records the locations of non-zero entries in b. The return value of function \u2126 is defined as: \u2126(A, b, I) = Ab. When multiplying A and b, we only manipulate the non-zero entries of b and corresponding columns of A based on the index set I, speeding up the calculation by utilizing the sparsity of b. \u0393 is the soft thresholding shrinkage function [9] and the definition of \u0393 is given by:\nThe procedure of updating dictionaries is shown in Algorithm 3. We perform one step SGD to update the dictionaries:D k+1 t andD k+1 t . The learning rate is set to be an approximation of the inverse of the Hessian matrix H k+1 t , which is updated by the sparse codes z k+1 t (i) in kth iteration. For the \u00b5th column of dictionary, we set the learning rate as the inverse of the diagonal element of the Hessian matrix, which is 1/H k+1 t (\u00b5, \u00b5). Since D t \u2208 \u03a8 t in equation (2) , it is necessary to normalize the dictionariesD k+1 t and D k+1 t after updating them. We can perform the normalization on the corresponding columns of non-zero entries "}, {"section_title": "Experiments", "text": "AD and its early stage, Mild Cognitive Impairment (MCI), are becoming the most prevalent neurodegenerative brain diseases in elderly people worldwide [4] . To this end, there have been a lot of efforts on investigating the underlying biological or neurological mechanisms and also discovering biomarkers for early diagnosis of AD and MCI. We conducted experiments from ADNI dataset [17] , which has been considered as the benchmark database for performance evaluation of various methods for AD diagnosis. We evaluated our method on two different sets of structural magnetic resonance imaging (MRI) data from the ADNI dataset: multiple time point hippocampal surface feature dataset (HP) [39] and multiple baseline brain ROI surface feature dataset (ROI). Specifically, for the HP dataset, we predicted clinical scores of patients at 24-month using their surface features at baseline, 6-month and 12-month. For the ROI dataset, we predicted clinical scores of patients at 6-month, 12-month and 24-month using their baseline hippocampal, ventricular and cortical thickness surface features."}, {"section_title": "Experimental Setup", "text": "We built a prediction model for each of the above datasets using multiple task geometry surface features. To train the CNN model, patches of size 50 \u00d7 50 are extracted from surface mesh structures. We implemented our CNN model using the Caffe toolbox [18] and the architecture of our CNN is shown in Tab. 1. The network was trained on a Intel (R) Xeon (R) 48-core machine, with 2.50 GHZ processors, 256 GB of globally addressable memory and a single Nvidia GeForce GTX TITAN black GPU. In the experimental setting of MSCC, the sparsity \u03bb = 0.1. Also, we selected 10 epochs with a batch size of 1 in Algorithm 1 and 3 iterations of CCD in Algorithm 2 (P is set to be 1 and S is set to be 3) in all the experiments. After we get the MSCC features, we used Max-Pooling [3] for further dimension reduction. Therefore, the feature dimentsion of each subject is a 1 \u00d7 2000 vector. To predict future clinical scores, we used Lasso regression. For the parameter selection, 5-fold cross validation is used to select model parameters in the training data (between 10 \u22123 and 10 3 ). We used the same method for all seven other comparison methods.\nIn order to evaluate the model, we randomly split the data into training and testing sets using an 8:2 ratio and used 10-fold cross validation to avoid data bias. Lastly, we evaluated the overall regression performance using normalized mean square error (nMSE), weighted correlation coefficient (wR) and root mean square error (rMSE) for task-specific regression performance measures. The three measures are defined as follows:\nFor nMSE and wR, Y i is the ground truth of target of task i and\u0176 i is the corresponding predicted value, \u03c3(Y i ) is the Standard deviation of Y i , Corr is the correlation coefficient between two vectors and n i is the number of subjects of task i. For rMSE, y is the ground truth of target at a single task and\u0177 is the corresponding prediction by a prediction model. The smaller nMSE and rMSE, as well as the bigger wR mean the better results. We reported the mean and standard deviation based on 40 iterations of experiments on different splits of data.\nWe compared the proposed model with some state-ofthe-art methods, which are as follows:\n\u2022 CNN-MSCC: Our proposed model.\n\u2022 CNN-R: CNN learned surface feature without transfer learning, followed by Lasso regression.\n\u2022 MSCC-R: The proposed multi-task dictionary learning algorithm followed by Lasso regression.\n\u2022 OLSC-R: The single-task dictionary learning [23] followed by Lasso regression. \u2022 cFSGL: A state-of-the-art multi-task algorithm called convex fused sparse group Lasso [44] .\n\u2022 L21: A state-of-the-art multi-task algorithm called L 2,1 norm regularization with least square loss [1] .\n\u2022 Lasso: A state-of-the-art single task method called Lasso regression [29] .\n\u2022 Ridge: A state-of-the-art single task method called Ridge regression [16] ."}, {"section_title": "Multiply Time-slots Hippocampal Surface Feature Dataset (HP)", "text": "Hippocampus is a subcortical structure in the medial temporal lobe of the brain [28] . Parametric shape models of the hippocampi are commonly developed for tracking shape differences or longitudinal atrophy in brain diseases. HP dataset consists of a total of 2246 subjects, consisting of 837 baseline, 733 6-month and 676 12-month imaging data. First, we used FIRST software [26] and marching cube method [22] to automatically segment and reconstruct hippocampal surfaces for each brain MR image. Then, we registered and computed surface multivariate morphometry statistics [34] , which consist of surface multivariate tensorbased morphometry and radial distances. For each subject, we obtained a 120,000 dimensional features of the hippocampal surfaces and we use a 50 \u00d7 50 window to obtain a collection of image patches as mentioned in Sec. 4.1. After preprocessing the data, we have 220968, 193512, 178464 image patches for different time points, respectively. Our goal is to predict Mini Mental State Examination (MMSE) and Alzheimer's Disease Assessment Scale cognitive subscale (ADAS-cog) of the 24-month patients. We used 12-month features learned by MSCC as Lasso design matrix (since it contains the baseline, 6, 12-months surface features) to train and test the 24-month clinical scores."}, {"section_title": "Comparison of Features from Different Layers", "text": "The deep learning model consists of multiple layers of feature maps, whereby each layer is a different representation of the input data. With this hierarchical representation, we selected the layers which has the most discriminative power to capture the characteristics of the input data by comparing the features extracted from various layers of the deep Comparison of MMSE and ADAS-cog prediction models in terms of rMSE on patients using only MCI patients in training (MCI only), and using MCI patients together with AD patients and normal controls (All) on ROI dataset.\nmodel CNN-R and CNN-MSCC. Specifically, we used the HP data as inputs to train the network and extracted features from 4th, 5th, 6th and 7th layers. These features were used to predict the MMSE and ADAS-cog of 24-month patients, the results are given in Fig. 4 . We observed that the 6th layer features outperformed the others in terms of overall performance in all three different deep models. The discriminative power increases from the 4th to 6th layer, and then drops afterwards as the depth of network increases. One reasonable explanation about this observation is the lower layers do not fully capture the surface features and the higher layers captured features that are specific to the training natural image set, and these features may not be relevant for surface features. In this paper, we use the 6th layer's features (4096) as the number of rows for all the dictionaries.\nThe Size of Common Dictionaries in MSCC In MSCC, the common dictionary is assumed to be shared by different tasks. It is necessary to evaluate what is the appropriate size of such common dictionary. Therefore, we set the dictionary size to be 2000 and partitioned the dictionary by different proportions: 250:1750, 500:1500, 1000:1000, 1500:500 and 1750:250. The left one is the size of common dictionary while the right one is the size of individual dictionary for each task. We used two methods MSCC-R and CNN-MSCC to evaluate the regression performance. Fig. 5 shows the results of rMSE of MMSE and ADAS-cog prediction on HP dataset. As it shows in Fig. 5 , the rMSE of MMSE and ADAS-Cog are lowest when we split the dictionary by half and a half. It means the both of common and individual dictionaries are of equal importance during the multi-task learning. In all experiments, we use the split of 1000:1000 as the size of common and individual dictionaries and 2000 is the number of columns (dimension of each sparse code) for all the dictionaries.\nPerformance Comparison. We compared the results of CNN-MSCC with other state-of-the-art methods on predicting 24-month MMSE and ADAS-cog in Table 2 and CNN-MSCC outperformed all other methods. The results of CNN-R and cFSGL are very close while MSCC-R methods are superior to them. For dictionary learning models, we observe that MSCC-R obtained a lower rMSE result than traditional dictionary learning method OLSC-R since we consider the correlation between different time slots for different tasks and the relationship with different time points on the same patient among all tasks. For the multi-task methods, we observed MSCC-R has better performance than L21 and cFSGL. Comparing with single-task methods, we noticed that the dictionary learning methods have better performance. We also show scatter plots of CNN-MSCC and MSCC-R for the predicted values versus the actual values for MMSE and ADAS-Cog on the testing data in Fig. 6 , it shows that CNN-MSCC achieved higher predictive correlation on both MMSE and ADAS-Cog. "}, {"section_title": "Multiple Baseline Brain ROIs Surface Features Dataset (ROI)", "text": "In this experiment, we utilized three structural measures of brain, which are hippocampi (as we mentioned in Sec. 4.2), lateral ventricle and cortical thickness, from the ADNI baseline dataset (N = 837). In brief, the lateral ventricles are often enlarged in disease and can provide sensitive measures of disease progression [28] and the cortical thickness can be used as an anatomical index for quantifying cortical shape variations [7] . For the hippocampal surface features, we used the same methods as HP dataset while for the ventricular surface features we did the following. First, we segmented images of the lateral ventricles to build the ventricular structure surface models using a levelset based topology preserving method [14] . Then we computed surface registrations using the canonical holomorphic one-form segmentation method [33] . Finally, surface multivariate morphometry statistics [34] were computed and obtained as a 308,247 dimensional features of the ventricular surfaces for each subject. The cortical thickness was computed by FreeSurfer [12] which deforms the white surface to pial surface and measures deforming distance as the cortical thickness. The spherical parameter surface and weighted spherical harmonic representation [6] [38] are used to register pial surfaces across subjects, which means each subjects have the same dimension (161,800) cortical thickness. The image patch size is 50 \u00d7 50 as mentioned in Sec. 4.1. After preprocessing the data, we have 220968, 2867562, 1504926 image patches for multiple input tasks, respectively. Performance Comparison. We constructed the prediction models by first forming the final baseline data from the combined three tasks features. Then, we used Lasso to individually predict 6-month, 12-month and 24-month MMSE and ADAS-cog scores with 8:2 ratio on training and testing data sets. The prediction results are reported in Table 3 and  Table 4 . We can observe that the performance of predicting 6-month, 12-month and 24-month scores of MMSE and ADAS-Cog are improved by CNN-MSCC and MSCC-R for all three time points. We can also notice that the significant improvement of the proposed CNN-MSCC and MSCC-R for later time points (12, 24-month) . This may be due to the data sparseness in later time points, as the proposed sparsity-inducing models are expected to achieve better prediction performance. Also, the improvement of ADAS-cog is more significant than MMSE.\nComparing MCI vs. all Baseline Dataset. In the study of AD, MCI patients are of particular interest because people with MCI are at high risk of progression to dementia. We studied the prediction performance on MCI patients and MCI patients together with AD patients and normal controls (CN) on ROI dataset. In the first experiment, we used only MCI patients in both training and testing data. We random split the MCI patients with 8:2 ratio for training and testing. For another experiment, we follow the same practice as in our previous experiments. The performance of predicting MMSE and ADAS-cog at all time points is given in Fig. 7 . We see that in most cases the prediction performance together with AD and CN induce the performance improvement. This may be due to the small sample size at later time points, in which the information from AD and CN subjects may be useful during the learning. Our discovery may shed new light onto the clinical cognitive score prediction of AD."}, {"section_title": "Conclusions and Future Work", "text": "In this work, we proposed a deep learning model, multitask dictionary learning based CNN to incorporate multiple time slots or multiple brain ROI imaging features, for predicting the AD clinical score. The proposed model is validated by extensive experimental studies and shown to be more efficient than seven other state-of-the-art methods. In future work, we will optimize our method and investigate its capability on brain multimodality imaging datasets."}]