[{"section_title": "Abstract", "text": "The following model description follows the ODD (Overview, Design concepts, Details) protocol for describing individual-and agent-based models (Grimm et al. 2006 (Grimm et al. , 2010 , with ODD+D amendments as proposed by M\u00fcller et al. (2013).\nI) Overview\nI.i Purpose\nThe Regional U.S. Hog Production Network Biosecurity Model (RUSHPNBM), version 1.2, is an agent-based susceptible / infective model developed to assess both supply chain network level and human-behavioral factors relevant to the spread of socioeconomically-important diseases through regional U.S. hog production chain networks. RUSHPNBM has been developed using AnyLogic v.8 software. The model is calibrated to represent hog production within the U.S. states of North Carolina, Iowa, and Illinois. These three states serve as case studies, since they are all major hog producers, while also having interesting supply chain network features that differentiate them from one another.\nModel calibration was undertaken using available datasets coupled with an iterative expert advisory panel process. The model uses agricultural statistics and model calibration tools to generate realistic production chain networks of producers, feed mills, and slaughter plants within the spatial bounds of each study area state.\nThe epidemiological spread submodel is of the susceptible / infective (SI) type, with infections transmitted between agents probabilistically based on patterns of trade and contact honed through industry expert advisory panels and a review of the primary literature. Disease spread probabilities associated with the different types of inter-agent contact have been calibrated by reference to epidemiological data concerning disease spread dynamics"}, {"section_title": "", "text": "associated with previous real-world epidemic events in the hog industry, as well as input from livestock veterinary professionals within the expert panel sessions."}, {"section_title": "I.i.b For whom is the model designed?", "text": "The model was designed for use by university researchers, industry practitioners, veterinary specialists, and government agencies wishing to analyze the dynamics and consequences of disease spread in U.S. hog production systems under varying assumptions concerning disease characteristics, production chain network structures, and implementation of biosecurity measures and agent behaviors that may prevent or curb catastrophic outbreaks."}, {"section_title": "I.ii Entities, State Variables, and Scales", "text": ""}, {"section_title": "I.ii.a What kinds of entities are in the model?", "text": "Three classifications of hog production chain network agents, identified by industry experts as critical players in the transmission of disease, are represented in the model. These are (a) producers, (b) feed mills, and (c) slaughter plants. Producer agents are assigned one of six industry roles. Five of these encompass the USDA's classification system for hog producers, these being (a) Farrow to Wean, (b) Wean to Feeder (a.k.a. Nursery), (c) Feeder to Finish (a.k.a. Finish Only), (d) Farrow to Feeder, and (e) Farrow to Finish. Upon the advice of industry experts, an additional producer classification, (f) Wean to Finish-which has recently become more popular in the industry-is also included in the model. Figure 1 below shows each agent type, its graphical representation, and an outline of the heuristics that govern inter-agent contact patterns. "}, {"section_title": "I.ii.b By what attributes (i.e. state variables and parameters) are these entities characterized?", "text": "Each agent class has a specific set of state variables and parameters relevant to its industry role. These are given in Tables 1-5, below. Infectivity state Either \"clean\" or \"infected\". Has been infected Flag indicating whether the agent was ever infected during a run."}, {"section_title": "Total infection duration", "text": "Counter indicating the total number of days an agent was infected during a run."}, {"section_title": "Contact network out degree & in degree", "text": "List of the other agents with whom each agent had contact throughout a run, as well as the number of times contact between the two agents occurred. Out degree is incremented whenever an agent sends animals or feed; in-degree whenever animals or feed are received."}, {"section_title": "Infection network out degree", "text": "List of the other agents to whom an agent spread the disease, along with the number of times infection spread occurred between the two agents throughout a run. "}, {"section_title": "Attribute Description Static parameters (set at initialization)", "text": "Farm category Encodes which of the 6 producer industry roles this agent falls into. Total capacity Total animal capacity.\nNumber of sows Number of sows (calculated using parameters for the ratio of sows to pigs associated with each producer classification). Non-sow capacity Total capacity minus number of sows."}, {"section_title": "My transferee producers", "text": "List of potential producer trading partner agent objects."}, {"section_title": "My slaughter plant", "text": "Link to slaughter plant agent object (finishing producers only)."}, {"section_title": "My feed mill", "text": "Link to feed mill agent object."}, {"section_title": "State variables (may change throughout simulation run)", "text": "Current piglet inventory Number of piglets currently available to wean and batch.\nLast weaning day Timecode of the last date piglets were batched and encoded in the pig batch tracker. Current non-sow pig inventory Number of pigs (that is, neither piglets or sows) currently on premises."}, {"section_title": "Pig batch tracker", "text": "Non-sow pigs are represented by a data structure encoding the size of each batch of stock currently making up the agent's hoofstock inventory, along with a timestamp representing that pig batch's \"birthday\", which is used to calculate the age of the batch."}, {"section_title": "Pig shipments in & out", "text": "Lists of sizes (number of animals) of each shipment incoming from and outgoing to the producer (used for calibration).\nFeed deliveries in Number of feed deliveries incoming to the producer (used for calibration). "}, {"section_title": "Truck infected", "text": "Flag indicating whether the feed mill's delivery truck is currently infected."}, {"section_title": "Feed deliveries out", "text": "Number of outgoing feed deliveries to producers (used for calibration). "}, {"section_title": "Pig shipments in", "text": "List of sizes (number of animals) of each shipment incoming from producers (used for calibration)."}, {"section_title": "I.ii.c What are the exogenous factors/drivers of the model?", "text": "Exogenous factors include the spatial and operational distributions of agents of each class within each study area (Table 5) , as well as parameters held constant across model runs (Table 6 ). These exogenous parameters can be broken down into general disease parameters, disease spread probabilities specific to each modality of inter-agent contact, and parameters pertaining to each agent class. "}, {"section_title": "EAP", "text": "Note: \"EAP\" indicates that the value was derived through expert advisory panel sessions. \"FHPC\" refers to the family-owned hog production chain system dataset."}, {"section_title": "I.ii.d If applicable, how is space included in the model?", "text": "The model is spatially situated in a continuous, two-dimensional GIS environment. Distances between agents are calculated \"as the crow flies\" and measured in kilometers. In some cases, distance is a factor in determining interagent contact patterns."}, {"section_title": "I.ii.e What are the temporal and spatial resolutions and extents of the model?", "text": "The model's time scale is based on real-world days, with the initial model date set to January 1 st , 2012. 2012 was chosen because FLAPS initialization data are drawn from the 2012 USDA Census of Agriculture (Burdett et al. 2015) . The model's stop date can be set as desired depending on the experimental phenomena the user is interested in studying. Model time is continuous (i.e., events may occur part-way through a day). The model's spatial extents correspond to the extents of the selected U.S. state study area. Space is also continuous in the model, utilizing a two-dimensional GIS framework."}, {"section_title": "I.iii Process Overview and Scheduling", "text": ""}, {"section_title": "I.iii.a What entity does what, and in what order?", "text": "Four classes of functions define the operation of the model, presented in order of the point(s) in the simulation that they occur (see the Implementation Details section). First are the initialization functions, which define how the agents will be physically situated in the space, set each agent's individual operational parameters, and identify lists of potential trading partners based on the classification and industry role of the agent, as well as spatial proximity to other agents. Second are the cyclically-executing functions, which make up the agents' decision rules, determining how and when contact between agents will occur (through the transfer of livestock and the distribution of feed), and thereby opening potentials for infection to spread. These functions also determine and implement the consequences of an infection upon the agent. Third is the initial infection function, which is called after the initial transient period in each run. Finally, fourth are the set of functions facilitating the output of model data for further analysis, including post-experiment scripts to parse model outputs and analyze results across multiple runs. All event scheduling in the model follows a Last-In-First-Out (LIFO) protocol. Because real-world epidemics are fundamentally phenomena which propagate through networks (social, business, transportation, etc.), the formulation of a suitably-realistic network structure within which agents operate is a fundamental basic principle of the model. A corollary to this basic principle concerns the model's balance between context specificity and analytic transparency. The model's network generation algorithm strives to maintain sufficient context specificity to capture the critical complexities underpinning observed epidemiological spread phenomena, while bracketing superfluous elements of real-world production chain networks which have not been implicated in previous epidemiological events. For example, the model contains only feed mill, producer, and slaughter plant agent classes, because these were identified by industry experts in our Delphi panels as the critical players underpinning the spread of fecal-oral livestock diseases. Whereas in real-world hog production chain networks there may be a multitude of other actor typologies (e.g. equipment suppliers, construction contractors, insurance agents, auction houses, and many more), these were intentionally excluded from the model's design to simplify analysis."}, {"section_title": "II) Design Concepts", "text": "Another guiding principle is the geospatial situation of the model within real U.S. states. The states of North Carolina, Iowa, and Illinois were chosen because they produce a large number of the nation's hogs, as well as being amongst the most hog-dense states. In many epidemiological studies, agent density has been shown to impinge directly upon spread characteristics. With high enough density, complex phenomena such as percolation thresholds may emerge (Wiltshire, 2018) ."}, {"section_title": "II.i.b On what assumptions is/are the agents' decision model(s) based?", "text": "The primary set of assumptions driving agent behavior relate to trade patterns associated with the industry role each agent plays, with agents in the model operating in accordance with general industry norms. For example, it is assumed that, as soon as their livestock batches reach the transfer age appropriate for their industry role, producer agents will search the agent space for trading partners until an appropriate partner is found, at which point the pig batch will be immediately transferred.\nAnother assumption concerns the spatial locations of non-producer agents. Since fine-grained spatial data were not available-and the FLAPS tool only covers livestock production units (Burdett et al. 2015 )-locations of nonproducer agents are initialized by distributing them at random positions within each county, in proportion to the number of producers in the county.\nSeveral assumptions also come into play concerning the distance, similarity, and number of other industry actors with which each agent may interact. These assumptions were parameterized using the maximum distance, minimum capacity similarity, and maximum connection number global parameters, as well as the characteristic connection distance \"lambda\" values that underlie how feed mill and slaughter plant service areas are generated. For example, in the case of feed mills, \u03bb = 1.5, indicating that most producers purchase feed from the nearest or second-nearest mill, with fewer purchasing from the third-nearest, fewer still from the fourth-nearest, etc. Alternatively, for slaughter plants, \u03bb = 2, indicating that the most likely outcome is for a producer to ship hogs to the second-closest plant. We note that a limitation of the model is that, since all agents exist within the bounds of a single U.S. state, inter-state trade is not accounted for.\nA further assumption is our representation of livestock in batches (or metapopulations) of animals of the same age. This was primarily done to reduce computational overhead (vs. storing each animal's parameters individually). In addition to having the same theoretical birthday, it is assumed that if a batch is infected, all of its members are infected.\nFinally, it is assumed that if a producer agent becomes infected, all of its livestock batches become infected. While a simplifying assumption to be sure, this is reasonably realistic, owing to the high observed virulence of the PED virus, which tends to sweep quickly through entire herds."}, {"section_title": "II.i.c Why is/are certain decision model(s) chosen?", "text": "Agents' decision heuristics primarily relate to their day-to-day operations, and rely on parameters including industry role, size, and spatial location. Based on industry standards along with individual parameters, agents make decisions pertaining to when and with whom inter-agent contact will occur. These contact patterns go on to impact the susceptible / infective state variable of each agent, according to probabilities associated with each modality of inter-agent contact"}, {"section_title": "II.i.d If the model/submodel (e.g. the decision model) is based on empirical data, where do the data come from?", "text": "We use the Farm Location and Agricultural Production Simulator (FLAPS) tool-which draws upon USDA Census of Agriculture data along with aerial imaging to impute realistic distributions of livestock farms within a specified U.S. region-to set producer agent locations and key operational parameters including industry roles and capacities (Burdett et al. 2015) . While the FLAPS tool serves as our primary means to set production unit locations and operational parameters, our team also gained access to internal records from a large family-owned hog production chain system-identified as \"FHPC\" in Table 6 -which was used to impute realistic contact rate and shipment size parameters. Several other sources of empirical data were also used to parameterize the model, also indicated in Table 6 ."}, {"section_title": "II.i.e At which level of aggregation were the data available?", "text": "The FLAPS system uses several core datasets to impute producer agent locations and operational characteristics. The system primarily relies upon the 2012 USDA Census of Agriculture, which is aggregated at the county level. However, FLAPS also leverages aerial imaging land use data to position agents more precisely within each county. Slaughter plant data from USDA NASS (2014) were aggregated at the level of the U.S. state."}, {"section_title": "II.ii Individual Decision-Making", "text": ""}, {"section_title": "II.ii.a What are the subjects and objects of the decision-making? On which level of aggregation is decisionmaking modelled? Are multiple levels of decision making included?", "text": "Decision-making is modeled at the level of the agent, be it a producer, feed mill, or slaughter plant. When transferring livestock, for example, a producer agent will wait until a pig batch matches the appropriate age corresponding to its industry role. This subject will then search among its potential trading partners (objects, in this case), which were pre-selected at model initialization to be of the appropriate industry role, until a suitable agent is found that has sufficient capacity to accept the shipment."}, {"section_title": "II.ii.b What is the basic rationality behind agent decision-making in the model? Do agents pursue an explicit objective or have other success criteria?", "text": "Agents in the model act according to accepted industry operational standards. They do not pursue a specific \"objective,\" per se, other than to efficiently take in new livestock and ship them out at the appropriate life cycle stage. Future versions of the model will incorporate adaptive agent decision-making, for example allowing for decisions which will reduce an agent's vulnerability if a disease is present in the network."}, {"section_title": "II.ii.c How do agents make their decisions?", "text": "A series of cyclically-executing functions (outlined in the Implementation Details section) govern how and when agents make decisions. These are based on the industry role of each agent."}, {"section_title": "II.ii.d Do the agents adapt their behavior to changing endogenous and exogenous state variables? And if yes, how?", "text": "Producer agents desiring to transfer livestock to the next production phase adapt their behavior based on the operational variables associated with their potential trading partners. This primarily comes down to finding a partner within a certain distance, of the appropriate industry role, of sufficiently-similar size, and with sufficient excess capacity to accept the shipment. The number of pigs housed at each production unit is constantly updated as the model runs, so the agents have to perform this search with each new outgoing shipment. However, agents in the current model do not adapt their decisions based on the prevalence of disease in the system, or other global factors."}, {"section_title": "II.ii.e Do social norms or cultural values play a role in the decision-making process?", "text": "Agents follow basic industry standards when making their decisions, which could be considered a kind of social norm. Values do not play into their choices, however."}, {"section_title": "II.ii.f Do spatial aspects play a role in the decision process?", "text": "Producer agents looking to transfer animals to another producer are constrained by a maximum distance parameter. The service areas of slaughter plant and feed mill agents are governed by Poisson distributions, with producers most likely to connect to the \u03bbth-closest of each."}, {"section_title": "II.ii.g Do temporal aspects play a role in the decision process?", "text": "Producer agents will only transfer livestock to their producer trading partners if the partner has sufficient excess capacity. Since the inventory of each agent is constantly in flux, the time when the transfer function is executed will determine the trading partner that is chosen. Farrowing producers will also wait to batch weaner pigs until the quantity of piglets is greater than or equal to the minimum batch size, as a proportion of their capacity."}, {"section_title": "II.ii.h To which extent and how is uncertainty included in the agents' decision rules?", "text": "Agent behavior does not account for uncertainty in the current model. However, we are pursuing behavioral research which will be used to parameterize agents in future model versions to react to uncertainty as regards disease prevalence in the networks (Merrill et al. 2008 )."}, {"section_title": "II.iii Learning", "text": ""}, {"section_title": "II.iii.a Is individual learning included in the decision process? How do individuals change their decision rules over time as consequence of their experience?", "text": "The agents' decision rules remain non-adaptive in the current model. Decision heuristics are based on industry roles, and are designed to realistically replicate throughput in the production chain system as a whole. Thus, an agent will transfer animals to an appropriate trading partner as soon as possible, farrowing will proceed regularly wherever a producer has sufficient excess capacity, and feed deliveries take place at a set frequency. The agents' behavior does not change as a result of model conditions, for example the presence of a disease within the network, however each agent will necessarily adapt to market conditions resulting from the available spare capacity of its trading partners."}, {"section_title": "II.iii.b Is collective learning implemented in the model?", "text": "No."}, {"section_title": "II.iv Individual Sensing", "text": ""}, {"section_title": "II.iv.a What endogenous and exogenous state variables are individuals assumed to sense and consider in their decisions? Is the sensing process erroneous?", "text": "Producer agents \"sense\" the operational variables associated with potential trading partners when making decisions concerning livestock transfers. An agent's perception of these factors is not erroneous, as it is based on a direct query of the potential recipients' operational variables at the time the transfer is desired."}, {"section_title": "II.iv.b What state variables of which other individuals can an individual perceive? Is the sensing process erroneous?", "text": "The primary state variables agents perceive when making livestock transfer decisions are the potential trading partner's industry role, capacity, inventory, and proximity."}, {"section_title": "II.iv.c What is the spatial scale of sensing?", "text": "At model initialization, producer agents generate a list of potential producer trading partners only within a given distance (150 km). It could be said that their \"sensing\" of other producers does not extend beyond this distance. Note that (based on the Poisson distributions discussed above), producers may very well interact with slaughter plants and feed mills beyond the 150-km limit imposed upon producer to producer transfers."}, {"section_title": "II.iv.d Are the mechanisms by which agents obtain information modelled explicitly, or are individuals simply assumed to know these variables?", "text": "Agents are simply assumed to know the relevant operational variables necessary to make the choice of which trading partner to choose."}, {"section_title": "II.iv.e Are the costs for cognition and the costs for gathering information explicitly included in the model?", "text": "No."}, {"section_title": "II.v Individual Prediction", "text": ""}, {"section_title": "II.v.a Which data do the agents use to predict future conditions?", "text": "Agents do not engage in predictive behavior concerning the likely outcomes of their actions. They simply operate according to industry standards."}, {"section_title": "II.v.b What internal models are agents assumed to use to estimate future conditions or consequences of their decisions?", "text": "None, although future versions of the model may incorporate the Theory of Planned Behavior with regard to agent decisions to increase biosecurity measures or limit livestock movements in response to a perceived disease threat in the system."}, {"section_title": "II.v.c Might agents be erroneous in the prediction process, and how is it implemented?", "text": "Since prediction is not currently a decision-making factor, no."}, {"section_title": "II.vi Interaction", "text": ""}, {"section_title": "II.vi.a Are interactions among agents and entities assumed as direct or indirect?", "text": "Interactions among agents take the form of transfers of livestock and feed. These transfers are assumed to be mediated by transportation equipment, and so can be conceived as indirect. For example, if a truck delivers livestock to an infected premises, a probability parameter governs whether the truck will become contaminated. The truck is then assumed to return to its origin, at which point (if it is contaminated), another probability parameter determines whether the truck contamination will result in infection of the original agent. Similarly, a feed truck originating from a mill may become contaminated upon reaching an infected producer premises, and then may pass the infection along to another producer on the same route, or to the mill itself upon its return."}, {"section_title": "II.vi.b On what do the interactions depend?", "text": "Interactions depend upon the operational variables associated with each agent. Producer agents will only initiate a transfer when a pig batch reaches the designated transfer age. Spatial proximity and underlying network structure-encoded at model initialization-also mediate interactions. For example, feed mills periodically generate delivery routes which encompass a subset of producer agents within their service areas."}, {"section_title": "II.vi.c If the interactions involve communication, how are such communications represented?", "text": "The only communication that is represented during livestock transfers is the size and age of pig batches, along with the spare capacity of the potential trading partner. This may be conceived as a phone call or email to potential trading partners inquiring whether they are able to accept the batch; or alternatively as predetermined business arrangements, common in private production system networks."}, {"section_title": "II.vi.d If a coordination network exists, how does it affect the agent behavior? Is the structure of the network imposed or emergent?", "text": "Agents coordinate only in the sense that, during livestock transfers, the receiving agent must concurrently have the spare capacity to accept the shipment. Thus, to the extent that coordination occurs in the model, it is emergent, not imposed."}, {"section_title": "II.vii Collectives", "text": ""}, {"section_title": "II.vii.a Do the individuals form or belong to aggregations that affect and are affected by the individuals? Are these aggregations imposed by the modeler or do they emerge during the simulation?", "text": "Livestock in the model may be considered as collectives (or metapopulations), as they are encoded in groups of animals with the same theoretical age. This is imposed by the model structure.\nIn addition, while not defined explicitly as such, groups of agents in the model exhibit emergent collective characteristics due to their differential spatial distribution across the model's GIS space. For example, in denselypacked areas, groups of agents tend to interact heavily within connected clusters, potentially leading to localized disease outbreaks. This type of emergent collective behavior is not directly imposed by the modeler, although the fixed spatial location and network structure that is imposed at model initialization impacts how and where such phenomena arise."}, {"section_title": "II.vii.b How are collectives represented?", "text": "Metapopulations of livestock are tracked as passive objects within a concurrent hash map data structure associated with each agent object. This data structure encodes the size and age of each pig batch.\nEmergent \"collectives\" of heavily-connected agent clusters are captured by tracking agent contact patterns over the course of each run, and outputting these data as weighted edge lists."}, {"section_title": "II.viii Heterogeneity", "text": ""}, {"section_title": "II.viii.a Are the agents heterogeneous? If yes, which state variables and/or processes differ between the agents?", "text": "As described in the Entities, state variables, and scales section above, agents fall into three main classes: (a) producers, (b) slaughter plants, and (c) feed mills. Producer agents are assigned one of six industry roles, based on the USDA classification system for hog producers, along with expert advisement. A producer agent's industry role determines the initial age of its livestock, its livestock age transfer condition, as well as the appropriate trading partners which make up its set of potential trading partners. These relationships are visualized in Figure 1 ."}, {"section_title": "II.viii.b Are the agents heterogeneous in their decision-making? If yes, which decision models or decision objects differ between the agents?", "text": "Agents' decision-making will differ depending upon their industry roles. For example, a farrow-to-wean producer will only send pigs to wean-to-feeder or wean-to-finish producers; slaughter plant agents will only receive hogs from finishing producers within their service areas; and feed mills will only distribute to producers within their service areas."}, {"section_title": "II.ix Stochasticity", "text": ""}, {"section_title": "II.ix.a What processes (including initialization) are modelled by assuming they are random or partly random?", "text": "RUSHPNBM uses both fixed-seed stochasticity (for initialization) as well as random-seed stochasticity (to mediate infection spread). All initialization procedures that are not drawn directly from the FLAPS data-for example the list of potential transferees for each producer-utilize a fixed seed in all draws from stochastic functions. This is important because we are interested in analyzing the dynamics associated with disease risk, and changing the basic supply chain network structure across runs would confound results. We also use fixed-seed draws from custom distributions-i.e., those based on the number of observations in a series of categories-to establish the spatial location of slaughter plants and feed mills to correspond with producer density by county.\nPoisson distributions are utilized in some cases in model initialization, for example to determine which slaughter plant or feel mill to which each producer will connect. Poisson distributions are used in the model because they require only a \u03bb parameter corresponding to the expected value of the distribution; because they are discrete, returning a whole-number; and because they cannot return a value less than zero. For initialization procedures, the fixed seed is utilized in these Poisson draws, maintaining the same initial \"latent\" network structure for each study area across runs.\nThe remainder of the stochasticity in the model uses a random seed, yielding a dataset representing a distribution of contact and infection patterns across model runs. Random-seeded stochasticity is first used to populate each producer's initial pig batches. Both the size and age of the pig groups associated with each producer are drawn from a uniform distribution bounded according to the producer's industry role. Since each producer will always start with a slightly different animal inventory, this ensures that the trade patterns that unfold throughout each model run are not repeated exactly. Random-seeded Poisson distributions are used to determine the number of producers to visit for each feed distribution trip.\nRandom-seed stochasticity is also used for all disease-spread calculations. Uniform probability distributions returning \"true\" if a randomly-drawn value between zero and one is less than p are used to determine if the infection will spread. Thus, whereas the disease spread probabilities stay constant across runs, the result of any given random draw using these probabilities may differ.\nFinally, a random-seeded triangular distribution centered at the average infection duration for each agent type, and limited to the range between 50% and 150% of this value, is used to determine the length of time an agent will remain in the infected state. Triangular distributions were used here because they are a good stand-in for the normal distribution, while offering an intuitive means to establish upper and lower limits."}, {"section_title": "II.x Observation", "text": ""}, {"section_title": "II.x.a What data are collected from the ABM for testing, understanding and analyzing it and how and when are they collected?", "text": "The model tracks in real-time the current livestock inventory of all producers in the model, the number of currently infected animals, the number of currently infected agents, and the cumulative number of infected agents, which can be output as time-series data to examine infection-spread dynamics. Tabular data including each agent's class, operational parameters, and other information is also output at the conclusion of each run.\nIn addition, a contact network adjacency matrix with link weights encoding the number of times each agent interacted throughout the model run is exported as tabular data after each run, and later parsed using a series of Python functions. An infection-spreading network is similarly tracked, output, and parsed. Key statistics on trade and infectivity patterns across a series of model runs-both at the individual agent as well as the whole-network level-may then be analyzed.\nFinally, for calibration purposes, we include an option to track the flow of feed and livestock between different types of agents, for example the distribution of hog shipment sizes and delivery frequencies, which can then be compared with available real-world data."}, {"section_title": "II.x.b What key results, outputs or characteristics of the model are emerging from the individuals? (Emergence)", "text": "Emergent phenomena in the model occur as a result of the contact patterns mediated by agents' decision heuristics. For example, this could take the form of differential disease spread dynamics resulting from the structures of contact networks that emerge throughout each run."}, {"section_title": "III) Details", "text": ""}, {"section_title": "III.i Implementation Details", "text": ""}, {"section_title": "III.i.a How has the model been implemented?", "text": "The model was implemented using AnyLogic v.8 software, which relies upon the Java programming language for all scripts and functions. The sections below use pseudocode to describe in detail the algorithmic structures underlying each model function.\nNotes on pseudocode used in this document:\n\u2022 The characters \"//\" will be used to designate a descriptive comment (i.e., the line of text following the \"//\" is not part of the actual function logic).\n\u2022 Parameters referenced in all functions refer to those associated with the agent object from which a function has been called. In some cases, to disambiguate, the terms \"self\" or \"my\" may be used to refer to the function-calling agent object or its associated parameters. \u2022 \"RANDOM DRAW using [probability]\" is defined here as the Boolean value resulting from: (DRAW random number from uniform distribution between 0 and 1) < [probability]"}, {"section_title": "III.i.b Is the model accessible, and if so where?", "text": "While the source code for the model is not accessible due to limitations of the AnyLogic software, the pseudocode below explicates the code at a high level of detail. In principle, these pseudocode functions may be used to implement the model using any desired programming language."}, {"section_title": "III.ii Initialization", "text": ""}, {"section_title": "III.ii.a What is the initial state of the model world, i.e. at time t = 0 of a simulation run?", "text": "The model is initialized by progressing through a series of functions. Several agent parameters are set as each agent object is generated by the model. Next, further agent parameters are set by reference to the model database. Finally, upon completion of the preceding, producer agents initialize their networks of potential trading partners to be referenced throughout the model run."}, {"section_title": "Initialization functions called from main object (in order of function calls):", "text": "Initialize map view function:\nSET GIS map boundaries and zoom on U.I. dashboard to correspond to study area Initialize agents function: Numbers, locations, and typological distributions of producer agents within the model are generated heuristically using the Farm Location and Agricultural Production Simulator (FLAPS) system developed through a collaboration between Colorado State University and the United States Department of Agriculture (Burdett et al. 2015) . FLAPS parses USDA National Agricultural Statistics Service (USDA NASS) databases along with land use data to impute spatially-explicit datasets depicting the distribution of livestock production units throughout the desired study area. Thus, while not representing actual farm locations, the producer agents in the model are distributed geographically and with characteristics including production volume and classification category in such a way as to be consistent with real-world distributions.\nAn implicit assumption we have made is that the distribution of slaughter plants and feed mills mirrors the distribution of producers by county. Once a non-producer agent's county has been assigned by drawing from this distribution, the agent is placed at a random set of coordinates within the selected county. Thus, counties with higher producer density will tend to have higher numbers of non-producer industry actors as well.\nFOR EACH producer agent // read in data for each agent from database and set appropriately READ latitude and longitude from database table corresponding to study area SET agent's spatial location READ total capacity from database table corresponding to study area SET agent's total capacity READ producer industry role from database table corresponding to study area // in consultation with industry experts, producers classified as \"other\" in the USDA NASS data are assumed to be \"wean to feeder\" IF (database query result = \"other\") SET agent's industry role to \"wean to finish\" ELSE SET agent's industry role to correspond with database query result SET agent's icon color to match producer type IF (agent is a farrowing type) SET agent's sow inventory to MAX of 1 and (total capacity * sow ratio parameter appropriate for agent's type) ELSE SET agent's sow inventory to zero SET agent's non-sow capacity to (total capacity -sow inventory) // iteratively generate initial pig batches SET minimum batch size to (agent's total capacity * minimum batch size as proportion of capacity parameter) WHILE (minimum batch size < remaining capacity) IF (agent's total capacity <= capacity under which a producer is assumed to have only one batch parameter) SET batch size to agent's non-sow capacity ELSE SET batch size to a random integer between minimum batch size and non-sow capacity IF ((batch size + current pig inventory) > non-sow capacity) SET batch size to minimum batch size SET batch birthday to a random integer between the maximum and minimum age of a pig for the agent's industry role ADD batch size and birthday to pig tracker INCREMENT agent's current inventory by batch size // distribute other agents by county to correspond with producer density FOR EACH county in study area READ number of producers in county from database ADD county name to county distribution array as many times as there are producers in that county FOR EACH slaughter plant agent DRAW RANDOM county name from county distribution array SET agent's spatial location to a random point inside the county drawn REPEAT above FOR loop for feed mill agents // now that locations and characteristics are set, run each producer's network initialization function in turn FOR EACH producer agent CALL agent's \"initialize network\" function\nProducer agent initialize network function:\nOnce the agents' locations and industry roles have been initialized, a network initialization function generates a set of potential trading partners for each agent. All producer agents are assigned one feed mill, and finishing producers are also assigned one slaughter plant, both connections being to the nth-closest of that agent type, with n being drawn from a Poisson distribution using the appropriate \u03bb parameter. A pool of potential transferee producers is also generated for each non-finishing producer according to their industry role. These relationships are shown in Figure 1 . The potential transferee producers in this potential transferee pool are filtered according to (a) the maximum producer-to-producer connection distance parameter, (b) the minimum capacity similarity ratio parameter, as well as (c) the maximum number of transferee producers parameter.\nIF industry role is NOT a finishing type Potential farms list = FILTER other producer agents s.t. (industry role of other producer is the next step in the production chain) AND (distance to the other producer <= max producer-producer connection distance global parameter) AND NOT ((total capacity / other producer's total capacity >= minimum capacity similarity ratio parameter) OR (other producer's total capacity / total capacity >= minimum capacity similarity ratio parameter))) WHILE ( "}, {"section_title": "III.ii.b Is the initialization always the same, or is it allowed to vary among simulations?", "text": "The initialization of the spatial location, operational characteristics, and potential trading partners for each agent remains consistent across runs within each of our three study area states. Thus, there are in essence three distinct initial states with regard to the above parameters, defined by the study areas. However, the initial livestock population housed at each producer premises differs between runs, as do the real-time trading choices and infection spread patterns experienced by each agent throughout the run. For more detail, see the Stochasticity section."}, {"section_title": "III.ii.c Are the initial values chosen arbitrarily or based on data?", "text": "Initialization parameters rely upon several datasets, including the University of Colorado / USDA FLAPS system (Burdett et al. 2015) , USDA NASS data (USDA NASS 2014), Google Maps queries, and livestock industry internal records. For more details, see the initialization function descriptions and pseudocode above, section III.iv.c, as well as Table 6 ."}, {"section_title": "III.iii Input Data", "text": ""}, {"section_title": "III.iii.a Does the model use input from external sources such as data files or other models to represent processes that change over time?", "text": "The model relies upon an external database to store many of the initialization parameters. Once set, these values remain static throughout each model run."}, {"section_title": "III.iv Submodels", "text": ""}, {"section_title": "III.iv.a What, in detail, are the submodels that represent the processes listed in 'Process Overview and Scheduling'?", "text": "Producer agent cyclically-executing functions:\nFarrow, wean, and batch piglets function:\nIf a farm which farrows piglets (Farrow to Wean, Farrow to Feeder, or Farrow to Finish types) is left with excess capacity after a livestock transfer, a farrowing function fills that capacity with a new batch of piglets, whose birthday is set to the current model day. Once again, to eliminate unrealistically-small pig groups, a minimum farrowing size as a proportion of the farrowing farm's total capacity is required for the farrowing function to proceed. Thus, a farm which is already almost at maximum capacity will not farrow a new batch of piglets until another batch has been shipped to an appropriate trading partner.\n**Recurrence time is the frequency of weaning global parameter** IF industry role is a farrowing type // calculate number of farrowed piglets ready to wean and batch Current piglet inventory = MIN of remaining pig capacity and (days since last weaning day * number of sows * (global parameter for piglets weaned annually / 365)) IF infectivity state is \"infected\" DECREMENT current piglet inventory according to suckling mortality rate global parameter // wean and batch piglets Number to wean and batch = MIN of current piglet inventory and remaining pig capacity IF (number to wean and batch >= my minimum batch size) ADD number to wean and batch and birthday (current day -35) to pig batch tracker INCREMENT non-sow pig inventory by batch size DECREMENT piglet inventory by batch size SET last weaning day to current day Evaluate pig shipments function:\nNon-finishing producers transfer hoofstock to a transferee farm as soon as the hoofstock reach the age corresponding to the transfer condition associated with the industry role of the producer. If it is determined that the transfer age requirement of a pig batch has been met, the transferee producers in the transferring producer's pool of possible producer trading partners are sequentially evaluated to determine whether they are able to receive the shipment. To eliminate the transfer of unrealistically-small groups of livestock, transfers will only proceed if the pig batch size exceeds the minimum transfer quantity, as a proportion of the transferee's total capacity. If the excess capacity of a potential transferee producer is less than the size of the pig batch, the pig batch will be split such that the transferree producer's capacity will be filled, and the remaining animals will stay with the transferring producer. The transferring producer will then continue to assess producers until all remaining pigs in the pig batch have been transferred to appropriate trading partners.\nIf the transferring producer is infected but the transferee is not, the transferred hoofstock will automatically spread the infection to the transferee producer. If the transferee producer is infected but the transferring producer is not, the \"delivery trailer\" returning from the infected transferee producer may infect the transferring producer according to a probability set at model initialization.\nThe birthday parameter associated with the batch of transferred stock is maintained as it is passed to the transferee(s), such that the pig batch will once again be appropriately transferred to the next production phase at the correct transfer age. In the rare case that a pig batch grows too old before a suitable transferee producer can be located, the pig group is culled, making room for a new batch of pigs.\nFinishing producers (Feeder to Finish and Farrow to Finish types) ship hoofstock their slaughter plant as soon as the hoofstock reach the designated slaughtering age. If the transferring producer is infected, the receiving area of the slaughter plant may become contaminated according to a probability set at model initialization. If the receiving area of the slaughter plant is already contaminated, the \"delivery trailer\" returning to the transferring producer may carry the infection back to that producer according to another probability set at model initialization. // infection brought to slaughter plant via infected pigs IF (infectivity state is \"infected\") AND (RANDOM DRAW using Prob. slaughter plant receiving area will become infected if pig batch is infected) SET slaughter plant's infectivity state to \"infected\" ADD OR INCREMENT slaughter plant in infection-spreading network out degree list // infection brought home via trailer from slaughter plant IF (slaughter plant's infectivity state is \"infected\") AND (RANDOM DRAW using Prob. pig truck will become contaminated if receiving area is infected) AND (RANDOM DRAW using Prob. producer will become infected if returning pig truck is contaminated) SET infectivity state to \"infected\" ADD OR INCREMENT self in slaughter plant's infection-spreading network out degree list IF (non-sow pig inventory is zero)\nSET infectivity state to \"clean\" RESUME farrow, wean, and batch piglets function countdown Feed mill agent cyclically-executing functions Feed mills periodically generate delivery routes encompassing a subset of producers within their latent feed-millto-producer link set. Each route encompasses a subset of the producers in the feed mill's service area, with the number of stops in each trip resulting from a draw from a Poisson distribution. While there is no actual \"feed truck\" object in the model, the logic of the following function is based on the way such a truck would move between agents and possibly spread disease.\nBeginning from the mill, this conceptual feed truck will visit the previously-drawn number of randomly-selected producers within the feed mill's service area before finally returning to the feed mill. If the feed mill is infected, the truck may be contaminated initially. Should the truck encounter an infected producer on its route, it may become contaminated at that point. Once a truck is contaminated, the infection may be spread to subsequent producers on the route. If a contaminated truck returns to the feed mill, the mill itself may become infected.\nDistribute feed function: **Recurrence time is the frequency of feed deliveries global parameter** // determine whether truck is initially infected IF (infectivity state is \"infected\") AND (RANDOM DRAW using Prob. feed truck will become contaminated if feed mill is infected) SET truck infected to \"true\" ELSE SET truck infected to \"false\" // determine number of farms on delivery route SET number to visit to MIN of (number of farms in service area) and (DRAW from Poisson distribution with lambda equal to global parameter encoding average number of producers visited per route) // generate delivery route FOR number to visit ADD random producer in service area (that is not already in delivery route list) to delivery route list // parse infectivity consequences of delivery route FOR EACH producer in delivery route list // update contact network trackers ADD OR INCREMENT producer in contact network out-degree list ADD OR INCREMENT self in producer's contact network in-degree list //infected truck infects farm it's delivering to IF (truck infected is true) AND (RANDOM DRAW using Prob. producer will become infected if feed truck is contaminated) SET producer's infectivity state to \"infected\" ADD OR INCREMENT producer in infection-spreading network out degree list //truck becomes infected from delivery to infected farm IF (producer's infectivity state is \"infected\") AND (RANDOM DRAW using Prob. feed truck will become contaminated if producer is infected) SET truck infected to \"true\" SET \"truck-infecting producer\" to current producer // infected truck infects feed mill IF (truck infected is \"true\") AND (RANDOM DRAW using Prob. feed mill will become infected if returning feed truck is contaminated) SET infectivity state to \"infected\" ADD OR INCREMENT self in truck-infecting producer's infection-spreading network out degree list"}, {"section_title": "Initial infection function", "text": "The system is initialized with all agents free of infection. After one model year has passed, an infection is introduced to a random subset of producer agents. The proportion of agents which are infected by the initial infection function may be set at model initialization.\nThe reason for the one-year lag is to skip the transient period and allow the model to stabilize before analyzing the effect of an introduced disease. This lag is necessary because, as in a real production chain, a certain amount of slack, or a difference between the theoretical production capacity and actual production, is characteristic in the modeled production chains. In the model, this economic slack is due to the producers sometimes temporarily operating at less than maximum hoofstock capacity until an appropriate shipment of livestock becomes available. In general, after about 9 months, the level of slack in the model has stabilized."}, {"section_title": "Initial infection function:", "text": "**Function is called only once, after one model year** FOR number to infect global parameter SET randomly chosen producer agent's infectivity state to \"infected\""}, {"section_title": "Infection control functions", "text": "Susceptible/infective state charts:\nEach agent has an embedded state chart which encodes its infectivity status. Should an agent become infected, a function is called which calculates the number of its stock which are to die of the disease. The proportion of livestock which succumb to the disease is based on the age of the pig groups, with uniform mortality rates set at model initialization for suckling pigs, nursery pigs, and grow/finish hogs. After die-off is calculated for pig groups of each life stage within an infected producer's inventory, the producer's inventory data are updated accordingly. An agent will remain infected for a duration whose mean length in days is controlled by parameters specific to each agent type by drawing from a triangular distribution limited to between 50% and 150% of the mean value. Upon transition back to \"clean,\" the total infection duration is updated for later analysis. In some cases, such as when a producer has an inventory of zero after transferring pigs, the transition back to a \"clean\" state may also be triggered manually. Calculate mortality function:\nDECREMENT piglet inventory by global parameter encoding piglet mortality proportion FOR EACH pig batch in pig batch tracker DECREMENT pig batch size by global parameter encoding mortality proportion appropriate for age of pigs"}, {"section_title": "III.iv.b What are the model parameters, their dimensions and reference values?", "text": "See Table 6 ."}, {"section_title": "III.iv.c How were the submodels designed or chosen, and how were they parameterized and then tested?", "text": "Due to the inherent variability of epidemic events within complex networked systems, we are interested less in empirically-validating the model to be used as a forecasting tool, and more in developing sufficient structural and face validity to allow for a deeper understanding of the dynamics of the modeled systems. Even given identical starting conditions, deviations in contact patterns over the course of a real-world disease incursion render precise forecasts unfeasible. For example, while reducing outcome volatility in RUSHPNBM could easily be accomplished by eliminating stochasticities associated with disease transmission, calibrating the model such that outcomes correspond precisely to a single observed epidemic event misses the point. Our aim is rather to uncover and better understand the fundamental network features that lead to epidemiological vulnerability in livestock production systems more generally.\nCalibration and validation procedures that leverage concrete historical data are often regarded as the best way to bring a model in line with empirical evidence. Unfortunately, there is a marked lack of publicly-available data in the agricultural sector beyond aggregated county-or state-level statistics. To the extent that datasets containing explicit locations, operational parameters, livestock and feed movements, and disease histories exist; these data tend to be held by private enterprises, which view them as sensitive internal records. In light of this, following Windrum et al. (2007) , we employ several alternative calibration procedures that have been widely-used in previous modeling endeavors in which fine-grained data are scarce.\nThe spatial locations and basic operational parameters of RUSHPNBM agents associated with each study area are calibrated using the ``indirect'' approach, whereby stylized facts about the distribution of agents in the system are gleaned from statistical datasets. Statistical datasets used in this process include the FLAPS output data, USDA data, and livestock and feed movement records we obtained from a large U.S. family-owned hog production chain system (discussed below).\nTo calibration additional model elements that define how and when inter-agent contact occurs, as well as epidemiological submodel parameters, we leveraged an iterative companion modeling approach (Barreteau et al. 2003) . 2015 to 2017, we convened several Delphi panels consisting of livestock industry and veterinary experts at national research team meetings and livestock veterinary conferences. In these meetings, we used both qualitative focus groups as well as questionnaires to elicit and hone parameter values. Using this participatory methodology, the modeled system was brought in line with the collective understandings of stakeholders who are intimately familiar with the operational details of U.S. livestock production systems. As model development progressed, these same experts also provided input to ensure the face validity of the distribution of epidemic patterns, scales, and durations produced by the model.\nThe model's parameters and functions controlling pig movement and feed deliveries were further validated with the help of data provided by a large U.S. family-owned hog production chain system (as a result of our confidentiality agreement, the company's name is not disclosed here). The database contains two-year records of each pig movement and each feed delivery involving producers in the system, although spatial data on premises locations were not provided. The family-owned hog production chain system consists of a network of 161 producer partners that raise pigs from birth to market. This production chain system has two characteristics that allowed for the parameterization and validation of RUSHPNBM. The first characteristic is that the farm sizes vary from small (300 pigs) to large (8800 pigs, Figure 3 ). The second characteristic is that pigs are grown at specialized sites including farrowing, wean-to-finish, nursery, and finishing premises; and are moved across the production network according to their growing stage. The pig movement records were used to derive realistic estimates of hog transfer frequencies and number of hogs per transfer relative to farm size, including both producer to producer transfers, and producer to slaughter plant transfers (Table 7) . The feed delivery records were used to estimate delivery frequencies (Figure 4 ). Figure 4: Average number of feed deliveries per producer per year Finally, we conducted a sensitivity analysis focusing on four key parameters, each representing a specific aspect of the model's architecture. Each parameter is varied in steps between 50% and 150% of the baseline values given in Table 6 , with ten replications per step. Table 8 shows the elasticity of the response variable---average vulnerability---across this range. Figure 5 visualizes the sensitivity analysis data along with linear correlations. Results of the sensitivity analysis show that the model is moderately-sensitive to changes in the probability of producer to pig truck infections and the probability of feed truck to feed mill infections; with the effect on average vulnerability being positive in all study areas, and generally highest in Illinois. For maximum producer connection distance, the magnitude and direction of the effect varies considerably between study areas, with Iowa demonstrating a negative relationship with the response variable. The R 2 values suggest that, overall, the model is not particularly sensitive to maximum producer connection distance. By contrast, increasing the average producer infection length causes significant increases in average vulnerability across all study areas. In light of previous SIR / SI model studies, the observation that average infection duration heavily impacts average vulnerability is not a surprise. The shape of the elasticity curves suggest that percolation dynamics may exist, with the nonlinearity---or percolation threshold---being lowest for North Carolina and higher for the other two study areas, corroborating findings from Wiltshire (2018) ."}]