[{"section_title": "Abstract", "text": "Abstract. Genome-wide association studies (GWAS) offer new opportunities to identify genetic risk factors for Alzheimer's disease (AD). Recently, collaborative efforts across different institutions emerged that enhance the power of many existing techniques on individual institution data. However, a major barrier to collaborative studies of GWAS is that many institutions need to preserve individual data privacy. To address this challenge, we propose a novel distributed framework, termed Local Query Model (LQM) to detect risk SNPs for AD across multiple research institutions. To accelerate the learning process, we propose a Distributed Enhanced Dual Polytope Projection (D-EDPP) screening rule to identify irrelevant features and remove them from the optimization. To the best of our knowledge, this is the first successful run of the computationally intensive model selection procedure to learn a consistent model across different institutions without compromising their privacy while ranking the SNPs that may collectively affect AD. Empirical studies are conducted on 809 subjects with 5.9 million SNP features which are distributed across three individual institutions. D-EDPP achieved a 66-fold speed-up by effectively identifying irrelevant features."}, {"section_title": "Introduction", "text": "Alzheimer's Disease (AD) is a severe and growing worldwide health problem. Many techniques have been developed to investigate AD, such as magnetic resonance imaging (MRI) and genome-wide association studies (GWAS), which are powerful neuroimaging modalities to identify preclinical and clinical AD patients. GWAS [4] are achieving great success in finding single nucleotide polymorphisms (SNPs) associated with AD. For example, APOE is a highly prevalent AD risk gene, and each copy of the adverse variant is associated with a 3-fold increase in AD risk. The Alzheimer's Disease Neuroimaging Initiative (ADNI) collects neuroimaging and genomic data from elderly individuals across North America. However, processing and integrating genetic data across different institutions is challenging. Each institution may wish to collaborate with others, but often legal or ethical regulations restrict access to individual data, to avoid compromising data privacy.\nSome studies, such as ADNI, share genomic data publicly under certain conditions, but more commonly, each participating institution may be required to keep their genomic data private, so collecting all data together may not be feasible. To deal with this challenge, we proposed a novel distributed framework, termed Local Query Model (LQM), to perform the Lasso regression analysis in a distributed manner, learning genetic risk factors without accessing others' data. However, applying LQM for model selection-such as stability selectioncan be very time consuming on a large-scale data set. To speed up the learning process, we proposed a family of distributed safe screening rules (D-SAFE and D-EDPP) to identify irrelevant features and remove them from the optimization without sacrificing accuracy. Next, LQM is employed on the reduced data matrix to train the model so that each institution obtains top risk genes for AD by stability selection on the learnt model without revealing its own data set. We evaluate our method on the ADNI GWAS data, which contains 809 subjects with 5,906,152 SNP features, involving a 80 GB data matrix with approximate 42 billion nonzero elements, distributed across three research institutions. Empirical evaluations demonstrate a speedup of 66-fold gained by D-EDPP, compared to LQM without D-EDPP. Stability selection results show that proposed framework ranked APOE as the first risk SNPs among all features."}, {"section_title": "Data processing", "text": ""}, {"section_title": "ADNI GWAS data", "text": "The ADNI GWAS data contains genotype information for each of the 809 ADNI participants, which consist of 128 patients with AD, 415 with mild cognitive impairment (MCI), 266 cognitively normal (CN). SNPs at approximately 5.9 million specific loci are recorded for each participant. We encode SNPs with the coding scheme in [7] and apply Minor Allele Frequency (MAF) < 0.05 and Genotype Quality (GQ) < 45 as two quality control criteria to filter high quality SNPs features, the details refer to [11] ."}, {"section_title": "Data partition", "text": "Lasso [9] is a widely-used regression technique to find sparse representations of data, or predictive models. Standard Lasso takes the form of\nwhere A is genomic data sets distributed across different institutions, y is the response vector (e.g., hippocampus volume or disease status), x is sparse representation-shared across all institutions and \u03bb is a positive regularization parameter. Suppose that we have m participating institutions. For the ith institution, we denote its data set by (A i , y i ), where A i \u2208 R ni\u00d7p , n i is the number of subjects in this institution, p is the number of features, and y i \u2208 R ni is the corresponding response vector, and n = m i n i . We assume p is the same across all m institutions. Our goal is to apply Lasso to rank risk SNPs of AD based on the distributed data sets (A i , y i ), i = 1, 2, ..., m. Fig. 1 illustrates the general idea of our distributed framework. Suppose that each institution maintains the ADNI genome-wide data for a few subjects. We first apply the distributed Lasso screening rule to pre-identify inactive features and remove them from the training phase. Next, we employ the LQM on the reduced data matrices to perform collaborative analyses across different institutions. Finally, each institution obtains the learnt model and performs stability selection to rank the SNPs that may collectively affect AD. The process of stability selection is to count the frequency of nonzero entries in the solution vectors and select the most frequent ones as the top risk genes for AD. The whole learning procedure results in the same model for all institutions, and preserves data privacy at each of them."}, {"section_title": "Methods", "text": ""}, {"section_title": "Local Query Model", "text": "We apply a proximal gradient descent algorithm-the Iterative Shrinkage/Thresholding Algorithm (ISTA) [2] -to solve problem (1). We define g(x; A, y) = ||Ax \u2212 y|| 2 2 as the least square loss function. The general updating rule of ISTA is:\nwhere k is the iteration number, t k is an appropriate step size, and \u0393 is the soft thresholding operator [8] defined by\nIn view of (2), to solve (1), we need to compute the gradient of the loss function \u2207g, which equals to A T (Ax \u2212 y). However, because the data set (A, y)\nis distributed to different institutions, we cannot compute the gradient directly.\nTo address this challenge, we propose a Local Query Model to learn the model x across multiple institutions without compromising data privacy. In our study, each institution maintains its own data set (A i , y i ) to preserve their privacy. To avoid collecting all data matrices A i , i = 1, 2, ..., m together, we can rewrite the problem (1) as the following equivalent formulation:\nis the least squares loss.\nThe key of LQM lies in the following decomposition:\nWe use \"local institution\" to denote all the institutions and \"global center\" to represent the place where intermediate results are calculated. The ith local institution computes\nThen, each local institution sends the partial gradient of the loss function to the global center. After gathering all the gradient information, the global center can compute the accurate gradient with respect to x by adding all \u2207g i together and send the updated gradient \u2207g back to all the local institutions to compute x.\nThe master (global center) only servers as the computation center and does not store any data sets. Although the master gets g i , it could not reconstruct A i and y i . Let g k i denote the kth iteration of g i . Suppose x is initialized to be zero, g\ncan not be reconstructed since updating and storing x only happens in the workers (local institution). As a result, LQM can properly maintain data privacy for all the institutions."}, {"section_title": "Safe Screening Rules for Lasso", "text": "The dual problem of Lasso (1) can be formulated as the following equation:\nwhere \u03b8 is the dual variable and [A] j denotes the jth column of A. Let \u03b8 * (\u03bb) be the optimal solution of problem (3) and x * (\u03bb) denotes the optimal solution of problem (1) . The Karush-Kuhn-Tucker (KKT) conditions are given by:\n[A]\nwhere [x * (\u03bb)] k denotes the kth component of x * (\u03bb). In view of the KKT condition in equation (5), the following rule holds:\nThe inactive features have zero components in the optimal solution vector x * (\u03bb) so that we can remove them from the optimization without sacrificing the accuracy of the optimal value in the objective function (1). We call this kind of screening methods as Safe Screening Rules. SAFE [3] is one of highly efficient safe screening methods. In SAFE, the jth entry of x * (\u03bb) is discarded when\nwhere \u03bb max = max j [A]\nT j y . As a result, the optimization can be performed on the reduced data matrix A and the original problem (1) can be reformulated as:\nwhere p is the number of remaining features after employing safe screening rules. The optimization is performed on a reduced feature matrix, accelerating the whole learning process significantly."}, {"section_title": "Distributed Safe Screening Rules for Lasso", "text": "As data are distributed to different institutions, we develop a family of distributed Lasso screening rule to identify and discard inactive features in a distributed environment. Suppose ith institution holds the data set (A i , y i ), we summarize a distributed version of SAFE screening rules (D-SAFE) as follows:\nStep 1:\nStep 3, we first compute To tune the value of \u03bb, commonly used methods such as cross validation need to solve the Lasso problem along a sequence of parameters \u03bb 0 > \u03bb 1 > ... > \u03bb \u03ba , which can be very time-consuming. Enhanced Dual Polytope Projection (EDPP) [10] is a highly efficient safe screening rules. Implementation details of EDPP is available on the GitHub: http://dpc-screening.github.io/lasso.html.\nTo address the problem of data privacy, we propose a distributed Lasso screening rule, termed Distributed Enhanced Dual Polytope Projection (D-EDPP), to identify and discard inactive features along a sequence of parameter values in a distributed manner. The idea of D-EDPP is similar to LQM. Specifically, to update the global variables, we apply LQM to query each local center for intermediate results-computed locally-and we aggregate them at global center. After obtaining the reduced matrix for each institution, we apply LQM to solve the Lasso problem on the reduced data set A i , i = 1, ..., m. We assume that j indicates the jth column in A, j = 1, ..., p, where p is the number of features. We summarize the proposed D-EDPP in Algorithm 1.\nTo calculate R, we apply LQM through aggregating all the R i together in the global center by R = m i R i and send R back to every institution. The same"}, {"section_title": "Algorithm 1 Distributed Enhanced Dual Polytope Projection (D-EDPP)", "text": "Require: A set of data pairs {(A1, y1), (A2, y2) , ..., (An, yn)} and ith institution holds the data pair (Ai, yi). A sequence of parameters: \u03bbmax = \u03bb0 > \u03bb1 > ... > \u03bb\u03ba. Ensure: The learnt models: {x * (\u03bb0), x * (\u03bb1), ..., x * (\u03bb\u03ba)}. 1: Perform the computation on n institutions. For the ith institution: 2:\nLet Ri = A Let \u03bb0 \u2208 (0, \u03bbmax] and \u03bb \u2208 (0, \u03bb0]."}, {"section_title": "5:", "text": "\u03b8i(\u03bb) = y i \u03bbmax , if \u03bb = \u03bbmax, y i \u2212A i x * (\u03bb) \u03bb , if \u03bb \u2208 (0, \u03bbmax), 6: Ti = v T i * yi, compute T = m i Ti by LQM. 7: v1(\u03bb0)i = sign(T ) * vi, if \u03bb0 = \u03bbmax, y i \u03bb 0 \u2212 \u03b8i(\u03bb0), if \u03bb0 \u2208 (0, \u03bbmax), 8: v2(\u03bb, \u03bb0)i = y i \u03bb \u2212 \u03b8i(\u03bb0), Si = ||v1(\u03bb0)i|| 2 2 , compute S = m i Si by LQM. 9: v \u22a5 2 (\u03bb, \u03bb0)i = v2(\u03bb, \u03bb0)i \u2212 <v 1 (\u03bb 0 ) i ,v 2 (\u03bb,\u03bb 0 ) i > S v1(\u03bb0)i."}, {"section_title": "10:", "text": "Given a sequence of parameters: \u03bbmax = \u03bb0 > \u03bb1 > ... > \u03bb\u03ba, for k \u2208 [1, \u03ba], we make a prediction of screening on \u03bb k if x * (\u03bb k\u22121 ) is known:"}, {"section_title": "11:", "text": "for j=1 to p do 12:\nWe identify [x * (\u03bb k )]j = 0."}, {"section_title": "15:", "text": "end for approach is used to calculate T , S and w in D-EDPP. The calculation of ||[A] j || 2 and ||v \u22a5 2 (\u03bb k , \u03bb k\u22121 )|| 2 follows the same way in D-SAFE. The discarding result of \u03bb k relies on the previous optimal solution x * (\u03bb k\u22121 ). Especially, \u03bb k equals to \u03bb max when k is zero. Thus, we identify all the elements to be zero at x * (\u03bb 0 ). When k is 1, we can perform screening based on x * (\u03bb 0 )."}, {"section_title": "Local Query Model for Lasso", "text": "To further accelerate the learning process, we apply FISTA [1] to solve the Lasso problem in a distributed manner. The convergence rate of FISTA is O(1/k 2 ) compared to O(1/k) of ISTA, where k is the iteration number. We integrate FISTA with LQM (F-LQM) to solve the Lasso problem on the reduced matrix A i . We summarize the updating rule of F-LQM in kth iteration as follows:\nStep 1:\nStep 3:\nThe matrix A i denotes the reduced matrix for the ith institution obtained by D-EDPP rule. We repeat this procedure until a satisfactory global model is obtained.\nStep 1 calculates \u2207g k i from local data ( A i , y i ). Then, each institution performs LQM to get the gradient \u2207g k based on (5).\nStep 2 updates the auxiliary variables z k and step size t k .\nStep 3 updates the model x. Similar to LQM, the data privacy of institutions are well preserved by F-LQM."}, {"section_title": "Experiment", "text": "We implement the proposed framework across three institutions on a state-ofthe-art distributed platform-Apache Spark-a fast and efficient distributed platform for large-scale data computing. Experiment shows the efficiency and effectiveness of proposed models."}, {"section_title": "Comparison of Lasso with and without D-EDPP rule", "text": "We choose the volume of lateral ventricle as variables being predicted in trials containing 717 subjects by removing subjects without labels. The volumes of brain regions were extracted from each subject's T1 MRI scan using Freesurfer: http://freesurfer.net. We evaluate the efficiency of D-EDPP across three research institutions that maintain 326, 215, and 176 subjects, respectively. The subjects are stored as HDFS files. We solve the Lasso problem along a sequence of 100 parameter values equally spaced on the linear scale of \u03bb/\u03bb max from 1.00 to 0.05. We randomly select 0.1 million to 1 million features by applying F-LQM since [1] proved that FISTA converges faster than ISTA. We report the result in Fig.  2 and achieved about a speedup of 66-fold compared to F-LQM."}, {"section_title": "Stability selection for top risk genetic factors", "text": "We employ stability selection [6, 11] with D-EDPP+F-LQM to select top risk SNPs from the entire GWAS with 5,906,152 features. We conduct four groups of trials in Table 1 . In each trial, D-EDPP+F-LQM is carried out along a 100 linear-scale sequence from 1 to 0.05. We simulate this 200 times and perform on 500 of subjects in each round. Table 1 shows the top 5 selected SNPs. APOE, one of the top genetic risk factors for AD [5] , is ranked #1 for three groups. "}]