[{"section_title": "Abstract", "text": "Due to its causal semantics, Bayesian networks (BN) have been widely employed to discover the underlying data relationship in exploratory studies, such as brain research. Despite its success in modeling the probability distribution of variables, BN is naturally a generative model, which is not necessarily discriminative. This may cause the ignorance of subtle but critical network changes that are of investigation values across populations. In this paper, we propose to improve the discriminative power of BN models for continuous variables from two different perspectives. This brings two general discriminative learning frameworks for Gaussian Bayesian networks (GBN). In the first framework, we employ Fisher kernel to bridge the generative models of GBN and the discriminative classifiers of SVMs, and convert the GBN parameter learning to Fisher kernel learning via minimizing a generalization error bound of SVMs. In the second framework, we employ the max-margin criterion and build it directly upon GBN models to explicitly optimize the classification performance of the GBNs. The advantages and disadvantages of the two frameworks are discussed and experimentally compared. Both of them demonstrate strong power in learning discriminative parameters of GBNs for neuroimaging based brain network analysis, as well as maintaining reasonable representation capacity. The contributions of this paper also include a new Directed Acyclic Graph (DAG) constraint with theoretical guarantee to ensure the graph validity of GBN."}, {"section_title": "INTRODUCTION", "text": "A S an important probabilistic graphical model, Bayesian network (BN) has been used to model the probability distribution of a set of random variables for a wide spectrum of applications, e.g., diagnosis, troubleshooting, web mining, meteorology and bioinformatics. It combines graph representation with Bayesian analysis, providing an effective way to model and infer the conditional dependency of the variables. A BN has to be a directed acyclic graph (DAG). Two factors characterize a BN, i.e., the structure of the network (the presence/absence of edges in the graph) and the parameters of the probability distribution. Recent research of BN focuses on how to learn the structure and the parameters of BN directly from the data.\nThe approaches of learning BN structures can be roughly categorized into the constraint-based, the score-based, and the hybrid approaches. The constraint-based approaches use a series of conditional independence testing to ensure the model structure is consistent with the conditional independency entailed by the observations. Methods in this class include the IC algorithm [1] , PC algorithm [2] , and more recent methods [3] , [4] . Score-based approaches define a scoring function over the space of candidate DAGs and optimize this function through certain search strategies. Methods in this class vary with scoring criteria, e.g., the posterior probability [5] , [6] , [7] and the minimum description length [8] , or vary with search strategies, e.g., the heuristic search [9] and the Monte Carlo methods [5] . Hybrid approaches usually employ constraint-based methods to prune the search space of DAG structures and consequently restrict a subsequent score-based search [10] , [11] . Many existing BN learning methods, such as LIMB-DAG [12] , MMHC [10] , TC and TC-bw [13] , comprise of two stages: the identification of candidate parent sets in the first stage and the further pruning of them based on certain criteria in the second stage. Despite the mitigation of computational complexity, a drawback arises that if a parent node is missed in the first stage, it will never be recovered in the second stage [14] . To address this issue, one-stage learning process has been preferred in recent research work [14] , [15] . In these studies, based on Gaussian Bayesian network (GBN), the parent sets of all variables are learned together to optimize a LASSO-based score function in a single stage. The related optimization problems are solved either approximately [14] or exactly [15] . They have demonstrated improved reliability of BN edge identification over traditional two stage methods.\nAlthough BN is naturally a generative method, it has also been used in classification tasks for diagnostic or predictive purposes. A straightforward usage is to train each class a BN and classify a new sample into the class with the highest likelihood value [14] . Another kind of approaches trains \"Bayesian network classifiers\" with discriminative objective functions [16] , [17] , [18] . In these approaches, usually a single BN is learned to optimize the discrimination performance. Either the structure or the parameters of the BN are adjusted to reflect the class difference for better classification. Therefore, the resulting BN does not model the distribution of any individual class. The \"Bayesian network classifiers\" in [16] , [17] , [18] are designed for discrete variables of multinomial distribution. They still inherit the twostage learning process, i.e., have to predefine candidate parent sets as mentioned above.\nLearning BN from the data faces new challenges in exploratory domains, such as brain research, where the mechanism of brain and mental diseases remain unclear and need to be explored. These domains usually cater for both interpretation and discrimination. \"Interpretation\" requires interpretable models of the data and the findings explained by domain language rather than mathematical terms. This requirement comes from the demand of understanding the domain problems. \"Discrimination\" requires the models to have sufficient discriminative power to distinguish groups of interest (such as identifying the diseased from the healthy), for the purpose of prediction. To some extent, a high accuracy of the predictive model also provides a measure of the amount of information captured by that model.\nBeing a generative method, BN represents the distribution of the data and is naturally amenable for interpretation. However, it is known that generative methods are not necessarily discriminative. They are prone to emphasizing major structures that are shared within each group, and neglecting the subtle but critical changes across groups. The latter, unfortunately, often happens, for example, in disease-induced brain changes across clinical groups. Consequently, generative methods are usually inferior in prediction compared with the discriminative methods that target only the boundary of classes (such as Support Vector Machines (SVMs)). On the other hand, discriminative methods often encounter the difficulty of interpretation, which is critical in exploratory research aimed at both the understanding and the prediction. Thus, this paper is motivated by the advantages that can be gained by learning BNs that are both representative and discriminative. Different from the Bayesian network classifiers in [16] , [17] , [18] that address discrete variables, we learn discriminative BNs for continuous variables, which is often needed in many domains including neuroimaging-based brain research. Moreover, we learn for each class a BN with enhanced discrimination and maintain the BN representation of each individual class for interpretation. 1 To achieve our goal, we propose two discriminative learning frameworks based on sparse Gaussian Bayesian network (SGBN).\nIn the first framework (termed KL-SGBN), we employ Fisher kernel [19] to link the generative models of SGBN to the discriminative classifiers of SVMs, and convert the SGBN parameter learning to Fisher kernel learning via maximizing a generalization bound of SVMs. The contributions of this framework include the following. i) By inducing Fisher kernel on SGBN models, we provide a way to obtain sample-specific SGBN-induced feature vectors that can be used by the discriminative classifiers such as SVMs. Through this, we bridge the generative models and the discriminative classifiers. ii) We propose a kernel learning approach to discriminatively learn the parameters of SGBNs by optimizing the performance of SVM. iii) As a by-product, the manipulation of Fisher kernel on SGBN provides a new way of variable selection for SGBNs. This framework has a computational advantage: through the mapping of Fisher kernel, the SGBN-induced feature vectors become linear functions of the SGBN parameters, which significantly simplifies the optimization problem in the learning process.\nUnlike KL-SGBN where the discrimination is obtained by optimizing the classification performance of SVMs, in the second learning framework (termed MM-SGBN), we propose to optimize a criterion directly built upon the classification performance of SGBNs. The motivation is that optimizing the performance of SVMs may not necessarily guarantee an equivalent improvement on SGBNs when SGBNs are the goal of applications. The contribution of this framework is a max-margin based method to jointly learn SGBNs, one for each class, for both representation and discrimination.\nIn addition to the two discriminative SGBN learning frameworks, our contributions in this paper also include a new DAG constraint of SGBN based on topological ordering to ensure the validity of the graph. This new DAG constraint circumvents the awkward hard binarization of SGBN parameters in the process of optimization in [14] , and simplifies the related optimization problems. This consequently makes it possible to optimize all the SGBN parameters together to avoid the influence of feature ordering encountered in the Block Coordinate Descent (BCD) optimization in [14] . Moreover, this new DAG constraint also circumvents the need for presetting candidate parent sets as in [17] .\nAlthough the discriminative learning frameworks proposed in this paper are general methods, we focus on their applications in neuroimaging analysis for the early diagnosis of mental diseases. A newly emerging field in the imaging-based neuroscience, called brain network analysis, attempts to model the brain as a complex network and study the interactions of brain regions via imaging-based features [20] . Such research is important because brain network change is often found to be a response of the brain to damages. Due to its causal semantics, BN has been employed to model the \"effective connectivity\" of the brain [14] , [21] , [22] . The directionality of the connections may disclose the pathways of how one brain region affects another. The discoveries may lend further credence to the evidence of causal relationship changes found in many mental diseases, such as the Alzheimer's disease (AD) [14] , 1. In this paper, we deal with the scenario that maintaining the BN representation of individual class is critical for the understanding of domain problems, such as the brain network models for the healthy and the diseased groups. However, it is not difficulty to see our discriminative learning frameworks could be slightly modified to learn only a single BN as the existing \"Bayesian network classifiers\" for continuous variables. However, this deviates from our motivation and therefore is not unfolded in this paper. [22] , [23] , [24] , and uncover novel connectivity-based biomarkers for disease diagnosis. The proposed learning frameworks has been tested on multiple neuroimaging data sets. As demonstrated, our methods can significantly improve the discriminative power of the obtained SGBNs, as well as maintaining their representation capacity.\nEarly conference versions of this work were published in [25] , [26] . In this paper, a significant extension has been made on the following aspects. First, we analyze the problems of the DAG constraint used in [14] , [25] , [26] , and propose a new constraint with theoretically guaranteed DAG property to overcome those drawbacks. Second, we experimentally verify the new DAG constraint on benchmark Bayesian network data sets for network structure learning, and compare our method with another eight competing methods in the literature. Third, we update our two discriminative learning frameworks with the new DAG constraint and redo all the experiments in our early work [25] , [26] . Fourth, we analyze the connections and differences between the two proposed discriminative learning frameworks, and conduct more comprehensive experiments to explore the characteristics of our frameworks with varied parameters, which has not been done in [25] , [26] .\nThe rest of the paper is organized as follows. Section 2 reviews SGBN and introduces the background of brain network analysis. Sections 3 elaborates two frameworks to learn discriminative and representative SGBNs from continuous data. Section 4 revisits the problem of the existing DAG constraint of SGBN, and proposes a new one based on topological ordering. The proposed two learning frameworks with the new DAG constraint are experimentally tested in Section 5. This paper is concluded in Section 6. The notations of symbols frequently occurring in this paper are summarized in Table 1 ."}, {"section_title": "BACKGROUND", "text": "To make this paper self-contained, we introduce the background for both the methodology and its application to brain network analysis. Please note that the methodology could be generalized to applications beyond the example given in this paper."}, {"section_title": "Sparse Gaussian Bayesian Network", "text": "Because this paper is based on SGBN model, in the following, we review the fundamentals of SGBN in [14] .\nA Bayesian network G is a directed acyclic graph, i.e. there is no closed path within the graph. It expresses the factorization property of a joint distribution p\u00f0x\u00de \u00bc Q i\u00bc1;...;m p\u00f0x i jPa i \u00de. The conditional probability p\u00f0x i jPa i \u00de is assumed to follow a Gaussian distribution in Gaussian Bayesian Network. Each node x i is regressed over its parent nodes Pa i :\nwhere the vector u u i is the regression coefficients, and \" i $ N \u00f00; s 2 i \u00de. The structure of BN could be characterized by the m \u00c2 m matrix G or P (defined in Table 1 ), representing the edges/paths in the graph, respectively.\nIdentifying parent sets is critical for BN learning. Traditional methods often consist of two stages: the candidate parent sets are initially identified in the first stage and further pruned by some criteria in the second stage. A drawback arises that when a true parent is missing in the first stage, it will never be recovered in the second stage. The work in [14] proposed a different approach based on sparse GBN, denoted as H-SGBN in this paper. In H-SGBN, each node x i is regressed over all the other nodes, and its parent set is implicitly selected by the regression coefficients u u i that are estimated through a constrained LASSO regression. The following optimization is solved in [14] :\n. . . ; m; i 6 \u00bc j:\n(2:1)\nA challenge for BN learning is how to enforce the DAG property, i.e., avoiding directed cycles in the graph. A sufficient and necessary condition for being a DAG is proposed in [14] , which requires Q Q ji \u00c2 P ij \u00bc 0 for all i and j. Note that P ij is an implicit function of Q Q ji (i.e., P \u00bc expm\u00f0Q Q\u00de, the matrix exponential function of Q Q, as in [14] ). Eqn. (2.1) is difficult to solve. In [14] , a block coordinate descent method is employed to solve a LASSO-like problem efficiently. The whole Q Q is optimized column-wisely and iteratively. In each iteration t, only one column of Q Q, say Q Q :;j , is optimized with P fixed as P \u00f0t\u00c01\u00de in the last iteration. Then Q Q \u00f0t\u00de , with the updated column Q Q :;j , is binarized to obtain G \u00f0t\u00de , based on which, P \u00f0t\u00de is recalculated by a Breadth-first search with x i being the root node. The process is repeated until convergence. H-SGBN simultaneously obtains the structure and the parameters of an SGBN via learning Q Q, e.g., there is no edge i ! j if Q Q ij is zero. It has been demonstrated to outperform the conventional two-stage methods in network edge recovery."}, {"section_title": "Brain Network Analysis", "text": "Neuroimaging modalities and analysis techniques can provide more sensitive and consistent measurements than traditional cognitive assessment for the early diagnosis of disease. Many mental disorders are found associated with subtle abnormalities distributed over the entire brain, rather than an individual brain region. The \"distributive\" nature of mental disorders suggests the alteration of interactions between brain regions (neuronal systems) and thus the the ith row of X, representing a sample x :;i the ith column of X, representing the realization of the random variable x i on n samples Q Q the parameters of a Gaussian Bayesian Network\na vector containing the parents of x i PA i a matrix whose jth column represents a realization of Pa i on the jth sample.\nnecessity of studying the brain as a complex network. Brain networks are mathematically represented by graphical models, which can be constructed from neuroimaging data as follows. The brain images belonging to different subjects are first spatially aligned to a common stereotaxic space by affine or deformable transformation, and then partitioned into regions of interest (ROI), i.e., clusters of imaging voxels, using either data-driven methods or predefined brain atlas. A brain network is then modeled by a graph with each node corresponding to a brain region and each edge corresponding to the connectivity between regions. Brain network analysis studies three kinds of brain connectivity. In this paper, we focus on the \"effective connectivity\" that describes the influence one brain region exert upon another. Some early works in this field require a prior model of brain connectivity and most have only considered a small number ( 10) of brain regions using techniques such as structural equation modeling [27] and dynamic causal modeling [28] . More recently, models such as BN and Granger Causality have also been introduced into this field. It is suggested that BN may have advantages over those lag-based methods for brain network analysis by an experimental fMRI study [21] . Among BNrelated methods, it is worth noting that the work in [14] is completely data-driven, which recovers SGBN from more than 40 brain regions in fluorodeoxyglucose PET (FDG-PET) images. The method employs the strategy of sparsity constraint to handle relatively larger scale BN construction, and circumvents the traditional two-stage procedure for identifying parent sets in many sparse BN learning methods [10] , [12] ."}, {"section_title": "PROPOSED DISCRIMINATIVE LEARNING OF GENERATIVE SGBN", "text": "BN models are by definition generative models, focusing on how the data could be generated through an underlying process. In the context of neuroimage analysis, these models represent the effective brain connectivity of the given population. When used for classification, e.g., identifying AD patients from the healthy, the SGBN models are trained for each class separately. A new sample x i is then assigned to the class with the higher likelihood of SGBN. This may ignore some subtle but critical network differences that distinguish the classes. Therefore, we argue that the parameters of the generative model should be learned from the two classes jointly to keep the essential discrimination.\nIntegrating generative and discriminative models is an important research topic in machine learning. In [29] , the related approaches are roughly divided into three categories: blending, staging and iterative methods. In blending methods, both the discriminative and the generative terms are incorporated into the same objective function. In staging methods, the discriminative model is trained on features provided by the generative model. In iterative methods, the generative and the discriminative models are trained iteratively to influence each other. In this paper, we propose two kinds of discriminative learning frameworks to achieve our goal. One is a staging method, called Fisher-kernel-induced discriminative learning (KL-SGBN). It extracts samplebased features from SGBN by Fisher kernel to optimize the classification performance of SVM. The other is a blending method, called max-margin-based discriminative learning (MM-SGBN). It directly optimizes the classification performance of SGBNs subject to maintaining SGBN's representation capacity. The two frameworks are elaborated in the following sections, respectively."}, {"section_title": "Proposed Fisher-Kernel-Induced Discriminative Learning", "text": "We first introduce the Fisher-kernel-induced discriminative learning of SGBN, i.e., KL-SGBN. The algorithm is illustrated in Fig. 1 and overviewed as follows. Given two classes in comparison, two SGBN models (with the parameters of Q Q 1 and Q Q 2 ) are learned, one for each individual class. The original samples are then mapped into the gradient space of the SGBN parameters Q Q 1 and Q Q 2 by Fisher kernel (Section 3.1.1). Through this mapping, each sample is represented by a new feature vector (called Fisher vector [19] ) that is a function of Q Q \u00bc \u00bdQ Q 1 ; Q Q 2 . These sample-specific feature vectors are then fed into an SVM classifier to minimize its generalization errors by adjusting Q Q (Section 3.1.2). The obtained optimal Q Q $ 1 and Q Q $ 2 encode the discriminative information and therefore improve the original SGBNs. In this way, we convert the discriminative learning of SGBN parameters to the discriminative learning of Fisher kernels."}, {"section_title": "Induction of Fisher Vectors from SGBN", "text": "Below we introduce how to use Fisher kernel on SGBNs to obtain feature vectors required for kernel learning.\nFisher kernel [19] provides a way to compare samples induced by a generative model. It maps a sample to a feature vector in the gradient space of the model parameters. The intuition is that similar objects induce similar log-likelihood gradients of the model parameters. Fisher kernel is computed as K\u00f0x;\nwhere the Fisher vector g x \u00bc r u u log \u00f0p\u00f0xju u\u00de\u00de describes the changing direction of parameters to better fit the model. The Fisher information metric U weights the similarity measure, but is often set as an identity matrix in practice [19] .\nFisher kernel has recently witnessed successful applications in image categorization [30] , [31] for inducing feature vectors from Gaussian Mixture Model (GMM) of a visual vocabulary. Despite its success, in the applications above, Fisher kernel is mainly used as a feature extractor. 2 It has not 2. An exception [32] is discussed in \"Generalization\" in Section 3.3, which is published after our work [25] . been applied to learning the parameters of BN before the early work of this paper in [25] . The advantage of learning discriminative Fisher kernel has also been confirmed by a recent study that maximizes the class separability [33] of samples based on Fisher kernel, which is developed with different context and different criteria from ours.\nFollowing [14] , we only consider Q Q as parameters and predefine s. Let L\u00f0xjQ Q\u00de \u00bc log \u00f0p\u00f0xjQ Q\u00de\u00de denote the loglikelihood. Our Fisher vector for each sample x is\nwhere Q Q 1 and Q Q 2 are the parameters of the SGBNs for the two classes (y \u00bc 1; 2\u00de, respectively. Recall that, using a BN, the probability p\u00f0xjQ Q\u00de can be factorized as p\u00f0xjQ Q\u00de \u00bc Q i\u00bc1;...;m p\u00f0x i jPa i ; u u i \u00de. Therefore, for GBN it can be shown that\nffiffiffiffi ffi s i p \u00de:\n(3:1)\nTaking partial derivative over u u i , we have\nwhere S\u00f0x i \u00de is a squared matrix and s 0 \u00f0x i \u00de is a vector. As shown, both S\u00f0x i \u00de and s 0 \u00f0x i \u00de are constant with respect to Q Q. Therefore, the Fisher vector F Q Q \u00f0x\u00de is a linear function of Q Q. This simple form of F Q Q \u00f0x\u00de significantly facilitates our further kernel learning."}, {"section_title": "Discriminative Fisher Kernel Learning via SVM", "text": "As each Fisher vector is a function of the SGBN parameters, discriminatively learning these parameters can thus be converted to learning discriminative Fisher kernels. We require that the learned SGBN models possess the following properties. Firstly, the Fisher vectors induced by the learned SGBN model should be well separated between classes. Secondly, the learned SGBN models should maintain reasonable capacity of representation. Thirdly, the learned SGBN models should not violate DAG. We use the following strategies to achieve our goal. Firstly, to obtain a discriminative Fisher kernel, we jointly learn the parameters of SGBN and the separating hyperplane of SVMs with Fisher kernel. Radius-margin bound, the upper bound of the Leave-One-Out error, is minimized to keep good generalization of the SVMs. Secondly, to maintain reasonable representation, we explicitly control the fitting (regression) errors of the learned model during optimization. Recall that GBN learns the network by minimizing the regression errors of each node over its parent nodes. Thirdly, we enforce the DAG constraint to ensure the validity of the graph. Our method is developed as follows.\nIn order to use radius-margin bound, L 2 -SVM with soft margin is be employed [34] , 3 which optimizes min w;\nFollowing the convention in SVMs, w is the normal of the separating plane, b the bias term, the slack variables and C the regularization parameter. Here y i is the class label of the ith sample. L 2 -SVM can be rewritten as SVM with hard margin by slightly modifying the kernel\nThe vector e i has the value of 1 at the ith element, and 0 elsewhere.\nIncorporating radius information leads to solving\nwhere R 2 denotes the radius of Minimal Enclosing Ball (MEB). It has been observed that when the sample size is small, the estimation of R 2 may become noisy and unstable [35] . Therefore, it has been proposed to use the trace of the total scatter matrix instead for such cases [35] , [36] . We finally solve the following optimization problem:\nHere tr\u00f0S T \u00de is the trace of the total scatter matrix S T , where S T \u00bc P n i\u00bc1 \u00f0F\u00f0x i \u00de \u00c0 m\u00de\u00f0F\u00f0x i \u00de \u00c0 m\u00de > , and m is the mean of total n samples in the kernel-induced space. It can be shown that tr\u00f0S T \u00de \u00bc tr\u00f0K\u00de \u00c0 1 > K1=n, where 1 denotes a vector whose elements are all 1, and K the kernel matrix. Fisher vector F Q Q \u00f0x i \u00de is obtained as in Section 3.1.1. The function h\u00f0\u00c1\u00de measures the squared fitting errors of the corresponding SGBNs for the data X 1 and X 2 from the two classes. It is defined as\nThe two user-defined parameters T 1 and T 2 explicitly control the degree of fitting during the learning. Adding these constraints also avoids the scaling problem of Q Q. The DAG constraint in H-SGBN could be employed to enforce the validity of the graph. However, here we adopt a new DAG constraint proposed in Section 4 due to its advantages over that of H-SGBN. The new DAG constraint employs a set of topological ordering variables \u00f0o; \u00c7 \u00c7\u00de to guarantee DAG. It is a bilinear function of the ordering variables \u00f0o; \u00c7 \u00c7\u00de and the SGBN parameters Q Q. An elaboration is given in Section 4. At the moment, let us temporarily skip the details of this DAG constraint and concentrate on the discriminative learning.\nOne possible approach for solving Eqn. (3.5) is to alternately optimize the separating hyperplane w and the parameter Q Q. That is,\n(3:7)\nwhere J\u00f0Q Q\u00de \u00bc min\n(3:8)\nNote that for a given Q Q, the term tr\u00f0S T \u00de is constant in Eqn. (3.8) . Due to the strong duality in SVM optimization, we solve the term kwk 2 2 by\nwhere a i is the Lagrangian multiplier and K Q Q \u00f0x i ;\nAs mentioned above, the DAG constraint is a bilinear function of \u00f0o; \u00c7 \u00c7\u00de and Q Q. Many quadratic programming packages could be used to solve Eqn. (3.7). We use fmincon-SQP (sequential quadratic programming) in Matlab. Gradient information is required by many optimization algorithms (including fmincon-SQP) to speed up the line search. It is not difficult to find that the gradient of K Q Q \u00f0x i ; x j \u00de is just a linear function of Q Q, making the evaluation of gradient r Q Q J easy. Our learning process is summarized in Algorithm 1. For binary classification, maximizing the minimum margin between two classes can be obtained by maximizing the minimum conditional likelihood ratio (MCLR) [18] :"}, {"section_title": "Algorithm 1. KL-SGBN: Discriminative Learning", "text": "Without loss of generality, y i and \" y i 2 f\u00c01; 1g, representing the true and false labels for the ith sample, respectively. The\nWe can see that MCLR identifies the most confusing sample whose probability of the true class assignment is close to or even less than that of the false class assignment. Hence, maximizing MCLR targets the maximal separation of the most confusing samples in the two classes. It is not difficult to see that MCLR can naturally handle multi-class case when replacing the denominator by the maximal probability induced by all false class assignments.\nTaking log-likelihood of MCLR, we have\nwhere the prior probabilities of P \u00f0y i \u00de and P \u00f0\" y i \u00de that are irrelevant to Q Q are absorbed into the constant term. Eqn. (3.10) can be shown to be a quadratic function of Q Q in the case of SGBN. In order to maximize MCLR, we require the difference of log-likelihood function in Eqn. (3.10) be larger than a margin for all samples, r, and maximize the margin r. To deal with hard separations, we employ a soft margin formulation as follows:\nThe constraints in (3.11a) enforce the likelihood of x i to its true class larger than that to its false class by a margin r. The variables i are slack variables indicating the intrusion of the margin. The function L\u00f0\u00c1\u00de denotes the log-likelihood, defined in Eqn. (3.1). We require L\u00f0Q Q 1 ; x i \u00de larger than L\u00f0Q Q 2 ; x i \u00de when y i \u00bc 1, and L\u00f0Q Q 2 ; x i \u00de larger than L\u00f0Q Q 1 ; x i \u00de when y i \u00bc \u00c01.\nThe constraints in (3.11c) control the fitting errors, same to that used in KL-SGBN, and the function h\u00f0\u00c1\u00de is defined in Eqn. (3.6).\nThe constraints in (3.11d) are the DAG constraint proposed in Section 4, Eqn. (4.1). To enforce the validity of DAG on both graphs, we introduce a set of order variables o \u00bc fo 1 ; o 2 ; . . . ; o m g and \u00c7 \u00c7 for each class separately, and employ the constraints stated in Eqn. (4.1). Please refer to Eqn. (4.1) for details.\nThe optimization in Eqn. (3.11) can be solved iteratively by optimizing \u00f0Q Q; i ; r\u00de and \u00f0o; \u00c7 \u00c7\u00de alternately, as summarized in Algorithm 2. In Step 1, we solve a linear objective function with n non-convex and two convex quadratic constraints by fmincon-SQP in Matlab. In\nStep 2, we solve the linear programming by the package of CVX. 4 Algorithm 2. MM-SGBN: Discriminative Learning It is worthy noting that, we learn an SGBN model for each individual class in order to meet the requirement of both interpretation and discrimination in exploratory research. For example, each SGBN may model the brain network of the healthy or the diseased class, as well as carrying the essential class discrimination. Both the network modelling and the discrimination are of interest in such cases. Our method is different from the conventional BN classifers [16] , [17] , [18] that solely focus on classification. In those methods, only a single BN is learned to reflect the \"difference\" of the two classes. It does not model any individual class as our method does, and hence deviates from our purpose of both representing and discriminating brain networks. Moreover, the works in [16] , [17] , [18] cannot handle the continuous variables of brain imaging measures, and inherit the drawbacks of the traditional two-stage methods."}, {"section_title": "Discussion and Analysis", "text": "In the following, some issues regarding the two proposed discriminative learning frameworks are discussed.\nClassifiers. The proposed discriminative learning frameworks produce a set of jointly learned SGBN models, one for each class. Based on these SGBN models, two kinds of classifiers can be constructed, i.e., the SGBN classifier and the SVM classifier. The SGBN classifier categorizes a sample by comparing the sample's likelihood according to each SGBN model. The SVM classifier is trained by the samplespecific Fisher vectors induced from the SGBN models. These two classifiers are tightly coupled by the underlying SGBN models. Specifically, more discriminative SGBN models directly lead to a better SGBN classifier, and can provide discriminative Fisher vectors to SVM for better classification. Rooted in this relationship, both the KL-SGBN and the MM-SGBN can improve the classification performance of these two classifiers simultaneously. Put simply, KL-SGBN explicitly optimizes the SVM classifier and in turn implicitly improves the SGBN classifier; while MM-SGBN explicitly optimizes the SGBN classifier, bringing an implicit improvement of the SVM classifier as well. When evaluating the discriminative power of the learned SGBN models by the SGBN classifier (a direct measurement), it is therefore expected that MM-SGBN can outperform KL-SGBN. However, KL-SGBN has some computational advantages and provides a new perspective to manipulate BN models, analyzed as follows.\nComputational issues. Compared with KL-SGBN, MM-SGBN requires to solve more complicated optimization problems, which may become problematic when the number of training samples increase. Let us compare Eqn. .7), the optimization problem in Eqn. (3.11) also has to satisfy n nonconvex quadratic constraints. When n increases to a medium or large value, the optimization problem could be quite hard to solve.\nEdge selection. In addition to the discriminative learning of SGBN, the employment of Fisher kernel in KL-SGBN also provides a new perspective of edge selection for GBN. As introduced in Section 3.1.1, applying Fisher kernel on GBN produces sample-specific feature vectors whose component is the gradient of the log likelihood, i.e., @L\u00f0xjQ Q\u00de @Q Q ij . In other words, each feature now corresponds to an edge Q Q ij in the SGBN. This makes it possible to convert the SGBN edge selection to a more traditional feature selection problem that has been well studied and has a large body of options in the literature. Edge selection has been employed in our work to deal with the \"small sample size\" problem that is often encountered in medical applications. For example, it is common to have only 100 training samples but 3;200 parameters (for SGBNs of 40 nodes from two classes) to learn in brain network analysis. To handle this issue, we keep using the whole Q Q for computing K Q Q , but only optimize a selected subset Q Q s . There are many options to determine Q Q s . We just compute the Fisher vector F Q Q for each sample, calculate the Pearson correlation between each component of F Q Q and the class labels on the training data, and select the top u u i with the highest correlations. To keep our problem simple, only the parameters associated with edges present in the graph are optimized to avoid the violation of DAG. It is remarkable that even this simple selection process has significantly improved the discrimination for both KL-SGBN 4. http://cvxr.com/cvx/ and MM-SGBN. Note that this edge selection step is essentially different from that of the traditional two-stage methods. It is just an empirical method to handle the small sample size problem and will become unnecessary when sufficient training data are available. In contrast, identifying the candidate-parent sets is an indispensable step in two-stage methods to obtain computationally tractable solutions.\nGeneralization. We would like to point out that our learning framework of KL-SGBN could be easily generalized. It could be used to discriminatively learn the parameters of distributions other than that represented by GBN by just simply switching GBN to the target distribution, such as Gaussian Mixture Model. Indeed, this has been seen in [32] , after our work [25] . However, as shown in this paper, the Fisher vector of GBN is a linear function of the model parameters, which significantly simplifies the learning problem. This favorable property may not be guaranteed with other distributions, including GMM."}, {"section_title": "PROPOSED DAG CONSTRAINT", "text": "In this section, we revisit H-SGBN and propose a new DAG constraint that could simplify the optimization problems in SGBN and its discriminative learning process as introduced in Sections 3.1 and 3.2."}, {"section_title": "H-SGBN Revisited", "text": "Recall that, the DAG constraint in H-SGBN (Section 2.1) utilizes the matrix P, an implicit function of Q Q, which significantly complicates the optimization problem in Eqn. (2.1). In [14] , for simplicity, in each optimization iteration, P is first treated as a constant while optimizing Q Q, and then recalculated by searching on the binarized new Q Q. This hard binarization could introduce high discontinuity of Q Q into the optimization. Solving Q Q column-wisely by BCD may mitigate this problem since only one column of Q Q is changed in each iteration, inducing less discontinuity. However, we observe that the solution of BCD depends on which column of Q Q to be optimized first. In other words, if we randomly permute the ordering of features (the columns in X), we will obtain different SGBNs, which impairs the interpretability of the SGBN model. The optimization ordering matters because the matrix P used in the DAG constraint changes with the ordering. This problem has been demonstrated in our experiment. Moreover, we find experimentally that if P is solved as a whole instead of BCD, the optimization in Eqn. (2.1) will not converge but oscillate between some non-DAG solutions, possibly due to the high discontinuity mentioned above. 5 Early stop cannot help because no premature solution satisfies DAG. These optimization difficulties motivate our work of proposing a new DAG constraint that is much simpler for SGBN, as described below."}, {"section_title": "Proposed DAG Constraint", "text": "It is known that, a BN is equivalent to a topological ordering ([37, p. 362 ]). Therefore, we propose a new DAG constraint applicable to continuous variables with GBN based on this equivalence. With a few linear inequalities and variables separable from Q Q, the new DAG constraint significantly simplifies that used in [14] . Specifically, given a directed graph G and the parameters Q Q, a real-valued order variable o i is assigned to each node i, where 0 o i D, and D is a predefined arbitrary positive number. We propose a sufficient and necessary condition for G to be DAG as in Proposition 1."}, {"section_title": "Proposition 1. Given a sparse Gaussian Bayesian Network", "text": "parameterized by Q Q and its associated directed graph G with m nodes, the graph G is DAG if and only if there exist some o i (i \u00bc 1; . . . ; m) and \u00c7 \u00c7 2 R m\u00c2m , such that for arbitrary D > 0, the following constraints are satisfied:\nEqn. (4.1) leads to a topological ordering equivalent to DAG. The topological ordering means that if node j comes after node i in the ordering (o j > o i ), there cannot be a link from node j to node i, which guarantees the acyclicity. The proof of Proposition 1 is given in our supplementary material. The supplementary material has been uploaded into ScholarOne.\nBy Proposition 1, we remove the awkward hard binarization for computing P in [14] . The inequalities of (4.1a, 4.1b, 4.1d) are linear to the ordering variables o i and \u00c7 \u00c7. The equation (4.1c) differs from the equation Q Q ji \u00c2 P ij \u00bc 0 in [14] in that the variable \u00c7 \u00c7 ij is now separable from Q Q ij (while P ij is not) and does not require the binarization of Q Q. This makes it tractable to solve Q Q as a whole instead of BCD (to avoid the feature ordering problem).\nIt is worth noting that, provided Q Q is sparse, the number of constraints in Eqn. (4.1) could be significantly reduced. As can be seen, for any Q Q ij \u00bc 0, as long as we set the corresponding \u00c7 \u00c7 ij an arbitary value greater than \u00f0 1 m \u00fe 1\u00deD, all the conditions in Eqn. (4.1) will be automatically satisfied. Therefore, we only need to consider the constraints related to Q Q ij 6 \u00bc 0.\nThe idea of topological ordering is also used to design DAG constraint for the discrete variables in [38] . However, the work in [38] addresses the multinominal distribution of discrete variables, while here we target the Gaussian distribution of continuous variables. It is worthy noting that the constraint in [38] has to predefine candidate parent-node sets. Therefore, it inherits the drawbacks of the two-stage methods as pointed out in Section 1. This has been circumvented in our proposed DAG constraint for SGBN."}, {"section_title": "Estimation of SGBN from a Single Class", "text": "With our DAG constraint proposed in Eqn. (4.1), we could estimate SGBN from a single class as the initial solution to our discriminative learning of KL-SGBN or MM-SGBN. In particular, we optimize\n(4:2) 5 . Please note that, solving Q Q column-wisely without updating P in each iteration will only lead to non-DAG solutions.\nwhere i is the ith column of the matrix \u00c7 \u00c7, and ju u i j the component-wise absolute value of u u i . This optimization problem is solved in an iterative way with two alternate steps in each iteration: i) optimize o and \u00c7 \u00c7 (with Q Q fixed) and ii) optimize Q Q (with o and \u00c7 \u00c7 fixed). This process is repeated until convergence. We call this proposed method OR-SGBN (Algorithm 3).\nWhen the coefficient dag is sufficiently large, the alternate optimization strategy of Eqn. (4.2) will converge to a DAG solution, as shown in Proposition 2 in our supplementary material. The supplementary material has been uploaded into ScholarOne. In practice, for numerical stability, we adopt a \"warm start\" strategy as in [14] , that is, to gradually increase the values of dag until the resulting G becomes DAG. Specifically, we use a set of values of dag : Let\nWe use a bias variable x 0 \u00bc 1 in the regression model to improve data fitting, thus x i \u00bc \u00bdu u i u u 0 > \u00bdPa i 1 \u00fe \" i (i > 1). In the following part, we denote u u i , \u00bdu u i u u 0 and Pa i , \u00bdPa i 1. The bias term u u 0 is learned together with other u u i . This equals to introducing a bias node into the graph. It has no parent but is the parent of all the other nodes. If the original graph is a DAG, this does not cause the violation of DAG.\nIt is interesting yet challenging to analyze the network consistency of OR-SGBN. It is noted that Eqn. (4.2) can be reorganized into a weighted LASSO problem, which can be conceptually linked to \"adaptive LASSO\" in the literature [39] , [40] , [41] . The analysis framework provided by these works is suggestive of promising strategies to analyze the network consistency for L1-penalized Gaussian networks. However, a complete treatment of this analysis for OR-SGBN requires a deep investigation. Considering the significant amount of the required workload and its importance, we will explore this problem in a separate paper in our future work."}, {"section_title": "EXPERIMENT", "text": "In this section, we investigate the properties of our proposed methods from three aspects: the DAG constraint, the discriminative learning process, and the resulting connectivity for brain network analysis. Four experiments are conducted, summarized in Table 2 . The data sets and the experiments are elaborated as follows."}, {"section_title": "Neuroimaging Data Sets", "text": "We conduct our experiment on the publicly accessible ADNI [42] database to analyze brain effective connectivity for the Alzheimer's disease. Three data sets are used from two imaging modalities of MRI and FDG-PET downloaded from ADNI. They are elaborated as follows.\nMRI data set includes 120 T1-weighted MR images belonging to 50 mild cognitive impairment (MCI) patients and 70 normal controls (NC). These images are preprocessed by the typical procedure of intensity correction, skull stripping, and cerebellum removal. We segment the images into gray matter (GM), white matter (WM), and cerebrospinal fluid (CSF) using the standard FSL 6 package, and parcellate them into 93 Region of Interest (ROI) based on an ROI atlas [25] after spatial normalization. The GM volume of each ROI is used as the imaging feature to characterize each network node. Forty ROIs are included in this study, following [14] . They have higher correlation with the disease and are mainly located in the temporal lobe and subcortical region. Studying brain morphology as a network can take the advantage of statistical tools from graph theory. Moreover, it has been reported that the covariation of gray matter morphology might be related to the anatomical connectivity [43] .\nPET data set includes 103 FDG-PET images (and their corresponding MR images) of 51 AD patients and 52 NC. The MR images belonging to different subjects are co-registered and partitioned into ROIs as before. The ROI partitions are copied onto their corresponding PET images by a rigid transformation. The average tracer uptakes within each ROI is used as the imaging feature to characterize each network node. Forty ROIs discriminative to the disease are used in the study. The retention of tracer in FDG-PET is analogous to the glucose uptake, thus reflecting the tissue metabolic activity.\nMRI-II data set is similar to the MRI data set but using 40 different ROIs covering the typical brain regions spread over the frontal, parietal, occipital and temporal lobes. "}, {"section_title": "DAG Constraint", "text": "With our proposed DAG constraint, the SGBN model for an individual class can be learned with all the parameters Q Q optimized together (OR-SGBN), instead of columnwisely as did in [14] , [25] , [26] . To explore the properties of our DAG constraint, we test three experimental configurations, namely, OR-SGBN (WHOLE), H-SGBN (BCD) and H-SGBN (WHOLE). The word in the parenthesis is used to explicitly indicate whether the parameters Q Q are optimized together (WHOLE) or column-wisely (BCD). OR-SGBN (WHOLE) is our SGBN learning method for a single class in Algorithm 3, implemented with the package of CVX. H-SGBN (BCD) is the column-wise method in [14] and implemented with the code downloaded from the authors' website. H-SGBN (WHOLE) is our attempt to optimize Q Q together for the objective function of H-SGBN in [14] , which is implemented with the package of CVX. 7 The same Q Q that is computed by a sparse least square fitting of the training set is provided to all the methods to initialize the optimizations. The \"warm-start\" strategy is applied wherever applicable in all methods.\nIt is found that when solving all Q Q as a whole, H-SGBN (WHOLE) that uses the DAG constraint in [14] does not converge: the optimization is trapped to oscillate between a few solutions that are not DAG. Therefore, from now on, we only consider H-SGBN (BCD) and OR-SGBN (WHOLE).\nExp-I. In this experiment, we compare the solutions of OR-SGBN (WHOLE) and H-SGBN (BCD) with respect to the change of feature ordering. To do that, for the neuroimaging data sets, we randomly permute the feature ordering for 100 times. The estimated Q Q of the resulting 100 SGBNs are re-arranged according to the initial feature ordering and then averaged as in Fig. 2 . As shown, the averaged result from OR-SGBN (WHOLE) (Fig. 2d) is almost identical to the result using the original feature ordering (Fig. 2c) , reflecting its robustness to feature ordering. In contrast, H-SGBN (BCD) generates SGBNs with large variations when the feature ordering changes (( Fig. 2a versus Fig. 2b ). To give a quantitative evaluation, the Euclidean distance and the correlation between the averaged Q Q and the original Q Q are presented in Table 3 . Consistently, the solutions from OR-SGBN (WHOLE) are much less affected by the ordering permutation, indicating the advantage of solving Q Q as a whole via the proposed DAG constraint.\nExp-II. In this experiment, we test the ability of OR-SGBN (WHOLE) at identifying network structures from data. Since no ground-truth is available for the three neuroimaging data sets due to the unknown mechanism of the disease, we conduct experiments on nine benchmark network data sets mostly coming from the Bayesian Network Repository [14] as was done in the literature [12] , [44] . The nine benchmark data sets are: Factors (27 nodes, 68 arcs), Alarm (37 nodes, 46 arcs), Barley (48 nodes, 84 arcs), Carpo (61 nodes, 74 arcs), Chain (seven nodes, six arcs), Hailfinder (56 nodes, 66 arcs), Insurance (27 nodes, 52 arcs), Mildew (35 nodes, 46 arcs) and Water (32 nodes, 66 arcs). We compare the OR-SGBN (WHOLE) with another eight BN learning methods, including L1MB [12] , GS [45] , TC and its variant TC-bw [13] and three variants of IAMB [46] . The experiment is repeated for 50 simulations. In each simulation, for each network, we randomly sample 1,000 samples from AEUniform\u00f00:5; 1\u00de for the regression coefficients of each variable on its parents. The parameters of the eight methods to be compared are set according to [14] . A predefined that controls the sparsity of OR-SGBN is uniformly applied to all the nine data sets, which simply brings the number of the resulting edges to a reasonable range. 8 We use the first stage estimate of L1MB as the initial solution of OR-SGBN. Table 4 shows the total numbers of mis-identified edges (including both the false and the missing edges), while Table 5 shows the numbers of falsely identified edges (false positive). In addition, Table 6 lists the numbers of falsely identified PDAG structures. PDAG structures are statistically indistinguishable structures, i.e., representing Table 3 . 8. The Bayesian Information Criterion is used to select in [14] . However, it did not behave well in our experiment.\nthe same statistical dependency. The PDAG of BN is obtained by the method in [47] . From Tables 4, 5, and 6, it can be seen that OR-SGBN shows significantly smaller errors on six data sets (Factors, Alarm, Barley, Carpo, Hailfinder and Insurance) in identifying both edges and PDAG structures. For the data sets of Mildew and Water, OR-SGBN performs similarly to the other methods. It only performs relatively inferior on Chain. This experiment demonstrates that the proposed DAG constraint for SGBN can perform effectively for BN structure identification. Its relatively low risk of mis-edge identification is a favorable property for exploratory research."}, {"section_title": "Comparison of Discrimination", "text": "After testing the effectiveness of the proposed DAG constraint, we now investigate the theme of this paper: the discriminative learning frameworks. We consider two kinds of classifiers: i) the SGBN classifier (with two SGBN models, one for each class), and ii) the SVM classifier learned by the Fisher vectors induced from the SGBN models.\nExp-III. In this experiment, we test whether our learning methods (KL-SGBN and MM-SGBN) can improve the discriminative power on both kinds of classifiers for the real neuroimaging data sets. The initial SGBN models are obtained by our proposed OR-SGBN (WHOLE), since it has been shown more robust to feature ordering than H-SGBN as above. For the SGBN classifier, assuming equal prior, we assign a test sample to the class with a higher likelihood. For the SVM classifier, we use L 2 -SVM with Fisher kernels. In order to maintain representation capability, we allow maximal 1 percent additional squared fitting errors (that is, T i \u00bc 1:01 \u00c2 T i0 ; \u00f0i \u00bc 1; 2\u00de, where T i0 is the squared fitting error of the initial solution) to be introduced during the learning process of KL-SGBN or MM-SGBN.\nThe test accuracies are averaged over the 30 randomly partitioned training-test groups. The classification performances of SGBN and SVM classifiers are evaluated with the varied parameter that controls the sparsity level and the number of edges optimized in the learning process in Fig. 3 correspond to the results from the SGBN classifiers, while the bottom two rows correspond to those from the SVM classifiers. From Fig. 3 , we have the following observations. i) Both KL-SGBN and MM-SGBN can significantly improve the discriminative power of the individually learned SGBNs (Fig. 3 , the top two rows), as well as their associated SVM classifiers (Fig. 3 , the third row). Such improvements are consistent over the three neuroimaging data sets and different parameter settings, and could reach the significant increases of 10 $ 20 percent on most occasions. When the network becomes more sparse, the classification performance of the individually learned SGBNs (H-SGBN and OR-SGBN) drops significantly possibly due to the insufficient modeling of data. However, under such circumstances, KL-SGBN and MM-SGBN can still maintain high classification accuracies, which may indicate the necessity and effectiveness of the discriminative learning in classification scenarios. ii) When using SGBN classifiers, for all the three data sets, MM-SGBN consistently achieves higher test accuracies at all sparsity levels (Fig. 3 , the first row) with different numbers of optimized edges than KL-SGBN ( Fig. 3, the second row) . The advantage of MM-SGBN over KL-SGBN comes from explicitly optimizing the discriminative power of SGBNs, instead of getting help from optimizing the performance of SVM on SGBN-induced features. iii) When using SVM classifiers, the SVM built upon KL-SGBN-induced features performs slightly better than that built upon MM-SGBN-induced features at all sparsity levels (Fig. 3, the third row) . This is expected since KL-SGBN optimizes the performance of its associated SVM classifier. iv) When cross-referencing the first and the third rows in Fig. 3 , it is noticed that SVM classifiers in general perform worse than the discriminatively learned SGBN classifiers. These may be because our Fisher vectors have very high dimensionality, which causes serious overfitting of data in SVM classifiers. Such situation might be somewhat improved for SGBNclassifiers since the simple Gaussian model may \"regularize\" the model fitting. Based on this assumption, we further select a number of leading features from Fisher vectors by computing the Pearson correlation of the features and the labels, and use the selected features to construct the Fisher kernel for the SVM classifiers. As shown in the fourth row of Fig. 3 , the simple feature selection step can further significantly improve the classification performance of the Fisher-kernel based SVM. v) The individually learned OR-SGBN and H-SGBN perform similarly for classification. However, as mentioned above, OR-SGBN has an additional advantage of being invariant to the feature ordering. vi) Recall that these improvement on discrimination are achieved with no more than 1 percent increase of squared fitting errors, which is explicitly controlled through the user defined parameters T 1 and T 2 . Note that the rate of 1 percent is application dependent. More tolerance of fitting errors can potentially bring more discrimination."}, {"section_title": "Comparison of Connectivity", "text": "We also conduct an investigation to gain some insights into the learned brain networks for the diseased and the healthy populations, respectively. Exp-IV. In this experiment, we visualize the learned brain networks and compare the connectivity patterns obtained by different methods and from different populations. MRI-II data set is used for this study since it covers regions spread over the four lobes of brain.\nThe structures of the brain networks recovered from NC and MCI groups are displayed in Fig. 4 by using H-SGBN (BCD) and OR-SGBN (WHOLE), respectively. The network structure is obtained by thresholding the edge weights Q Q with a cutoff value of 0:01 [14] . Each row i represents the effective connections (dark dots) starting from the node i, and each column j represents the effective connections ending at the node j. Note that, due to the different optimization problems involved, the same parameter leads to different sparsity levels for H-SGBN and OR-SGBN. However, for a given method, different values do not change the major structures of the resulting networks.\nIn Fig. 4 , it is noticed that H-SGBN (BCD) usually generates more connections in the upper triangle of the graphs even when we randomly permute the nodes. We suspect that this is caused by the column-wise optimization. The parameters u u i (corresponding to the columns in the graph) optimized at the early stage tend to be made more sparse than those optimized later in order to satisfy the DAG constraint. This phenomenon is not observed in OR-SGBN (WHOLE) that is used to initialize the discriminative learning.\nLet us focus on OR-SGBN. Compared with H-SGBN, OR-SGBN has an additional bias node corresponding to the last row and column in Fig. 4 . Visualizing Q Q can provide rich information for medical analysis. Here we just list a few observations as examples. With the same , OR-SGBN produces 183 edges for NC, and 145 edges for MCI. Such loss of connectivity also happens at the temporal lobe (24 percent loss) for MCI. The temporal lobe (and some subcortical structures) is known to play a very important role in the progression of AD. The loss of connectivity in this region has been well-documented in wide AD-related studies [14] , [48] , [49] . In Fig. 4 , we also observe an increase of connectivity (the left bottom corner in the figure) between the frontal and the temporal lobe in MCI. Some study [50] mentioned that the frontal lobe may have connectivity increase at the early stage of AD as a compensation of cognitive functions for the patients. Moreover, significant directionality changes are also found for the left (node 35) and the right (node 38) hippocampi, an important structure among the earliest ones affected by AD. Both hippocampi have reduced incoming connectivity (communications dominated by other nodes) but increased outgoing connectivity (communications dominated by themselves) in MCI. Please note that the above observations could be influenced by the factors such as the limited number of data, the degree of disease progression and the imaging modality used in this study. More reliable medical analysis should be validated on larger data sets and worth further exploration, which is, however, beyond the scope of this paper.\nTo illustrate the difference of edge weights learned by KL-SGBN and MM-SGBN, an example of 30 edge weight changes (from the initial OR-SGBN) learned by these two methods is given in Fig. 5 , where the SGBN networks from the two classes are vectorized and concatenated as x-axis. As shown, the signs of weight changes are quite similar in both methods. The most significant difference is that, MM-SGBN gives negative weight changes to the bias node of the left Amygdala and the right Parahippocampus (red lines in Fig. 5 ) while KL-SGBN gives them positive weight changes. The adjustment of edge weights leads to 10 percent increase of test accuracy for MM-SGBN in this example."}, {"section_title": "CONCLUSION", "text": "In this paper, we focus on the discriminative learning of Bayesian network for continuous variables, especially for neuroimaging data. Two discriminative learning frameworks are proposed to achieve this goal, i.e., KL-SGBN improves the performance of SVM classifiers based on SGBN-induced features, and MM-SGBN explicitly optimizes an SGBN-based criterion for classification. We demonstrate how to utilize Fisher-kernel to bridge the generative methods of SGBN and the discriminative classifiers of SVM, and how to embed the max-margin criterion into SGBN for discriminative learning. The optimization problems are analyzed in details, and the advantages and disadvantages of the proposed methods are discussed. Moreover, a new DAG constraint is proposed to ensure the validity of the graph with theoretical guarantee and validation on the benchmark data. We apply the proposed methods to modeling brain effective connectivity for early AD prediction. Significant improvements have been observed in the discriminative power of both the SGBN models and the associated SVM classifiers, without sacrificing much representation power.\nLuping Zhou received the PhD degree from the Australian National University. After receiving the PhD degree, she joined as a research fellow in the University of North Carolina at Chapel Hill, Chapel Hill, NC, and a staff research scientist at CSIRO, Australia. She is currently a senior lecturer in the School of Computing and Information Technology, University of Wollongong, Australia. Her research interests include machine learning, medical image analysis, and computer vision. She is a senior member of the IEEE.\nLei Wang received the PhD degree from Nanyang Technological University in 2004. He is currently with Faculty of Engineering and Information Sciences, University of Wollongong as an associate professor. His research interest lies in machine learning, pattern recognition, and computer vision. For machine learning and pattern recognition, he is interested in feature selection, model selection, and kernel-based learning methods. For computer vision, he is interested in image categorization and content-based image retrieval. He is a senior member of the IEEE. \" For more information on this or any other computing topic, please visit our Digital Library at www.computer.org/publications/dlib."}]