[{"section_title": "Abstract", "text": "Neuroanatomical segmentation in T1-weighted magnetic resonance imaging of the brain is a prerequisite for quantitative morphological measurements, as well as an essential element in general preprocessing pipelines. While recent fully automated segmentation methods based on convolutional neural networks have shown great potential, these methods nonetheless suffer from severe performance degradation when there are mismatches between training (source) and testing (target) domains (e.g. due to different scanner acquisition protocols or due to anatomical differences in the respective populations under study). This work introduces a new method for unsupervised domain adaptation which improves performance in challenging cross-domain applications without requiring any additional annotations on the target domain. Using a previously validated state-of-the-art segmentation method based on a context-augmented convolutional neural network, we first demonstrate that networks with better domain generalizability can be trained using extensive data augmentation with label-preserving transformations which mimic differences between domains. Second, we incorporate unlabelled target domain samples into training using a self-ensembling approach, demonstrating further performance gains, and further diminishing the performance gap in comparison to fully-supervised training on the target domain."}, {"section_title": "INTRODUCTION", "text": "Structural segmentation in T1-weighted (T1w) magnetic resonance imaging (MRI) is a prerequisite for volume, shape, and thickness measurements, as well as an essential element in general pre-processing pipelines. While manual or semiautomatic labellings produced by trained human experts are widely considered the 'gold standard' approach for segmentation, such labellings are highly time-consuming and subject to both inter-and intra-rater variability. Consequently, much\nWe would like to acknowledge funding from the Famille Louise and Andr\u00e9 Charron. This work was also supported in part by a doctoral fellowship from the Fonds de recherche du Qu\u00e9bec -Sant\u00e9 (FRQS) and a grant from the Natural Sciences and Engineering Research Council of Canada (NSERC) CREATE (4140438 -2012 research has been devoted to developing fully automated methods for accurate and robust neuroanatomical segmentation. Recently, applications of convolutional neural networks (CNNs) [1] to the task of neuroanatomical segmentation have produced new state-of-the-art results [2, 3, 4, 5] . Despite these recent successes, such tools are commonly developed and validated under an overly restrictive assumption that both the training and testing data are sampled from the same underlying distribution (or 'domain'). In T1w MRI, distributional shifts across domains are commonly observed due to variations in pulse sequences and scanner hardware, in addition to anatomical differences dependent on the imaged population. In practice, acquiring representative and highquality labelled training data for each 'target' domain of interest is often infeasible, and pre-labelled training data from another 'source' domain are used for training instead. This domain mismatch can cause severe performance degradation, reducing the accuracy of subsequent analyses.\nWhile some studies have advocated for semi-supervised approaches, whereby a network pre-trained on one or several source domains is fine-tuned on limited quantities of labelled target domain data (so-called 'transfer learning') [6] , fully unsupervised approaches which do not require any manual labellings on the target domain are more desirable. Example CNN-based unsupervised domain adaptation approaches in medical imaging segmentation include that of Kamnitsas et al. [7] , which adopted a domain-adversarial method for brain tumour segmentation in MRI, and that of Perone et al. [8] , which adopted a self-ensembling method for spinal cord segmentation in MRI. To the best of our knowledge, no work has specifically addressed the domain adaptation problem for general neuroanatomical segmentation, particularly in highly challenging scenarios where source and target domains differ not only with respect to scanner acquisition protocol (resulting in differences with respect to overall image brightness, contrast, noise and resolution), but also with respect to anatomy (e.g. due to differences in age and/or health) of the brains of the scanned individuals.\nIn this work, we propose an extension to our previously developed CNN-based method for neuroantomical segmentation [2] which is specifically designed for fully unsupervised domain adaptation in challenging T1-weighted (T1w) neuroanatomical segmentation applications. First, we demonstrate that networks with greater domain generaliz-ability can be trained using an appropriate data augmentation scheme with random transformations designed to mimic inter-domain differences in T1w MRI. Second, we incorporate unlabelled target domain samples into training using a self-ensembling [9, 10, 11] approach. Using three different manually annotated datasets, we extensively validate our method and compare it with a domain-adversarial [12, 7] approach for unsupervised domain adaptation, as well as a classic patch-based [13] segmentation approach, in each case demonstrating improved cross-domain performance."}, {"section_title": "METHODS AND MATERIALS", "text": ""}, {"section_title": "Unsupervised domain adaptation", "text": "During training, we assume that we have access to training samples x S and x T from the source and target domains respectively. However, only for samples from the source domain x S are the corresponding reference labels y S known. If the source domain and target domain are sufficiently similar, then a labeller network trained on labelled source samples can be simply applied to samples from the target domain. Unfortunately, the transferability of features learned by deep neural networks is limited due to fragile co-adaptation and representation specificity [14] , leading to suboptimal performance on target domain samples in many cases. The task of unsupervised domain adaptation is to remedy this problem, i.e. to learn a labeller network L(x, \u03b8) : X \u2192 Y which accurately predicts labels\u0177 T for inputs x T from the target domain, i.e. which is adapted to the target domain.\nA popular class of methods for domain adaptation applied to convolutional neural networks addresses this problem by seeking a labeller network for which the classification accuracy is high on labelled source samples, while simultaneously generating similar feature distributions across domains [15, 16, 12] . Methods belonging to this class differ primarily with respect to the specific choice of representation space in which to measure the disparity between domains (e.g. which network layer(s) to examine for inter-domain differences), and the choice of how to measure and minimize the distance. For example, the work of Ganin et al. [12] (extended to tumour-based segmentation in Kamnitsas et al. [7] ) uses a domain-adversarial approach in which a classifier network is trained to simultaneously minimize the classification loss on labelled source samples while countering a domain-discriminator network in order to generate domaininvariant deep features. This approach can be too restrictive in cases where there is reason to expect that the distributions of feature maps should not be particularly similar across domains (e.g. if the two domains differ with respect to overall anatomy). Less restrictive approaches, which aim to match only lower-order statistics of deep feature distributions between domains have also been proposed [17, 18] . Nonetheless, even if distributions of the source and target deep features can be well aligned, there is no guarantee that the aligned target samples will fall on the correct sides of the learned decision boundary."}, {"section_title": "Self-ensembling for domain adaptation", "text": "A related approach for semi-supervised learning, called 'selfensembling' [10, 11] , incorporates unlabelled samples into training using an auxiliary consistency loss. The consistency loss penalizes differences between outputs of the network evaluated on the same input but under different labelpreserving data augmentation transformations. Minimizing the consistency loss therefore helps to construct a regularized model which produces smoothly varying outputs with respect to it's input, i.e. which is smooth around the (labelled and unlabelled) training data. This approach can also be interpreted as extrapolating the labels for the unlabelled samples [19] , akin to so-called 'label-propagation' methods [20] .\nSelf-ensembling has been recently extended to domain adaptation by French et al. [9] , demonstrating state-of-the-art results for digit classification tasks, and applied to the task of domain adaptation for spinal cord grey matter segmentation in MRI by Perone et al [8] . As argued by French et al., since self-ensembling works by label propagation, it is crucial that the source and target domains at least partially overlap in input space. To encourage sufficient overlap between domains, the same authors propose an extensive set of label-preserving data augmentation transformations tailored to their particular task of digit recognition. In our work, we propose a set of label-preserving data augmentation transformations better suited for domain adaptation in T1-weighted MRI, which we describe in section II-D. Also as suggested by French et al., we maintain an exponential moving average (EMA) of the network parameters \u03b8 during training:\nwhere t is the training batch, \u03b8 t are the network parameters at training batch t, \u03b1 controls the 'memory' of the EMA (e.g. smaller values of \u03b1 discount older observations faster) and \u03b8 t is the EMA of the network parameters at training batch t. Rather than comparing the output of the same network for two randomly transformed versions of the same input, we compare the output of the 'student' model (the network with parameters \u03b8) with that of the 'teacher' model (the same network but with the EMA parameters\u03b8). This approach has the benefit of encouraging the student model to more closely mimic the teacher model (which will tend to be a more accurate model [21] ), in turn producing a beneficial feedback loop between the student and the teacher models [10] . We now explicitly formulate our method and training strategy for domain adaptation based on self-ensembling ( Fig. 1 ). We first assume that we have access to a set of N samples from each of the source and target domains. The source loss L S (\u03b8) is computed over labelled source samples only as\nwhere \u03b3(\u00b7) is the categorical cross-entropy function, \u03c6(\u00b7) applies a random label-preserving data augmentation transformation to its input, L(x S n , \u03b8) i is the softmax output containing the predicted class probabilities at pixel i, and y S ni is the one-hot encoded reference label for input x S n . The target consistency loss L T (\u03b8) is computed over unlabelled target samples as \nThe total loss function to minimize is given by\nwhere \u03bb is a hyperparameter which specifies the trade-off between accuracy on labelled source samples and target consistency."}, {"section_title": "Network architecture", "text": "We use the labeller network described in Novosad et al. [2] , which combines a deep three-dimensional fully convolutional architecture with spatial priors. Spatial priors are incorporated by using a working volume to restrict the area in which samples are extracted (during both training and testing) and by explicitly augmenting the input with spatial coordinate patches. The network takes as input a large patch of size 41 3 \u00d7N (where N is the number of channels, including spatial coordinate patches) and first processes it using a series of sixteen 3 \u00d7 3 \u00d7 3 convolutional layers (applied without padding and with unary stride), reducing the size of the feature maps to 9 3 (we note that each application of such a convolutional layer reduces the size of the feature maps by 1 voxel in each dimension). The output of each preceding convolutional layer is cropped and concatenated to produce a multi-scale representation of the input, which is further processed by a series of three 1 \u00d7 1 \u00d7 1 convolutional layers, producing a probabilistic local label estimate for the central 9 3 voxels of the input for each of the C structures under consideration."}, {"section_title": "Increased domain generalizability using data augmentation", "text": "As shown in Fig. 2 and Fig. 3 , T1w images from different datasets broadly differ with respect to both low-level (e.g. image brightness, contrast, resolution and noise) and high-level (anatomical) properties. Diversifying the appearance of training samples with respect to these properties can help train models which are more robust to differences among them.\nTo this end, we use extensive data augmentation scheme consisting of random label-preserving (as required for compatibility with self-ensembling) transformations. Specifically, we explore five task-specific data augmentation techniques intended to increase inter-domain generalizability in T1w MRI, which we now describe. We additionally note that prior to applying the data augmentation transformations, images are pre-processed to zero mean and unit standard deviation as described in Section II-F. 1) Brightness: a random uniform offset is added to the sample:\nx\n2) Contrast: the mean separation between low-and highintensity voxels in the sample is randomly altered:\nwherex is the mean value of the sample x over all voxels.\n3) Sharpness: high-frequency detail is randomly enhanced or suppressed:\nx\nwhere h is a high-frequency image obtained by subtracting a Gaussian blurred (with standard deviation of 1) version of the sample from itself. 4) Noise: independent random Gaussian noise with zero mean and standard deviation 0.05 is added to each voxel of the sample:\n5) Spatial deformations: a random elastic deformation is applied to the sample. We use the approach described in [2] to generate the deformation fields with previously validated parameters \u03c3 = 4 mm and \u03b1 = 2 mm. As required for selfensembling, however, the random deformation must be labelpreserving (i.e. the labels of the central 9 3 voxels of each original sample should remain consistent with its transformed variant). To this end, we create a binary mask image with the same spatial dimensions as the training sample, and set the central (9 + 3\u03c3) 3 voxels to 0 and the remaining voxels to 1. We then blur the mask image with a Gaussian filter with standard deviation \u03c3, such that the value of the blurred mask is approximately zero for the central 9 3 voxels, and then smoothly increasing to one at the edges. In this way, the deformation randomly warps the background anatomy while preserving the labels of the original sample.\nWe note that the parameters associated with each transformation were selected heuristically in order to produce random samples with realistic appearances. Example randomly transformed samples are displayed in Fig. 4 ."}, {"section_title": "Training and testing", "text": "Training and testing for the non-adapted networks is done as described in [2] . For the proposed self-ensembling approach, a number of modifications were required for training, which are now discussed in turn."}, {"section_title": "Pseudo-labelling for approximate class balancing", "text": "Using approximately class-balanced training samples is required to ensure that the learned networks are not biased against smaller structures. In [2] , training samples are drawn such that the central voxel is equally likely to belong to any of the structures under consideration. Since no reference labels are available on the target domain, we instead use a model pre-trained on the source domain to generate pseudo-labels, which are in turn used during training to extract (approximately) class balanced samples from the target domain. Here, each of the five transformations described in section II-D are applied to each sample in a random order. Note that the transformations do not alter the label of the central 9 3 voxels (small box), which is essential for the target consistency loss (Equation (3))."}, {"section_title": "Fine-tuning", "text": "Rather than training the domain-adapted network from scratch, we opt to fine-tune the network pre-trained on the source domain only. In our preliminary studies, we found that this approach resulted in faster and more stable training, allowing us to drop the 'ramp-up' term (used in the works of French et al. [9] and Perone et al. [8] ) required to slowly increase the consistency loss in order to stabilize training."}, {"section_title": "Batch normalization statistics", "text": "As done in the work of French et al. [9] , we compute the loss in equation (4) at each iteration by passing through two separate batches: one batch of labelled source-domain samples (computing the supervised classification loss) and one batch of unlabelled target-domain samples (computing the unsupervised consistency loss), and then form a weighted sum before backpropagating the loss to update the network parameters. In the work of [9] , inspired by [17] , the authors opt for an approach whereby the source and target samples are batch-normalized independently during training. While this approach ensures that the network produces feature maps with similar mean and variance regardless of the input domain, it does not ensure that the same classes across domains are mapped to similar features. Indeed, in the presence of strong anatomical differences between domains, this approach can directly cause such a discrepancy. In our implementation of self-ensembling we instead use consistent batch normalization statistics for both domains: when finetuning the pre-trained source network using self-ensembling, we freeze the batch normalization layers and instead use the pre-computed running average batch statistics from the source domain during both training and testing."}, {"section_title": "Training specifications", "text": "Network parameters are optimized iteratively using RM-SProp [22] , an adaptive stochastic gradient descent algorithm with Nesterov momentum [23] (momentum = 0.9) for acceleration. At each epoch, we sample approximately 1500 voxels from the images in the source and target domains, with an equal number of voxels sampled from each training subject in each domain, and such that an equal number of voxels are extracted from each structure (background included). Training samples (i.e. whole patches with spatial coordinates [2] ) are then extracted around each selected voxel. The samples are then processed iteratively in mini-batches of size 16. We maintain the exponential moving average network for the self-ensembling method using \u03b1 = 0.99 following recommendations by Tarvainen et al. [10] . We additionally regularized the network using the L 2 norm on the weights with regularization weight set to 10 \u22124 .\nNetwork weights are randomly initialized with the Glorot method [24] and all biases are initialized to zero. A static learning rate of 1 \u00d7 10 \u22124 was used. Because no validation set is available on the target domain to drive early-stopping, the networks were trained for a fixed number of 50 epochs. We note that preliminary experiments showed little improvement in the unsupervised loss after this point.\nTraining was performed on a single NVIDIA TITAN X with 12GB GPU memory. Software was coded in Python, and used Lasagne (https://lasagne.readthedocs.io/en/latest/index.html), a lightweight library to build and train the neural networks in Theano [25] ."}, {"section_title": "Preprocessing and Datasets", "text": "For validation, we use three different T1w datasets with labels provided by Neuromorphometrics (http://www.neuromorphometrics.com).\nImage preprocessing consisted of non-uniformity correction with the N3 algorithm [26] , 12-parameter affine registration to the MNI-ICBM152 template using an in-house MINC (https://bic-mni.github.io/) registration tool based on normalized mutual information [27] , and intensity normalization to zero mean and unit standard deviation. In our studies, we focus on segmentation of the hippocampus as well as the following subcortical structures and the left and right thalamus, caudate, putamen, pallidum, hippocampus and amygdala for a total of 13 classes (one class being background). Representative images from each dataset, after preprocessing, are displayed in Fig. 2 with labels overlaid. Dataset details are provided below."}, {"section_title": "ADNI dataset", "text": "The Alzheimer's Disease Neuroimaging Initiative (ADNI) dataset [28, 29] used in this work contains images of 30 subjects (minimum/mean/maximum age = 62.4/75.7/87.9 years), with 15 images from subjects with Alzheimer's disease, and 15 images from healthy elderly subjects. These images were acquired on 1.5 T General Electric (GE), Philips, and Siemens scanners using a magnetization-prepared rapid acquisition gradient-echo (MP-RAGE) sequence."}, {"section_title": "CANDI dataset", "text": "The Child and Adolescent NeuroDevelopment Initiative (CANDI) dataset [30] used in this work contains images of 13 young subjects, some of which have been diagnosed with psychiatric disorders (minimum/mean/maximum age = 5/9.5/15 years), acquired on a 1.5 T GE Signa scanner using an inversion recovery-prepared spoiled gradient recalled echo sequence."}, {"section_title": "OASIS dataset", "text": "The Open Access Series of Imaging Studies (OASIS) dataset [31] used in this work contains images of 20 healthy young adults (minimum/mean/maximum age = 19/23.1/34 years) acquired on a Siemens 1.5 T Vision scanner using an MP-RAGE sequence."}, {"section_title": "EXPERIMENTS AND RESULTS", "text": "We assess segmentation accuracy using the Dice coefficient. The Dice coefficient measures the extent of spatial overlap between two binary images. The Dice coefficient is defined as 100% \u00d7 2|A \u2229 R|/(|A| + |R|) where A is an automatically segmented label image, R is the reference label image, \u2229 is the intersection, and | \u00b7 | counts the number of non-zero elements. We here express the Dice coefficient as a percentage, with 100% indicating perfect overlap. We note that for multi-label images, we compute the Dice coefficient for each structure independently.\nTo reduce the variability in our performance estimate of the various CNN-based methods, we report mean performance estimates over multiple independent runs (10 runs for the results in section III-A (since individual runs were more variable) and 5 runs for the results in sections III-B and III-C), i.e. re-training and re-testing each network using different random seeds."}, {"section_title": "Effect of data augmentation", "text": "We assessed the effect of each data augmentation transformation described in section II-D, (brightness, contrast, sharpness, noise and spatial deformations) on domain generalizability by training networks on the OASIS subjects using each or all types of transformation (in the latter case, each transformation was applied to each sample in a random order), and then applying the networks to segment both ADNI and CANDI datasets. Mean Dice coefficients are reported in Table  I Brightness transformations were the most effective for both OASIS \u2192 ADNI and OASIS \u2192 CANDI (p < 6 \u00d7 10 \u22125 , paired t-test, compared to baseline without data augmentation), followed by sharpness transformations and random spatial deformations. Contrast transformations improved performance in the OASIS \u2192 ADNI adaptation, but the effect was not significant compared to the baseline (p = 0.25), and had no effect on the OASIS \u2192 CANDI adaptation. The effect of random noise addition did not significantly improve performance relative to the baseline in either case (p > 0.6). Finally, the combination of all five data augmentation transformations produced the best performance for both source \u2192 target tasks."}, {"section_title": "Effect of consistency loss", "text": "Next we assessed the impact of the parameter \u03bb in equation (4) , which controls the influence of the consistency loss on unlabelled target domain samples. Again we train networks using the OASIS dataset as the source domain, and consider both ADNI and CANDI as separate target domains. Mean Dice coefficients are plotted in Fig. 5 . We note that here extensive data augmentation was included in all experiments using all five data augmentation transformations described in section II-D. Performance in the OASIS \u2192 ADNI adaptation increased with increasing \u03bb in the range [1, 8] and then reached a plateau, while performance in the OASIS \u2192 CANDI adaptation increased more slowly with increasing \u03bb in the range [1, 32] . In general, the performance of self-ensembling was robust to the choice of \u03bb for a wide range of values, and both adaptations achieved near optimal performance for \u03bb = 32. We therefore use this value in the subsequent experiments, regardless of the specific source \u2192 target task."}, {"section_title": "Comparison of methods", "text": "For comparison, we also consider our own implementation of the domain-adversarial (DA) method [12] , previously applied to the task of domain adaptation in MR segmentation by Kamnitsas et al. [7] . This method minimizes the classification loss on labelled source samples while learning domaininvariant features by countering a domain-discriminator network which attempts to predict the domain of the input data by observing the generated features. In our implementation, we use the same labeller network as for self-ensembling (section II-C) and attach the domain-discriminator to the last layer (immediately prior to the final softmax activation function). The discriminator consisted of four 3 \u00d7 3 \u00d7 3 convolutional layers (applied without padding) each with 32 filters, and exponential linear units (ELUs) [32] were used as activation functions for all layers except the final one, which used a sigmoid function. Table II reports mean Dice coefficients obtained by applying each method to each source \u2192 target adaptation. For comparison, we also provide results from fully supervised training (5-fold cross-validation) on the target domain, which can be interpreted as an upper-bound performance achievable by the domain adaptation methods. We first note that the addition of data augmentation improved performance of the baseline network in the inter-domain experiments as well as in intra-domain experiments. However, the improvement in the inter-domain experiments (increase in mean Dice, across all structures and all source \u2192 target adaptations, of 2.9%, from 73.2% to 76.1%) was considerably larger than in the latter experiments (increase in mean Dice of 1.2%, from 82.7% to 83.9%). This confirms that the data augmentation transformations used in this work are particularly effective at improving the domain generalizability of the trained networks. Indeed, the addition of data augmentation alone was more effective (p < \u00d710 \u22129 , paired t-test) than the domainadversarial method, though less effective compared to the self-ensembling method using only minimal augmentation in the form of Gaussian noise. The combination of data augmentation and the domain-adversarial method produced a mean Dice coefficient of 77.3%, significantly better than either data augmentation or the domain-adversarial method alone (p < 10 \u22129 ), though comparably effective compared to selfensembling with minimal augmentation (p > 0.05). Finally, the self-ensembling approach performed best of all unsupervised domain adaptation methods, producing a mean Dice coefficient of 78.4% (p < 10 \u22129 compared to the second best (domain-adversarial) method).\nWe note that the performance of the baseline network (trained on the source domain only) was highly variable between independent runs (see standard deviations reported in Table II ). This is expected, since the shape of the learned decision boundary is only constrained in the vicinity of the support of the source domain. The addition of data augmentation effectively increased the overlap of the transformed samples with target domain samples, reducing inter-run variability. Finally, the self-ensembling approach further reduced interrun variability to a level comparable to that of supervised training on the target domain.\nExample segmentations are displayed in Fig. 6 and Fig.  7 for the OASIS \u2192 ADNI and OASIS \u2192 CANDI tasks, Fig. 6 . Example segmentations in the OASIS \u2192 ADNI task. The subjects with the worst, 2nd worst, median, 2nd best and best mean Dice coefficients after segmentation with the baseline network were chosen for comparison. Errors relative to the reference labels are shown in the fourth and sixth columns in red. Compared to the baseline network, the proposed segmentation method produced more anatomically contiguous segmentations consistent with the reference labels. Fig. 7 . Similar to Fig. 6 but for the OASIS \u2192 CANDI task. While the baseline segmentation method produce anatomically irregular segmentations and isolated clusters of false positives (e.g. first two rows) these errors were avoided when using the proposed segmentation method.\nrespectively. In the OASIS \u2192 ADNI application, erroneous segmentations produced by the baseline network (trained on the source domain only) were generally anatomically noncontiguous and characterized by large segments of missing labels (rows 1 and 2 of Fig. 6 ). In the OASIS \u2192 CANDI application, erroneous segmentations produced by the same baseline network were generally characterized by anatomical irregularity (rows 1 and 2 of Fig. 7 ) and isolated clusters of spatially disconnected labels. In general, using the selfensembling method with data augmentation minimized these errors, instead making errors concentrated along the more ambiguous structural boundaries.\nFor completeness, we also consider a classic patch-based segmentation (PBS) [13] method for comparison. We used the implementation in MINC toolkit (https://bic-mni.github.io/) with the default parameters, including a patch radius of two voxels and a search radius of five voxels. All images were preprocessed in the same way as described in section II-F, but with the addition of a linear intensity normalization step mapping all voxel intensities into the range [0, 100]. Mean Dice coefficients for each source \u2192 target task are reported in Table III . Compared to the CNN-based methods, PBS was found to be more sensitive to disparities between training and testing domains. Over all structures and inter-domain tasks, PBS produced a very low mean Dice coefficient of 64.4% across all structures and all source \u2192 target tasks. On the other hand, when training on the target domains using a 5-fold cross-validation, PBS markedly improved (mean Dice coefficient of 81.7%), though its performance was still worse compared to the CNN-based method both with (mean Dice coefficient of 83.9%) and without (mean Dice coefficient of 82.7%) data augmentation. The observed disparity in the performance of PBS between inter-and intra-domain applications can be understood in light of the following considerations. First, since PBS relies on the L 2 distance to estimate patch similarities, accurate label propagation requires that tissues have similar intensity values across training and testing images. Second, since PBS only extracts candidate patches for label fusion within local search windows, it requires excellent spatial alignment between training and target images. In general, achieving sufficiently consistent intensity normalization and spatial alignment across images from different domains is a highly challenging problem; while using labels (e.g. tissue maps) can help intensity normalization and registration achieve more consistent results across domains, this requires segmentation, which, as highlighted in the previous results, is particularly burdened by performance degradation when applied across domains."}, {"section_title": "Adaptation visualization", "text": "To visualize the effect of data augmentation and explicit domain adaptation on the trained networks, we used the t-SNE algorithm [33] to reduce the dimensionality of sample sets of features produced by the various networks. In Fig.  8 , we consider the CANDI \u2192 ADNI adaptation, and plot sample feature sets (here, feature maps extracted immediately prior to the final softmax layer) produced by 1000 uniformly sampled input patches from each domain. The unadapted network without data augmentation produced highly disparate, with samples from the target domain tending to be highly concentrated in the center of the source domain feature distribution. The addition of data augmentation tended to slightly disperse the target domain samples away from the center, while the combination of data augmentation with both self-ensembling and the domain-adverserial method produced more consistent feature distributions across domains."}, {"section_title": "DISCUSSION", "text": "Despite the superficial similarity between T1w datasets, domain adaptation is a highly challenging task due to an abundance of low-level (e.g. brightness, contrast, noise and resolution) differences caused by varying pulse sequence parameters and scanning hardware, in addition to high-level anatomical differences due to the age and health/disease of the imaged demographic. In this work we have developed and validated a novel CNN-based method for fully unsupervised domain adaptation in automated neuroanatomical segmentation of T1w MRI. The approach is fully unsupervised on the target domain and does not require additional domain-specific training data, allowing users to easily and more effectively process their data of interest using prelabelled images from an arbitrary domain. This is particularly important for processing modern large-scale conglomerate datasets consisting of images from various centres, as well a necessary quality before such automated methods can be confidently applied in clinical environments. Combining an extensive data augmentation scheme (designed to mimic inter-domain variability in T1w MRI) with a novel selfensembling approach, our proposed method demonstrated increased performance compared to the baseline network trained on the source domain only, a previously published domain-adversarial method for domain adaptation [7] , and a classical patch-based segmentation method [13] . Considering the performance of the baseline network (mean Dice coefficient of 73.2% across all structures and all source \u2192 target adaptations), our fully unsupervised method for domain adaptation improved performance by 5.2%, closing the gap by 49% relative to fully supervised training on the target domain with data augmentation (mean Dice coefficient of 83.9%), and generally avoided the more serious segmentation errors produced by the baseline network. Rather than using hand-crafted data augmentation transformations, it is also possible to learn transformations which map the style (low-level appearance) of images across domains [34, 35, 36] . One difficulty with this approach is to ensure that the learned transformations sufficiently translate style while (1) remaining realistic, and (2) preserving content (anatomy) such that they are label-preserving [37] . As noted by Cohen et al. [38] , this is particularly problematic when using approaches based on adversarial losses (e.g. CycleGAN [34] ) which aim to match the translation output with the distribution of the target domain, commonly introducing anatomical artifacts into the translated output, and introducing inconsistencies between the input labels and the transformed outputs. This could possibly be remedied by attaching further constraints to the learned mapping, e.g. by requiring that the correlation between input and styletransferred outputs be maximized. A second difficulty is that style-transfer mappings are generally not stochastic [39] as required for compatibility with self-ensembling. Thus, the combination of learned style-transfer mappings with the random data augmentations used in this work may result in further performance gains.\nSemi-supervised approaches for domain adaptation can also be considered. This class of methods requires additional but limited quantities of labelled data from the target domain, which can be used, for example, for fine-tuning the network parameters (also called 'transfer learning') (see [6, 40] for an example of transfer learning applied to segmentation in MRI). While less practical, semi-supervised approaches work orthogonally to unsupervised approaches. Therefore, the combination of unsupervised (using all unlabelled target domain data) and semi-supervised (using a small quantity of labelled target domain data) approaches may provide further performance gains. Active learning approaches [41] could also be used to reduce the amount of required manual effort, e.g. by requiring labels on a smaller subset of the most informative samples on the target domain.\nFinally, this work concerns pairwise adaptation from a single source domain to a single target domain. In practice, users may have access to pre-labelled training images from multiple source domains. In this case, applying pairwise adaptation approaches may be suboptimal, as they fail to leverage the shared information across domains. A natural solution would be to pool all available training data together and then proceed using a pairwise adaptation approach. However, some source domains may not be useful for adaptation to particular domains, and this approach may in certain cases actually hurt performance [42] . The question of how to optimally leverage multiple source domains for adaptation is indeed an active field of research in the wider computer vision literature. For example, Duan et al. [43] propose a general method where networks trained from each source can be weighted and then combined to make a final decision on the target domain. Alternatively, explicit multi-source domain adaptation models can be constructed, such as in the work of Zhao et al. [44] , which extends the domainadversarial adaptation method to multiple source domains by back-propagating gradients from multiple source domains in proportion to their similarity to the target domain. Developing and extending these and similar methods specifically for the problem of domain-adaptation in MR segmentation is a promising direction for future work."}]