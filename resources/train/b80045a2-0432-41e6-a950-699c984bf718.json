[{"section_title": "Abstract", "text": "Widespread availability of rich educational databases facilitates the use of conditioning strategies to estimate causal effects with non-experimental data. With dozens, hundreds, or more potential predictors, variable selection can be useful for practical reasons related to communicating results, and for statistical reasons related to improving the efficiency of estimators. Background knowledge should take precedence in deciding which variables to retain. However, with many potential predictors, theory may be weak, such that functional form relationships are likely to be unknown. In this paper, I propose a nonparametric method for data-driven variable selection based on permutation testing with conditional random forest variable importance. The algorithm automatically handles nonlinear relationships and interactions in its naive implementation.\nThrough a series of Monte Carlo simulation studies, and a case study with ECLSK data, I find that the method performs well across a variety of scenarios where other methods fail."}, {"section_title": "Introduction", "text": "Widespread availability of high-quality educational databases such as the Early Childhood Longitudinal Study (ECLSK; Tourangeau, Nord, L\u00e9, Pollack, & Atkins-Burnett, 2006) has made it easier for educational researchers to search for answers to causal research questions with non-randomized data through conditioning strategies. To identify an average causal effect with observational data through a conditioning strategy, such as regression estimation or propensity score analysis, one must assume that the potential outcomes are independent of the assignment mechanism, conditional on the observed pretreatment variables, X. This empirically untestable assumption, often referred to as ignorability (Rosenbaum & Rubin, 1983) , essentially implies that all confounding variables have been observed and reliably measured (Steiner, Cook, & Shadish, 2011) . Ignorability is more likely to be satisfied if the set of conditioning variables is comprehensive and large.\nFrom a practical perspective, a researcher using a large database may wish to winnow down the set of predictors from the dozens, hundreds, or thousands available to a more manageable number to (a) facilitate interpretation and communication of results 1 , (b) allow parametric models to be stably fit, or (c) allow nonparametric algorithms to converge in a reasonable amount of time.\nFrom a statistical perspective, the indiscriminate inclusion of conditioning variables that are not associated with the potential outcomes will decrease the efficiency of causal effect estimators, even if ignorability is satisfied (Hahn, 1996 (Hahn, , 2004 . Substantive knowledge should play a prominent role in guiding which variables should be retained for conditioning, with an eye toward selecting multiple variables from heterogeneous domains (Steiner, Cook, Li, & Clark, 2015) . However, especially when the number of candidate variables is large and/or the theory is weak, data-driven approaches may serve as a useful complement to theory-based variable selection.\nIn this paper, I develop a computationally feasible algorithm for nonparametric conditional independence testing that is particularly useful for variable selection in the context of estimating 1 While the predictors in a propensity score or outcome model are not of primary interest when estimating an average causal effect, they are important for a number of reasons relevant to interpretation and communication of results such as balance checking and reporting, detecting effect heterogeneity and estimating conditional average treatment effects, and characterizing units deleted for considerations regarding lack of overlap. causal effects by conditioning. The algorithm, implemented in R package rfvarsel (to be submitted to CRAN), is designed to select important predictors through conditional independence testing based on permutation of conditional random forest variable importance.\nFollowing description of the algorithm, it is tested through Monte Carlo simulations, which reveal that it performs well (a) in selecting important variables in its naive implementation even when the relationships between predictors and outcome are nonlinear and (b) in reducing bias and variability when paired with a variety of causal effect estimators. The algorithm is then applied to causal effect estimation in a large-scale educational data set, and some connections are made between the case study findings and expectations based on simulation results and theoretical considerations. The paper concludes with some discussion."}, {"section_title": "Theoretical Framework", "text": "Let T i be the dichotomous exposure indicator and let Y 0 i and Y 1 i represent the potential outcomes for unit i in the event that T i = 0 or 1, respectively. For notational convenience, I will suppress the index i going forward. I define variable selection as the process by which a subset of predictor variables X S \u2282 X is identified with the aim of satisfying unconfoundedness. That is,\nTo estimate an average treatment effect with a conditioning strategy, one or both of Pr (T | X) or Y j | X, T = j for j \u2208 {0, 1} may be modeled. Although many data-driven approaches to variable selection have been proposed for causal inference applications, I use the framework proposed by de Luna, Waernbaum, and Richardson (2011) herein because it is aligned with the definition of variable selection given above, and provides theoretical guarantees regarding identification of the average causal effect.\nIt has been shown both analytically (Battacharya & Vogt, 2007) and through simulation (Austin, Grootendorst, & Anderseon, 2007; Brookhart et al., 2006 ) that conditioning on treatment-only predictors (i.e., instrumental variables; IVs) can decrease the efficiency of propensity score-based estimators, while conditioning on outcome-only predictors can increase efficiency. Furthermore, conditioning on an IV or a collider variable can amplify bias (Steiner & Kim, 2016; Battacharya & Vogt, 2007; Wooldridge, 2009; Pearl, 2010) . Although de Luna et al.\n(2011) proposed a number of target subsets for variable selection, I focus on the subset they refer to as X Y , because outcome-only predictors are retained in X Y , which, when conditioned on, result in more efficient estimation of average causal effects (Persson, H\u00e4ggstr\u00f6m, Waernbaum, & de Luna, 2017; H\u00e4ggstr\u00f6m, 2018) . The procedure for selecting X Y is carried out as follows.\nStep 1. For j \u2208 {0, 1}, define X j \u2286 X of minimum cardinality such that\nwhere X \\ X j denotes the set of predictors that are in X but not in X j .\nStep 2. Let X Y = X 0 \u222a X 1 .\nIf ignorability holds with X, conditional independence of T and {Y 0 , Y 1 } will also hold with X Y (de Luna et al., 2011) .\nAs an example, consider the graphical models for the potential outcomes, Y 0 and Y 1 , displayed in Figure 1 . To apply the algorithm, begin with the model for Y 0 and find the subset, X 0 , of minimum size such that Y 0 is conditionally independent of all variables not in X 0 , given the variables in X 0 . Note that the fact that the algorithm also calls for conditioning on T = 0 implies that it may be used with observed data because, for example, Y 0 i is only observed for units that also have T i = 0. Here, the minimum subset is X 0 = {X 3 , X 4 , X 6 }. Repeat the process for Y 1 , and find that X 1 = {X 3 , X 4 , X 5 }. Finally, X Y = X 0 \u222a X 1 = {X 3 , X 4 , X 5 , X 6 }. Figure 1 . Directed acyclic graphs for potential outcomes Y 0 , and Y 1 ."}, {"section_title": "Random Forests and Variable Importance", "text": "The X Y variable selection procedure is expressed with nonparametric statements of conditional independence. To maintain freedom from parametric and functional form assumptions, a method for conditional independence testing that relies on minimal assumptions is also desired. Random forests are useful because they are based on regression trees (Breiman, Friedman, Olshen, & Stone, 1984) , which nonparametrically handle higher-order interactions and non-linear relationships.\nA single regression tree yields a rather noisy fit to the data. Let B (s) represent the set of OOB cases for tree s. Using notation motivated by Strobl and Zeiles (2008) , the variable importance for predictor X j for regression tree s \u2208 1, . . . , ntree may be defined as follows:\nwhere\u0176 (s) i is the predicted value for unit i before and\u0176 (s) i,\u03c0 j is the predicted value after permuting the values of X j . The variable importance for predictor X j is the average, taken over trees in the random forest.\n(3)\nThe importance method described in Equations 2 & 3 will be referred to as traditional RF permutation importance. A problematic feature of the traditional permutation scheme is that variables may attain a high level of importance either for their relationship with the outcome Y , or for their relationships with other predictor variables that are related to the outcome.\nTraditional permutation importance cannot, therefore, disentangle marginal association between predictor and outcome from conditional association given the other predictors.\nConditional Permutation Importance Strobl, Boulesteix, Kneib, Augustin, and Zeileis (2008) proposed conditional permutation importance to disentangle marginal and conditional relations. For each regression tree in the random forest and for a given predictor variable, X j , the idea is to isolate the predictive power of X j for Y by permuting X j within fixed levels of the other predictors, X \\ X j . For example, suppose there are three predictors, i.e., X = {X 1 , X 2 , X 3 }, such that X 1 is measured on a continuous scale and X 2 and X 3 are dichotomous. Assuming enough observed cases, one could randomly permute the values of X 1 within the four subgroups defined by the other two predictors: X 2 = 1, X 3 = 1; X 2 = 1, X 3 = 0; X 2 = 0, X 3 = 1; and X 2 = 0, X 3 = 0. This approach would break the association between X 1 and the outcome, as desired. However, by permuting X 1 within categories based on the levels of X 2 and X 3 , any predictive power carried by X 1 based solely on its association with the other predictors would still be present after permutation.\nBecause importance of X 1 is defined as the difference in OOB MSPE before and after permutation, the conditional importance of X 1 in this case would reflect the unique contribution of X 1 to the reduction in OOB MSPE after conditioning on X 2 and X 3 : the portion not unique to X 1 would be differenced out.\nWith more than a handful of predictors, sparsity due to the \"curse of dimensionality\" renders the exact approach implausible. In place of exact conditioning, one could condition on any balancing score (cf. Rosenbaum & Rubin, 1983) for the target predictor. For example, if the target predictor (i.e., the one to be permuted) is dichotomous, it may be permuted within strata based on the propensity score estimated by regressing the target predictor on the remaining predictors. For continuous or multicategory variables, generalized versions of the propensity score could be used (e.g., Fong, Hazlett, & Imai, 2018) . The approach suggested by is to permute within subgroups based on the random forest regression tree splits. This latter approach has the benefit of being fully nonparametric."}, {"section_title": "Regression Trees", "text": "A regression tree is an algorithmic tool invented by Breiman et al. (1984) that models the relationship between a continuous outcome variable, Y , and predictors, X 1 , . . . , X p , by iteratively splitting the data into subgroups based on predictor values. Every split creates two subgroups, called nodes, and any node that is unsplit is called a terminal node or leaf node. The tree-predicted value for each member of a node is simply the mean outcome score for all units in that node. Thus, for unit i in terminal node t, where N t represents the set of units in t, and |N t | represents the number of units in t, the tree-predicted value for unit i i\u015d\nThe adequacy of a regression tree fit may be measured by the deviance, defined for tree S as the sum of squared prediction errors, or by the closely related mean squared prediction error (MSPE):\nAt each iteration, the tree-fitting algorithm considers every possible split on every variable, and the single split that results in the largest decrease in deviance is selected. If left unchecked, regression trees will continue to split until each terminal node contains only one unit, yielding a perfect fit to the data. A typical approach to prevent overfitting is to fit a complex tree and then \"prune\" it by dropping nodes according to a regularized solution based on adding a term to the deviance that penalizes additional nodes (see, e.g., Hastie, Tibshirani, & Friedman, 2009 or Venables & Ripley, 2002 for details). The value of the penalty term coefficient is typically chosen by cross validation. See Appendix A for an example in which regression trees are applied to ECLSK data."}, {"section_title": "Nonparametric Conditional Independence Testing", "text": "A test of conditional independence, as opposed to one that fails to distinguish between marginal and conditional association, is particularly important for variable selection in causal inference applications. Consider the example depicted in Figure 2 , where T is the dichotomous assignment, Y 0 is the potential outcome under T = 0, X 1 is a treatment-only predictor, X 3 is an outcome-only predictor, X 6 is a confounding variable, and X 5 is a collider variable on the\nhowever, that X 5 is marginally associated with Y 0 through X 4 . Furthermore, the path\nwhich is blocked at T , becomes unblocked when T is conditioned on, rendering X 1 marginally associated with Y 0 . Thus, in this case, if tests of marginal (as opposed to conditional) independence are used, two spurious variables, the instrument, X 1 , and the collider, X 5 , are incorrectly retained. Figure 2 . If tests of marginal, rather than conditional, independence are used to determine X 0 with this directed acyclic graph, X 1 and X 5 are incorrectly retained."}, {"section_title": "Permutation Testing with RF Permutation Importance", "text": "Permutation testing provides a useful framework for nonparametrically testing individual variables based on RF importance measures. Rodenburg et al. (2008) used permutation of traditional RF permutation importance for variable selection and Altmann, Tolo\u015fi, Sander, and Lengauer (2010) summarized the approach, which can be described in four steps.\nStep 1. Fit a random forest to calculate baseline importance for all predictors.\nStep 2. Create R permuted copies of the predictor matrix, X 1 , X 2 , . . . , X R by randomly shuffling rows.\nStep 3. Run a random forest for each of the R replicates to generate R importance estimates for each variable.\nStep 4. Compare each variable's baseline importance to its permutation distribution;\nEach variable that exceeds the (1\u03b1) percentile is retained.\nThe permutation approach operationalized in Steps 1 through 4 does not provide a test of conditional dependence for each predictor variable. There are two potential solutions to correct the procedure so that it provides tests of conditional independence between predictors and outcome, as desired. The first, proposed by Hapfelmeir and Ulm (2013) , is to modify Steps 2 and 3 as follows, where p is the number of predictors:\nStep 2 . For each j in {1, 2, . . . , p}, create R copies of the predictor matrix by only shuffling the values of X j .\nStep 3 to X j given X \\ X j .\nI use this latter approach, and build up conditional RF permutation importance as follows:\n1. Fit a random forest to the un-permuted data with ntree trees and compute OOB MSPE.\n2. For each tree in the random forest, (a) For j in {1, 2, . . . , p}, fit a regression tree with X j predicted by X \\ X j , and create a grouping factor, Z j that assigns each unit a group number based on terminal node membership.\ni,\u03c0 j |Z j denote the tree-predicted value for unit i in tree s after permuting the values of X j within the levels of the factor Z j . The tree-specific importance for each variable is determined as in Equation 2, except that\u0176\nreflecting that shuffling is now conditional on the grouping factor Z j .\n3. The overall conditional RF importance for X j is the average over all trees, as in Equation 3. The calculation of conditional RF importance requires significantly more computational time than the calculation of traditional RF importance. To reduce overall runtime, permutation testing with conditional RF importance is implemented only after first dropping predictors based on permutation testing with traditional RF importance. In this way, predictors that have no marginal association with the potential outcomes are dropped quickly, thereby reducing the dimension of the space over which conditional RF importance is run."}, {"section_title": "Simulation Studies", "text": "To my knowledge, the only other non-parametric approaches that have been studied for conditional independence testing within the X Y framework are kernel smoothing and Bayesian networks under discrete mutual information. The kernel smoothing method, described in Persson et al. (2017) and available in package CovSel (H\u00e4ggstr\u00f6m, Persson, Waernbaum, & de Luna, 2015) , is computationally demanding. I implemented kernel smoothing with the ECLSK data but the algorithm had not moved past the first of five \"multistarts\" after 24 hours running on a mid 2012 Mac Pro with 2 \u00d7 3.06 GHz 6-Core Intel Xeon processors and 40 GB RAM, so it was abandoned. Gaussian Bayesian networks (GBNs) use mutual information based on Gaussian log-likelihoods for conditional independence testing, so there is an implicit assumption that relationships between variables are linear. H\u00e4ggstr\u00f6m (2018) proposed the use of Bayesian networks with tests of conditional independence based on discrete mutual information (Cover & Thomas, 2006) . To avoid Gaussian distributional assumptions, the method requires that all continuous variables be discretized. H\u00e4ggstr\u00f6m (2018) found that discrete Bayesian networks resulted in accurate variable selection for large samples for both linear and nonlinear data-generation processes."}, {"section_title": "Variable Selection and Effect Estimation", "text": "Simulation studies were planned for four data-generation processes, each based on 100 replications, to probe the performance of the conditional RF importance permutation approach (RFC) relative to three other methods for high-dimensional variable selection: traditional RF importance under permutation (RFT), Gaussian Bayesian networks run in package bnlearn (Scutari, 2010; GBN) , and H\u00e4ggstr\u00f6m's (2018) implementation of discrete Bayesian networks from packege CovSelHigh (H\u00e4ggstr\u00f6m, 2017; CSH) . Both RFC and RFT were implemented in package rfvarsel. The first outcome evaluated for each of the four data-generation processes was each algorithm's accuracy in selecting the variables in the subset X Y with data sets of size N = 500, N = 2000, and N = 5000. Then, given the 100 subsets actually selected by each algorithm for each sample size, four different methods to estimate average treatment effects were used to explore the impact of variable selection on bias and efficiency.\nFirst, propensity score analysis was run with propensity scores estimated by generalized boosted regression models via package twang (Ridgeway, McCaffrey, Morral, Ann, and Burgette (2015) ; GBM). Second, propensity score analysis was run with propensity scores estimated by the covariate balancing propensity score via package CBPS (Fong, Ratkovic, Hazlett, & Imai, 2015; Imai & Ratkovic, 2014) . For both propensity score methods, the average treatment effect was estimated by inverse propensity weighting. Third, Bayesian additive regression trees (BART)\nwere run in package bartMachine (Kapelner & Bleich, 2016) . For a given data set, BART was used to estimate the average causal effect by running a single BART model regressing the outcome on predictors and the treatment indicator. Potential outcomes were then imputed using predicted values, and the average difference in imputed potential outcomes was reported as the estimate of the average causal effect. Fourth, targeted maximum likelihood estimation (TMLE) was used in conjunction with BART via package tmle (Gruber & van der Laan, 2012; van der Laan & Gruber, 2010) . BART was used to estimate propensity scores and impute potential outcomes, which were then passed to TMLE to create a doubly robust estimator.\nFor variable selection, performance was measured by the proportion of replications for which variables in the target set, X Y , were correctly identified, and by the frequency with which variables outside the target set were incorrectly retained. For causal effect estimation, performance was measured by average absolute bias and simulation standard deviation, defined as follows,\nwhere \u03c4 is the overall population average treatment effect,\u03c4 r is the estimate based on the rth replication, and\u03c4 is the average of the estimates over the R total replications."}, {"section_title": "Data Generation", "text": "The data-generating processes (DGPs) for Y 0 are displayed graphically in Figure 3 ; the DGPs for Y 1 were identical with the exception of a constant treatment effect of 0.5 units. For the linear case, X 1 , X 2 , and X 3 have a direct linear effect on both the exposure indicator T and the potential outcome, Y 0 ; X 4 and X 6 have a direct linear effect only on T ; X 5 and X 7 have a direct linear effect only on Y 0 ; and X 8 through X 100 are noise. X 1 , X 6 , X 7 , and half the noise variables were simulated as dichotomous. The remaining variables were simulated as standard normal. The outcome model coefficients were set to 1.0, which yielded semi-partial correlations with the outcome of .2 for dichotomous variables and .4 for continuous variables, which correspond roughly with Cohen's (1988) guidelines for moderate effect sizes for Pearson correlations. Propensity score model coefficients were set to log(2) \u2248 0.69, so that a one unit increase in each predictor was associated with a doubling of the odds of assignment to the exposed group. exposure and potential outcomes only through their interactions, denoted by filled circles in Figure 3 . The third DGP is identical to the linear case with the exception that X 8 is a collider variable on the back door path from T \u2190 X 6 \u2192 X 8 \u2190 X 7 \u2192 Y 0 . The fourth DGP combines the nonlinear and collider cases. For all DGPs in Figure 3 , X Y = {X 1 , X 2 , X 3 , X 5 , X 7 }. Motivating considerations for the four data-generating processes are related to expected differences in performance across the methods with respect to variable selection and estimation accuracy and precision. Considerations for variable selection:"}, {"section_title": "-Linear 2 -Nonlinear", "text": ""}, {"section_title": "-Collider 4 -Nonlinear and Collider", "text": "1. All methods are expected to perform well when the data-generating process is linear."}, {"section_title": "Methods based on RF importance should outperform GBNs and CSH in correctly", "text": "identifying variables involved in nonlinear relationships with the potential outcomes. GBNs use mutual information based on Gaussian log-likelihoods for conditional independence testing, so there is an implicit assumption that relationships between variables are linear.\nThe CSH algorithm is based on the discrete version of mutual information, which does not assume linearity. However, because continuous variables must be discretized, information loss will likely result in less sensitivity to detect relationships that will be especially noticeable for small to moderate sample sizes.\n3. RFT, which is the only method of the four that fails to distinguish marginal from conditional independence, will fail to eliminate collider variables because they are marginally associated with the potential outcomes.\nConsiderations for estimation precision and accuracy:\n1. IVs and noise variables decrease precision of estimation when conditioned on; thus, all methods are expected to perform more poorly with respect to finite sample bias and efficiency when all 100 predictors are included, relative to when only the target set X Y is included.\n2. Conditioning on an IV or a collider variable has the potential to amplify bias; thus, large biases are expected in cases where the incorrect retention of an instrument or collider co-occurs with the incorrect omission of key confounding variables."}, {"section_title": "Results -Variable Selection", "text": "Variable selection results are shown in Table 4 . The bars represent the proportion of 100 replications that included each variable from X 1 to X 8 . Solid bars are used to denote variables that are part of the target subset X Y ; striped bars denote variables that were incorrectly retained. The numbers reported in the rows labeled \"D\" and \"C\" give the total number of noise variables (X 9 through X 100 ) retained across all replications for dichotomous and continuous predictors, respectively. For example, adding together the values 6 and 7, reported for GBN for the linear DGP, the combined rate of noise retention was 13/9200, where the number 9200 represents the total number (100 replications \u00d7 92 noise variables) of opportunities to retain noise variables for each cell of the simulation design.\nThe overall patterns of results are largely as expected. First, note that GBN performs remarkably well when relationships are linear (either with or without a collider variable), and very poorly when relationships are nonlinear. For the nonlinear DGPs, IVs X 4 and X 6 were selected with increasing frequency as sample size increased. This is expected because when the nonlinear terms X 2 and X 3 are incorrectly omitted and T is conditioned on, as required by Equation 1, paths from {X 4 , X 6 } \u2192 T \u2190 {X 2 , X 3 } \u2192 Y 0 become unblocked, and the resultant associations are detected with more sensitivity at higher sample sizes. As expected, RFT failed to exclude the collider variable X 8 . An increase was observed in the incorrect frequency of inclusion of X 4 and X 6 for RFT as sample size increases, likely due to marginal associations induced between the IVs and the potential outcomes due to conditioning on T .\nThe RFC method performed well across all scenarios. For the moderate and large sample size conditions, with N = 2000 and N = 5000, RFC correctly retained variables in X Y in 100% of replications across all four data-generation scenarios. Comparing the results for the third and fourth DGPs across RFT and RFC, it is clear that the use of conditional RF importance permitted RFC to eliminate the IVs and collider that were incorrectly retained by RFT. For N = 500, RFT was more sensitive than RFC in correctly retaining important predictors in all scenarios (e.g., 89% vs 81% for X 1 with the linear DGP) 2 . RFC was uniformly more sensitive than CSH across all four DGPs, though CSH selected a lower proportion of IVs and colliders for some DGPs (e.g., 0% vs 5% for X 8 with the fourth DGP with N = 2000).\nVariable selection results are shown in Table 1 . Of 34 potential predictors, 12 were retained by GBN, 10 by RFT, 8 by RFC, and 5 by CSH. The five variables selected by CSH were also selected by all other methods. Because these data were not simulated, the true value of the treatment effect is not known. Nevertheless, patterns in the variable selection results correspond with expectations based on theory and simulation results. For example, RIRT (kindergarten reading score) was dropped by all methods except RFT. Recall that RFT is the only method of the four that fails to discriminate between conditional and marginal dependence. The marginal linear relationship between RIRT and MIRT (kindergarten math score) is quite strong, with an estimated Pearson correlation of .71. It is plausible that the impact of RIRT on the outcome, 5th\ngrade math score, although marginally very strong, was conditionally weak after accounting for MIRT, which would explain why it was dropped by the other algorithms. Another example involves P1FIRKDG (an indicator for first time in kindergarten) and P1AGEENT (child's age when starting kindergarten); both were selected by the RF procedures but not by GBN nor by CSH. Based on exploratory linear regression modeling, it is found that P1FIRKDG and P1AGEENT are involved in highly significant and strong two-way interactions. The forest-based methods may have picked up on these variables because of their strong nonlinear relationships with the outcome."}, {"section_title": "Results -Estimation", "text": "In addition to variables selected by GBN, RFT, RFC, and CSH, the cases of no variable selection (ALL) and correct selection of the target set X Y were also considered. In every cell of the design and across all estimation methods, the absolute bias based on conditioning on all 100 predictors (ALL) was larger than the bias due to conditioning only on the target set, X Y . Relative to no variable selection, RFT and RFC always helped. The results for GBN and CSH were mixed, with substantial bias reduction for linear scenarios but potential for poor bias reduction or even bias inflation when coupled with nonlinear DGPs. For N = 500, variable selection with CSH lead to bias increases in some cells due to lack of sensitivity.\nPerformance with CSH improved markedly for larger sample size conditions.\nThe variability of estimators after variable selection, as measured by simulation standard deviation, contributed relatively little to the RMSE; nevertheless, there were some trends with respect to variability. After variable selection with CSH, nonparametric estimators (i.e., BART, TMLE with BART, and propensity score analysis with GBM) were associated with larger variances. As an example, consider the interaction DGP at N = 5000. For that cell of the design, 91 of 100 replications led to estimates between 0.4 and 0.6 (the true value was 0.5) but the remaining nine estimates were larger than 1.0. In those nine cases, the CSH procedure had resulted in the incorrect omission of either X 2 , X 3 , or both. GBN, on the other hand, performed poorly with respect to variable selection for all 100 replications, which led to all 100 estimates being larger than 1.0, and, therefore, a tight spread around a biased value. \nAverage causal effect estimates and 95% confidence intervals are displayed in Figure 7 . For GBM and CBPS, 95% confidence intervals are based on sandwich standard errors from package survey (Lumley, 2004) ; for TMLE, asymptotic intervals produced by the tmle package are reported; for BART, intervals were calculated using a nonparametric bootstrap (percentile method) based on 50 replications. The naive, unadjusted estimate of the average causal effect of special education services on fifth grade math achievement is -19.2 points, with 95% confidence interval given by (-21.5, -17.0) .\nAdjusting for all 34 covariates drastically and significantly reduced the estimated average effect to between -5.4 and -1.8, depending on the estimation method, with three of the four 95% confidence intervals excluding zero and, thus, still suggesting a significant negative impact of exposure to special education services on 5th grade math achievement. Conditioning only on variables selected by GBN gave estimates between -5.0 and -3.6, also with three of four intervals excluding zero. Conditioning on variables selected by CSH yielded estimates between -6.4 and -3.8, with all intervals excluding zero. The use of RFT lead to estimates between -2.4 and 0.1, with only one interval that excluded zero. Estimates based on RFC were between -3.8 and -1.6 with two of four intervals excluding zero.\nThere are no randomized experimental results to use as benchmarks for comparison because of obvious ethical issues. Without recourse to the true causal effect it is not possible to say which methods were most unbiased. Nevertheless, it is interesting to note that the two RF-based methods tended to produce estimates closer to zero than any of the other methods, including conditioning on all 34 available predictors. Figure 7 . ECLSK case study results including average treatment effect estimates (points with cross-hairs) and 95% confidence intervals for the effect of special education services on math achievement in fifth grade. For effect estimation: GBM = propensity score analysis via generalized boosted modeling, CPBS = propensity score analysis via covariate balancing propensity score, TMLE = targeted maximum likelihood, BART = Bayesian additive regression trees. For variable selection: ALL = no variable selection, GBN = Gaussian Bayesian networks, RFT = permutation testing with traditional RF permutation importance, RFC = permutation testing with conditional RF permutation importance, CSH = discrete Bayesian networks."}, {"section_title": "Case Study", "text": "In this section, variable selection methods are applied to ECLSK data to estimate the average causal effect of exposure to special education services on math achievement in fifth grade.\nThe data set, which is described in greater detail in Keller and Tipton (2016) , includes variables motivated by Morgan, Frisco, Farkas, and Hibel (2010) , who examined the effect of student exposure to special education services on later social and academic outcomes. There are 429 exposed cases and 6933 comparison cases; the outcome variable and 34 potential predictor variables are summarized in Table A1 . Note that these analyses are mean to be illustrative; resultant estimates should not be interpreted as robust estimates of the causal effect."}, {"section_title": "Discussion", "text": "By using conditional RF importance in a permutation testing approach, one gets the best of both worlds: (a) a non-parametric variable selection algorithm that automatically handles nonlinear relationships and (b) one that tests the null hypothesis of conditional independence that is typically desired for causal applications. RF permutation methods were compared with Gaussian Bayesian networks and discrete Bayesian networks (CSH) through simulation and in a case study. Unlike GBN, which may fail to detect nonlinear relationships no matter the sample size, CSH is model free and has ideal properties in the limit. What the simulation results underscore, however, is that for small to moderate sample sizes, RF-based algorithms can be more powerful, especially for detecting nonlinear relationships.\nA general limitation with any variable selection method is related to the potential to drop weak confounding variables due to lack of sensitivity. This could be problematic in a situation in which there are many very weak confounders that, in aggregate, reduce a non-trivial amount of bias, but individually are too weak to be detected. The simulations show that sensitivity increases as sample size increases, as expected. Nevertheless, future work that more specifically addresses sample size and effect size considerations would be useful.\nThere are two limitations associated specifically with RF permutation methods for variable selection. First, RFT and RFC take more time to run than GBN or CSH because permutation approaches are computationally expensive. Second, as is typically the case with nonparametric methods, if parametric and functional form assumptions are tenable, methods such as GBN that capitalize on those assumptions will have slightly better finite-sample properties. This second point is not a strong limitation, however, because data-driven variable selection, especially with high-dimensional data, is typically used precisely because there is no strong theory regarding how variables are related. Furthermore, the consequences of incorrectly making strong functional form assumptions can be dire, as seen in the biases associated with GBN in nonlinear scenarios.\nAs expected, RFC correctly eliminated collider variables and instrumental variables that were incorrectly retained by RFT. The implications for bias, however, were generally modest, with relatively small gains in accuracy for RFC over RFT. From a causal perspective, the inclusion of a collider variable (like X 8 in simulations 3 and 4) will only cause a problem in terms of identification of the average causal effect if the backdoor path from T to the potential outcome is not blocked some other way. Given that ignorability was assumed with the complete set of predictor variables, RFT will also identify the variable that joins the collider to the potential outcome (X 7 in simulations 3 and 4), thereby blocking the confounding effect of including the collider. Differences in finite sample bias associated with RFC and RFT may be more drastic in situations in which ignorability is not satisfied given the observed pretreatment variables X, but such cases were not investigated; it would be an interesting topic for future research.\nWith respect to the simulation standard deviations, shown in Figure 6 , the simulation SDs appear to be tied to the variable selection results via the bias; higher variability occurs in tandem with higher bias and poorer variable selection accuracy. This raises questions about the need to account for variability due to the variable selection procedure in confidence intervals and standard errors. The most straightforward methods to do so involve resampling, which, unfortunately, compounds computational time.\nNote that RFC is an explicit method for variable selection. That is, the RFC procedure is designed be used as a pre-processing step to select important variables for further analyses. This is in contrast to methods that select variables implicity by upweighting important variables and downweighting unimportant ones on the fly. Some examples of methods that do implicit variable selection are penalized versions of regression such as ridge, lasso, and elastic net (Hastie et al., 2009 ) and all methods based on regression trees, which, as described in Appendix A, only make use of variables that maximize prediction when splitting. BART and GBM are both based on regression trees and, therefore, do variable selection implicitly by only splitting on important variables. Nevertheless, the use of RFT and RFC for variable selection always led to less bias than using the full set of variables with BART and GBM for the simulated data sets examined herein. As is the case with any simulation study, however, it is not appropriate to make strong generalizations to data scenarios that are very different.\nExpert substantive knowledge and results from prior literature should take precedence in guiding the selection of important conditioning variables in an attempt to satisfy the ignorability assumption. However, there are bound to be variables, a large majority in some cases, for which the theory is weak. It is precisely for variables for which the theory is weak that questions about conditional independence and functional form relationships are likely to be unanswered.\nSimulation results discussed herein confirmed that dropping instrumental variables, colliders, and spurious noise variables prior to causal effect estimation improved finite sample behavior. The RFC algorithm performed well in both an absolute sense and relative to other methods for data-driven variable selection across a variety of conditions. Importantly, no tuning is required;\nRFC handles nonlinear relationships and interactions in its naive implementation.\nAppendix A Table A1   Table A1 Variable Names, Descriptions, and Standardized Mean Differences (d) "}, {"section_title": "Appendix B", "text": "A Regression Tree Example with ECLSK Data\nIn the ECLSK data set, there are 429 exposed cases (i.e., students that received special education services) and 6933 comparison cases (i.e., students that did not receive special education services).\nHere a regression tree will be fit to the 429 exposed cases using package rpart in R. The first step is to install and then load the rpart package.\nR> install.packages(\"rpart\")"}, {"section_title": "R> library(rpart)", "text": "Next, prepare the data. eclsk is the name of the data frame that contains the outcome, C6R4MSCL, the exposure indicator, F5SPECS, and 34 additional predictors. The data are then subsetted to only use the exposed cases (i.e., cases with F5SPECS value of 1)."}, {"section_title": "R> eclsk_exposed <-eclsk[which(eclsk$F5SPECS == 1), ]", "text": "Then, since this will result in a subset for which the F5SPECS variable is 1 for all cases, that variable is dropped from the data frame.\nR> eclsk_exposed <-eclsk_exposed[, -which(names(eclsk) == \"F5SPECS\")]\nNow the regression tree algorithm may be run.\nR> rpart1 <-rpart(formula = C6R4MSCL~., R> data = eclsk_exposed, R> control = rpart.control(minsplit = 50, cp = .005))\nThe period on the right side of the formula specifies that the outcome, C6R4MSCL, is to be predicted by all remaining variables in the data frame. The minsplit value is the minimum number of cases required in a node for a split to be attempted. Thus, nodes with fewer than minsplit cases are terminal. Setting minsplit to a larger value is one way to prevent overfitting.\nThe cp value is a complexity parameter that saves computational time by not considering splits that decrease overall misfit by cp. Setting cp to a lower value will trigger a more fine-grained cross-validation table at the expense of more computational time.\nlowest cross-validated error. The dashed horizontal line is drawn one SE above the minimum of the curve. In practice, especially with larger data sets, better predictive performance may be attained by selecting the first value of cp that is below the horizontal line, even if it is not the minimum. Figure B1 . Cross validation plot for the regression tree error for ECLSK exposed cases\nHaving selected cp = .019, a pruned tree is then created. The output follows. Figure B2 . Regression tree plot for ECLSK exposed cases after pruning"}, {"section_title": "R>", "text": ""}]