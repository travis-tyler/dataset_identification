[{"section_title": "Abstract", "text": "Diffusion magnetic resonance imaging is a medical imaging technology to probe anatomical architectures of biological samples in an in vivo and non-invasive manner through measuring water diffusion. It is widely used to reconstruct white matter fiber tracts in brains. This can be done in several steps. Typically, the first step is to estimate the diffusion direction(s) for each voxel of the biological sample under study by extracting the leading eigenvector from the estimated diffusion tensor at each voxel. As it is reasonable to assume that the diffusion directions from neighboring voxels are similar, a local smoothing may be applied to the estimated tensors or directions to improve the estimation of diffusion directions. Finally, a tracking algorithm is used to reconstruct fiber tracts based on (estimated) diffusion directions.\nMost commonly used tensor estimation methods assume a single tensor and do not work well when there are multiple principal diffusion directions within a single voxel. The first contribution of this paper is the proposal of a new method which is able to identify and estimate properties. Lastly this paper develops a novel fiber tracking algorithm which takes (estimated) diffusion directions as input and accommodates multiple directions within a voxel. The overall methodology is illustrated with data sets collected for the study of Alzheimer's disease."}, {"section_title": "Introduction", "text": "Diffusion magnetic resonance imaging (dMRI) is a medical imaging technology that uses magnetic field gradients to measure water diffusion on a three-dimensional (3D) grid of biological tissue along a set of predetermined directions (Bammer et al., 2009; Beaulieu, 2002; Chanraud et al., 2010; Mukherjee et al., 2008) . In biological tissues, water diffusion is anisotropic due to the presence of fiber bundles with coherent orientations and thus anatomical structures can be deduced from the diffusion characteristics of water. Due to its in vivo and non-invasive nature, dMRI has been widely applied to delineate the white matter fiber tracts in human brain. Mapping white matter fiber tracts is of great importance in the study of neuronal connectivity and understanding of brain functionality (Mori, 2007; Sporns, 2011) .\nWater diffusion in any location in the brain is often modeled as a 3D Gaussian process. At each voxel, diffusion is described by a 3 \u00d7 3 positive definite matrix, which is referred to as a diffusion tensor; see Mori (2007) for an introduction to diffusion tensor imaging (DTI) techniques.\nOne then extracts the direction information from the estimated diffusion tensor (e.g., the principal eigenvector) at each voxel and reconstructs the white matter fiber tracts by computer aided tracking algorithms via a process named tractography (Basser et al., 2000) .\nHowever, DTI cannot resolve multiple fiber populations with distinct orientations (i.e., crossing fibers) within a voxel since a tensor only has one principal direction. In crossing fiber regions, estimated diffusion tensors may lead to low anisotropy estimation or oblate tensor estimation.\nPoor tensor estimation results in poor direction estimation which affects fiber reconstruction, e.g., early termination of the fiber tracking or biased fiber tracking.\nIn order to resolve intravoxel orientational heterogeneity, several approaches have been proposed. Tuch et al. (2002) propose a multi-tensor model which assumes a finite number of homogeneous fiber directions with a voxel and Gaussian diffusion along each direction. However, it has been shown that the parameters in the multi-tensor model are not identifiable (Scherrer and Warfield, 2010) . Nonparametric methods such as Q-ball and Q-space imaging have been proposed (Tuch, 2004; Descoteaux et al., 2007) . However such methods rely on high angular resolution diffusion imaging (HARDI) Hosey et al., 2005) where a large number of gradients is sampled (e.g., a few hundreds). Most currently available data sets, and particularly those obtained under clinical settings, have much less number of gradient directions (a few tens at most), rendering such methods not applicable.\nThe primary goal of this paper is to develop a new method for fiber detection and tracking that works exceptionally well in the presence of crossing fibers. Our method is completely automatic and improves existing methods in several aspects. Loosely, the method can be divided into the following three major steps.\nIn the first step, we estimate the tensor directions within each voxel under a multi-tensor model. We propose a new parametrization which makes the tensor directions identifiable. We develop an efficient and numerically stable computational procedure to obtain the global MLE of the tensor directions.\nOnce the tensor direction estimates are obtained for all individual voxels, in the second step, a direction smoothing procedure is applied to further improve the diffusion direction estimates by borrowing information from neighboring voxels. A distinctive and unique feature of this new procedure is that it handles crossing fibers through the clustering of directions into homogeneous groups. We note that, although various tensor smoothing methods have been proposed (e.g., Pennec et al., 2006; Arsigny et al., 2006; Fillard et al., 2007; Fletcher and Joshi, 2007; Yuan et al., 2012; Carmichael et al., 2013) , to the best of our knowledge, little work in the literature on direct diffusion direction smoothing. Since diffusion directions rather than tensors are used as input for tracking algorithms, methods on direction estimation and smoothing should be more efficient in terms of fiber tracking.\nIn the last step, a fiber tracking algorithm is applied to reconstruct fiber tracts through (smoothed) diffusion direction estimates. Our tracking algorithm is designed to explicitly allow for multiple directions within a voxel.\nIt is shown by extensive numerical studies that the proposed procedure is effective in direction estimation as well as fiber tracts reconstruction.\nThe rest of the paper is organized as follows. Section 2 provides background material for some common tensor models. The proposed methods for tensor direction estimation, smoothing of estimated directions, and fiber tracking are presented in, respectively, Sections 3, 4 and 5.\nTheoretical support for the direction smoothing method are presented in Section 6. The empirical performance of the overall methodology is illustrated with numerical experiments in Section 7 and with a real data set in Section 8. Section 9 provides some concluding remarks, while additional results and technical details are collected in an online supplementary."}, {"section_title": "Tensor models", "text": "Suppose dMRI measurements are made on N voxels on a three dimensional grid representing a brain. For each voxel, we have measurements of diffusion weighted signals (complex numbers) along a fixed set (i.e., the same for all voxels) of unit-norm gradient vectors U = {u i : i = 1, . . . , m}.\nBy assuming Gaussian additive noise on both real and imaginary parts of the signal, the observed signal intensity can be modeled as\nwhereS(s, u) is the intensity of the noiseless signal, \u03c6(s, u) is a unit vector in R 2 representing the phase of the signal, (s, u) is the noise random variable following N 2 (0, I 2 ) and \u03c3 > 0 denotes the noise level. The observed signal intensity then follows a Rician distribution (Gudbjartsson and Patz, 1995) :\nMoreover, we assume the noise (s, u)'s are independent across different voxels and gradient directions. We write the set of measurements as {S(s, u) : u \u2208 U }, where s is the three dimensional coordinate of the center of this voxel.\nAssuming Gaussian diffusion, the noiseless signal intensity is given by (e.g., Mori, 2007) \nwhere S 0 (s) is the non-diffusion-weighted intensity, b > 0 is an experimental constant referred to as the b-value and D(s) is a 3 \u00d7 3 covariance matrix referred to as the diffusion tensor. This model is called the single tensor model and suits for the case of at most one dominant diffusion direction within a voxel. To indicate the degree of anisotropy of the diffusion, one commonly used measure is the fractional anisotropy (FA),\nwhere \u03bb 1 , \u03bb 2 and \u03bb 3 are the eigenvalues of D. FA value lies between zero and one and the larger it is, the more anisotropic the water diffusion is at the corresponding voxel.\nAlthough the single tensor model is probably the most widely used tensor model in practice (implemented by most softwares for DTI), it is not suitable for crossing fiber regions. To deal with crossing fibers, this model has been extended to a multi-tensor model (e.g., Tuch, 2002; Behrens et al., 2003 Behrens et al., , 2007 Tabelow et al., 2012) :\nwhere J(s) j=1 p j (s) = 1 and p j (s) > 0 for j = 1, . . . , J(s). Here J(s) represents the number of fiber populations and p j (s)'s denote weights of the corresponding fibers.\n3 Voxel-wise estimation of diffusion directions One important goal of DTI studies is to estimate principal diffusion directions, referred to as diffusion directions hereafter, at each voxel. They may be interpreted as tangent directions along fiber bundles at the corresponding voxel. The estimated diffusion directions are then used as an input for tractography algorithms to reconstruct fiber tracts. This section explores the diffusion direction estimation within a single voxel. For notational simplicity, dependence on voxel index s is temporarily dropped. Moreover, for ease of exposition, we assume that \u03c3 and S 0 (s) are known and delay the discussion of their estimation to Section 8.\nUnder the single tensor model, various methods for tensor estimation have been proposed including linear regression, nonlinear regression and ML estimation; e.g., see Carmichael et al. (2013) for a comprehensive review. Then diffusion directions are derived as principal eigenvectors of (estimated) diffusion tensors. However, for the multi-tensor models, severe computational issues have been observed and additional prior information and assumptions are imposed to tackle these issues.\nFor instance, Behrens et al. (2003 Behrens et al. ( , 2007 use shrinkage priors and Tabelow et al. (2012) assume all tensors to be axially symmetric (i.e., the two minor eigenvalues are the same) and have the same set of eigenvalues. Scherrer and Warfield (2010) show that the multi-tensor model is indeed non-identifiable and they suggest to use multiple b-values in data acquisition to make the model identifiable. However, due to practical limitations, most of the current dMRI studies are obtained under a fixed b-value and so render their suggestion inapplicable. Below we show that the identifiability issue does not prevent one from estimating the diffusion directions and so neither strong assumptions nor special experimental settings are necessary if one is only interested in diffusion directions rather than the diffusion tensors themselves."}, {"section_title": "Identifiability of multi-tensor model", "text": "From Scherrer and Warfield (2010) , model (2) can be re-written as\nwhere a j > 0 for j = 1, . . . , J such that p j a j > 0, D j + (log a j /b)I 3 is positive definite and J j=1 p j a j = 1. When J = 2, one can easily derive the explicit conditions for a j to fulfill these criteria, and see that there are infinite sets of such a j 's. However, note that D j + (log a j /b)I 3 shares the same set of eigenvectors with D j . Thus, one may still be able to estimate diffusion directions, which correspond to the major eigenvectors of the tensors. This motivates us to consider estimating diffusion directions directly instead of the tensors themselves.\nNow we assume that D j 's are axially symmetric; that is, the two minor eigenvalues of D j are equal. This is a common assumption (Basser et al., 1994) for modeling dMRI data and it implies that diffusion is symmetric around the principal diffusion direction (here, the principal eigenvector) (Tournier et al., 2004 (Tournier et al., , 2007 . By not differentiating the two minor eigenvectors, we obtain a clear meaning of diffusion direction. In addition, this reduces the number of unknown parameters by one and thus facilities estimation. In the following, we propose a new parametrization of the multi-tensor model which is identifiable and thus can be used for direction estimation.\nWrite M as the space of the unit principal eigenvector, i.e., the three dimensional unit sphere with equivalence relation m \u223c \u2212m. Let \u03b1 j \u2265 0, \u03be j > 0 and m j \u2208 M be the difference between the larger and smaller eigenvalue, smaller eigenvalue and the standardized principal eigenvector of D j , respectively. Since\nwhere \u03c4 j = p j exp(\u2212b\u03be j ) \u2208 (0, 1). From the above, one can see that p j and \u03be j are not simultaneously identifiable, so we cannot estimate the tensors. However, the new parametrization \u03b3 = (\u03b3 1 , . . . , \u03b3 J )\nis identifiable, where \u03b3 j = (\u03c4 j , \u03b1 j , m j ) for j = 1, . . . , J, so that we can estimate the principal diffusion directions m j 's."}, {"section_title": "A fast and stable algorithm for ML estimation", "text": "To estimate the parameters in model (3), we start by investigating the standard ML estimation.\nUnder the Rician noise assumption, the log-likelihood of \u03b3 is:\nwhere I 0 (x) = \u03c0 0 exp(x cos \u03c6)d\u03c6/\u03c0 is the zeroth order modified Bessel function of the first kind (Abramowitz and Stegun, 1964) . The ML estimate is obtained through maximizing the loglikelihood function (4). Although the new parametrization avoids the identifiability issue, the likelihood function usually has multiple local maxima, which makes the computation of ML estimate difficult and unstable. Next we discuss a strategy to tackle this issue.\nIn attempt to find the global maximizer, we develop an efficient algorithm through an approximation of model (3). This algorithm essentially performs a grid search, but it makes use of the geometry of the problem so it is quite fast. It includes three major steps: (i) lay down a grid for (\u03b1 j , m j )'s, (ii) evaluate the likelihood function on the grid, and (iii) return the grid point that maximizes the likelihood function. One can then use this returned grid point as a starting value in a gradient method for obtaining ML estimation of Model (3). Such a strategy results in better numerical stability and accuracy in finding ML estimates."}, {"section_title": "An approximation of model (3)", "text": "Let c j = (\u03b1 j , m j ) , c = (c 1 , . . . , c J ) and C j be the set of grid points for c j . For simplicity, we take the same set of grid points, C, for all j. To lay down a grid for m j 's, we apply the sphere tessellation using Icosahedron, which is depicted in Figure 1 . Here, we only pick unique vertices up to a sign for the formation of the grid. In our implementation, we utilize randomly rotated versions of the tessellation with two subdivisions, which results in a grid with 321 directions. If\nwhere\nOne may notice that, in this reformulation, the non-zero\u03b2 k 's have an one-to-one correspondence with \u03c4 j 's in model (3). If c \u2208 C J , i.e. the set of parameters is not a grid point, then equation (5) serves as an approximation toS(u) in model (3) as long as the grid is dense enough in the parameter space.\nFurthermore, under the commonly used scales of b-values and tensors, x(u,m k ,\u03b1 k ) and x(u,m k ,\u03b1 k ) are highly correlated ifm k =m k . Inspired by this observation, we reduce the grid size by setting \u03b1 k =\u03b1 for all k to a common value\u03b1. From our experience, we set\u03b1 = 2/b. With all these approximations, we consider fitting the following model:\nwhere x k (u) = x(u,m k ,\u03b1) and \u03b2 k \u2265 0. For our purpose, we want to identify nonzero \u03b2 k 's because thosem k 's associated with non-zero\u03b2 k 's can be regarded as selected diffusion directions. Note that model (6) converts the expensive grid search to an estimation problem of a linear model (with respect to \u03b2 k 's) with non-negative constraints. A fast algorithm for fitting this model with Rician noise assumption is given in Section S1 of the supplementary material (SM). As it turns out, the non-negativity constraints often result in a sparse estimate of \u03b2 = (\u03b2 1 , . . . , \u03b2 K ) ; i.e., only a subset of directions is selected. In particular, if the estimate of the unconstrained problem (i.e., \u03b2 k 's are allowed to be negative) is not located in the first quadrant of the parameter space, the corresponding constrained solution will be sparse.\nEven though the solution is often sparse, the number of selected directions is usually larger than J, the true number of tensor components. This is partly due to colinearity of x k (u)'s resulting from the use of a dense grid on the directionsm k 's.\nIn the following, we propose to first divide the selected directions into I groups and then generate stable estimates of m j 's via gradient methods (Section 3.2.2). Finally, Bayesian information criterion (BIC) (Schwarz, 1978) is used to choose an appropriate I as the estimate for J (Section 3.3).\nFigure 1: Sphere tessellations through triangulation using Icosahedron with level of subdivisions:\n0 (Left), 1 (Middle) and 2 (Right)."}, {"section_title": "Clustering of the selected directions", "text": "Write the above ML estimate of\nwithout loss of generality, k = 1, . . . , L. Thus,m 1 , . . . ,m L are the selected directions. Now, we develop a strategy to cluster the selected directions into I groups, for a set of I \u2208 {1, . . . , L}. To perform clustering, we require a metric measure on the space of directions M. A natural metric is\nwhere u, v \u2208 M. Note that, d * (u, v) is the acute angle between u and v. With this distance metric, one can define dissimilarity matrix for a set of directions and make use of a generic clustering algorithm. Our choice is the Partition Around Medoids (PAM) (Kaufman and Rousseeuw, 1990) due to its simplicity. The detailed procedure is described in Algorithm S1 in the SM, where the input vectors are the selected directions. Due to the sparsity of\u03b2 j 's and efficient algorithms of PAM, this clustering strategy is practically fast. Letm 1 , . . . ,m I be the resulting group (Karcher) means.\nThey are used as the starting value for gradient-based methods, such as L-BFGS-B algorithm (Byrd et al., 1995) , for obtaining\u03b3(I), the ML estimate of \u03b3 under model (3) with I tensor components.\nMore specifically, the starting value is set as ((1/I,\u03b1,m 1 ), . . . , (1/I,\u03b1,m I )) ."}, {"section_title": "Selection of the number of tensor components J", "text": "We use BIC to select the number of components J. Under model (3), the BIC for a model with I components is\nwhere m is the number of gradient directions. Then J is chosen as\u0134 = argmin I\u2208{1,...,\u0128} BIC(I),\nwhere\u0128 is a pre-specified upper bound for the number of components. Based on our experience,\nIn practice, there are voxels with no major diffusion directions. Under single tensor model, the corresponding diffusion tensor is isotropic, i.e., all three eigenvalues are equal.\nIn the case of isotropic tensor, (3) reduces toS(u) = S 0 \u03c4 1 . Thus there is only one parameter \u03c4 1 . We write the corresponding likelihood function asl and denote the ML estimate of \u03c4 1 by\u03c4 1 , which can be obtained by a generic gradient method. The corresponding BIC criterion is\nwhere 0 represents no diffusion direction. Combined with the previous BIC formulation (8), one has a comprehensive model selection rule, which handles voxels with from zero to up to\u0128 (here 4) fiber populations. In practice, we follow the convention and use FA (1) (see, e.g., Mori, 2007) as a first step screening; i.e., we first remove voxels with small FA values and then apply the BIC approach over those suspected anisotropic voxels.\nWe summarize our voxel-wise estimation procedure in Algorithm S2 in the SM. A simulation study is conducted and the corresponding results are presented in Section S2 of the SM. These numerical results suggest that our voxel-wise estimation procedure provides extremely stable and reliable results under various model settings."}, {"section_title": "Spatial smoothing of diffusion directions", "text": "Although model (3) provides a better modeling than single tensor model for crossing fiber regions, it also leads to an increase in the number of parameters and thus the variability of the estimates.\nTo further improve estimation, we consider borrowing information from neighboring voxels and develop a novel smoothing technique for diffusion directions.\nTensor smoothing has been widely studied in the literature (Arsigny et al., 2006; Pennec et al., 2006; Yuan et al., 2012; Carmichael et al., 2013) . However, as discussed earlier, tensors are not identifiable in the multi-tensor model without additional assumptions. Moreover, if the ultimate goal is the reconstruction of fiber tracts, a good estimate of diffusion directions suffices. This motivates the proposal of the new direction smoothing method below.\nWe shall assume that tangent directions of fiber bundles change smoothly. This leads to the spatial smoothness of diffusion directions that belong to the same fiber bundle. In many brain regions, it is reasonable to model the fiber tracts as smooth curves at the resolution of voxels in dMRI (\u223c 2mm).\nHowever, there is one major challenge in diffusion direction smoothing. The smoothness assumption is only reasonable along the same fiber bundle. In regions with crossing fibers, the diffusion directions may belong to several different fibers which contribute to a mixture of populations of diffusion directions. To circumvent this issue, we propose to first cluster the diffusion directions within a neighborhood into separate homogeneous populations (Section 4.2) and then apply direction smoothing within each population (Section 4.1)."}, {"section_title": "Smoothing along a single fiber", "text": "This subsection assumes that there is only one homogeneous population of diffusion directions, which corresponds to a single fiber bundle. Let {{m j (s) : j = 1, . . . ,\u0134(s)} : \u2200s} be the estimated diffusion directions obtained from the above voxel-wise estimation procedure in Section 3. Further, write T = s\u0134 (s) and, by re-indexing, {m k : k = 1, . . . , T } = {{m(s) : j = 1, . . . ,\u0134(s)} : \u2200s}.\nAlso write s k as the corresponding voxel location associated withm k . Following the idea of kernel smoothing on Euclidean space (Fan and Gijbels, 1996) , the smoothing estimate at voxel s 0 is defined as a weighted Karcher mean of the neighboring direction vectors:\nwhere w i = K H (s i \u2212 s 0 )'s are spatial weights and the metric d * is defined in (7). These weights place more emphasis on spatially closer observations. Here\nas a three dimensional kernel function satisfying K(s)ds = 1, and H is a 3 \u00d7 3 bandwidth matrix.\nIn our numerical work, we choose K as the standard Gaussian density, and set H = hI 3 , where h is chosen automatically using the cross-validation approach described in Section S3 of the SM."}, {"section_title": "Smoothing over multiple fibers", "text": "As discussed earlier, the spatial smoothness assumption does not hold in a voxel s 0 with crossing fibers. To tackle this issue, we first apply clustering to estimated directions within a neighborhood of s 0 in an attempt to separate the direction vectors corresponding to different fiber populations into different clusters. Then we apply the smoothing procedure in the previous subsection within each direction cluster. This subsection describes this procedure in details.\nFirst we define neighboring voxels for s 0 . We begin with computing the spatial weights defined in Section 4.1. We then remove those voxels with weights smaller than a threshold. By filtering out these voxels, we obtain tighter and better separated clusters of directions. Moreover, such voxels have little effects on smoothing due to their small weights. The artificial data set displayed in Figure 2 provides an illustrative example. Every black dot in the left panel represents an estimated direction (from the center of the sphere). In the middle panel, the size of each dot is proportional to its spatial weight in equation (9). Lastly, the right panel shows all dots with spatial weights larger than a threshold. Notice that such a trimming operation leads to two obvious clusters of directions, which makes the subsequent task of clustering the estimated directions much easier.\nNext we utilize the same clustering strategy developed in Section 3.3 to choose the number of clusters adaptively by the average silhouette (Rousseeuw, 1987) ; see Algorithm S3 of the SM. The silhouette of a datum i measures the strength of its membership to its cluster, as compared to the neighboring cluster. Here, the neighboring cluster is the one, apart from cluster of datum i, that has the smallest average dissimilarity with datum i. The corresponding silhouette is defined\n, where a i and b i represent the average dissimilarities of datum i with all other data in the same cluster and that with the neighboring cluster respectively. The average silhouette of all data gives a measure of how good the clustering is. Thus we select the number of clusters via maximizing the average silhouette.\nThe detailed smoothing procedure is given in Algorithm 1."}, {"section_title": "Fiber tracking", "text": "For dMRI, fiber tractography can be divided into deterministic and probabilistic methods. Deterministic methods (e.g. Mori et al., 1999; Weinstein et al., 1999; Mori and van Zijl, 2002) \nMatch the smoothed directions, {u 1 , . . . , u C }, to the voxel-wise estimates at s * , {m 1 (s * ), . . . ,m\u0134 (s * ) (s * )} :\nfor j = 1 to\u0134(s * ) dom j (s * ) \u2190 uk j 9: else"}, {"section_title": "10:", "text": "Match the voxelwise estimates at s * to the smoothed directions: :\n11: associated with each voxel, as an input. In below, we propose a deterministic tracking algorithm which takes diffusion directions (associated with the location information) as input. This algorithm allows for multiple or no principal diffusion directions at a voxel. One advantage of the proposed algorithm is that it makes use of the directional information from individual fibers at voxel level.\nTo construct our procedure, we adopt similar tracking ideas from FACT, as depicted in Figure   3 (Left). Tracking starts at the center of a voxel (Voxel 1 in Figure 3 ) and continues in the direction of the estimated diffusion direction. When it enters the next voxel (Voxel 2 in Figure 3 ), the track changes its direction to align with the new diffusion direction and so on. The above tracking rule may produce many short and fragmented fiber tracts due to either a wrongfully identified isotropic voxel or spurious directions which go nowhere. In addition, it does not tell us which direction to follow in case there are multiple directions in a voxel, which happens in crossing fiber regions. To address these issues, we modify the above procedure in the following.\nGiven a current diffusion direction (we refer to the corresponding voxel as the current voxel), the voxel that it points to (we refer to this voxel as the destination voxel) may have (i) at least one direction; (ii) no direction (i.e., isotropic). In case (i), we will first identify the direction with the smallest angular difference with the current direction. If its separation angle is smaller than a pre-specified threshold (e.g., \u03c0/6), we enter the destination voxel and tracking will go on along this direction. See Figure 3 (Middle). On the other hand, if the separation angle is greater than the threshold, or case (ii) happens, we deem that the destination voxel does not have a viable direction. In this case, tracking will go along the current direction if it finds a viable direction within a pre-specified number of voxels. The number of voxels that are allowed to be skipped is set to be 1 in our numerical illustrations. See Figure 3 (Right). On the other hand, the tracking stops at the current voxel if no viable directions within a pre-specified number of voxels can be found.\nThe detailed tracking algorithm is described in Algorithm S4 in the SM.\nAs for the choice of starting voxels (known as seeds), there are two common strategies. One can choose seeds based on tracts of interest and starts the tracking from a region of interest (ROI). This approach is based on knowledge on ROI and may not give a full picture of the tracts of interest if there are diverging branches. The other approach is called brute-force approach, where tracking starts from every voxel. It usually leads to a more comprehensive picture of tracts at a higher computational cost.\nThe proposed algorithm can be coupled with either strategy. In the brute-force approach, we apply Algorithm S4 of the SM for every pair of (s k ,v k ) twice, i.e., (s k ,v k ) and (s k , \u2212v k ). Due to the continuity of fiber, one would not expect a fiber going to and from nowhere, and only exists within a single voxel. Therefore, if that happens, we remove the corresponding fiber.\nThe simplicity of the proposed algorithm makes various extensions possible. For instance, we may use weighted average of neighboring directions to produce smoother tracts, similar to Mori and van Zijl (2002) .\nCombining with the aforementioned smoothing procedure, we call the resulting technique Diffusion diection Smoothing and Tracking (DiST). "}, {"section_title": "Theoretical results", "text": "This section derives some asymptotic properties of the proposed direction smoothing estimator.\nNote that, since the space of direction vectors has a non-Euclidean geometry and so the theoretical framework is different from that of classical smoothing estimators. Without loss of generality, suppose we observe v 1 , . . . , v n \u2208 M at spatial locations s 1 , . . . , s n respectively. Let V be the three dimensional unit sphere. Then M is the quotient space of V with equivalence relation v \u223c \u2212v for any v \u2208 V. This space is also identified with the so-called real projective space RP 2 .\nIn the following, we derive our theoretical results under random design where s i 's are independently and identically sampled from a distribution with density f S , but our results also apply to regular voxels. Given a spatial location s 0 , our target is to estimate v 0 , namely the diffusion direction at s 0 , in the sense that it minimizes E d * 2 (V, v)|S = s 0 , where d * (u, v) = arccos(|u v|).\nFor simplicity, we assume s i \u2208 R and write it as s i thereafter. Thus, our estimator (9) at s 0 can be written asv\nwhere K h (\u00b7) = K(\u00b7/h)/h. Here, with slight notation abuse, K(\u00b7) represents a one dimensional kernel function throughout the theoretical developments."}, {"section_title": "Working coordinate system", "text": "For each p \u2208 V, one can endow a tangent space T p V = {v \u2208 R 3 : v p = 0} with the metric tensor\nNote that the tangent space is identified with R 2 . The geodesics are great circles and the geodesic distance is arccos(p 1 p 2 ), for any p 1 , p 2 \u2208 V.\nThe corresponding exponential map at p \u2208 V, Exp p : T p V \u2192 V, is given by\nwhile the corresponding logarithm map at p \u2208 V, Log p : V\\{\u2212p} \u2192 T p V, is given by\nOne can use the exponential map and the logarithm map to define a coordinate system for the V\\{\u2212v 0 } in the following way. Given v \u2208 V, we define the logarithmic coordinate as\nwhere e 1 , e 2 \u2208 T v 0 V and {e 1 , e 2 } forms an orthonormal basis for T v 0 V. Write \u03c6(v) = (\u03c9 1 , \u03c9 2 ) . In addition, we define\nHere, we define \u03c1 \u22121 v 0 as an identity map."}, {"section_title": "Asymptotic results", "text": "Now, write \u03b8 i =\u03c6(v i ) for i = 1, . . . , n, and \u03c8(\u03c9, \u03b8) = d 2 (\u03c9, \u03b8). We have \u03b8 0 =\u03c6(v 0 ) = 0. Also, let \u03c8 1 (\u03c9, \u03b8) and \u03c8 2 (\u03c9, \u03b8) be the first and second order derivative of \u03c8 with respect to \u03b8 respectively.\nThroughout our discussion, we use the L 2 -norm for matrix. We need the following assumptions to proceed.\nin a neighborhood of s 0 .\nAssumption 2. h \u2192 0 and nh \u2192 \u221e. Assumption 4. The density of S, f S (\u00b7), is twice continuously differentiable in a neighborhood of\nAssumption 5. m j (\u00b7) is twice continuously differentiable in a neighborhood of s 0 , for j = 1, 2.\nAssumption 6. \u03a3 jk (\u00b7) is continuous in a neighborhood of s 0 , for j, k = 1, 2.\nAssumption 7. \u03a8 jk (\u00b7) is continuous in a neighborhood of s 0 , for j, k = 1, 2.\nThere exists a neigh- \n(a) There exists a sequence of solutions,\u03b8 n (s 0 ), to M\nn (\u03b8) = 0, such that\u03b8 n (s 0 ) converges in probability to \u03b8 0 .\n(b) And\u03b8 n is asymptotically normal:\nand\nThe proof of the Theorem 1 can be found in Section S5 of the SM."}, {"section_title": "Simulation results", "text": "This section presents simulation results of the proposed DiST procedure. For simulation results of the voxel-wise estimation procedure proposed in Section 3, see Section S2 of the SM.\nWe simulate 200 diffusion tensor data sets from the tensor field given in Figure 4 (Top). The tensors all have the principal eigenvalues being 4 \u00d7 10 \u22123 and FA (1) being 0.9. The b-value is set to be 1000 across all voxels. This mimics the b-value and diffusivity (reflected by the numerical scale of the tensor) in a real dMRI study.\nAt each voxel there is either one tensor or there are two tensors. For crossing fiber regions, p 1 and p 2 are set to 0.7 and 0.3 respectively, and the separation angles between the two tensors range from 66.3 to 86.6 degree. In crossing fiber regions of Figure 4 (Top), the more transparent the tensor is, the less weight it takes.\nIn addition, S 0 (s)'s have the same value which is set to 1000. Two choices of the noise standard deviation \u03c3 are used, namely 50 and 100, which corresponds to signal-to-noise ratio (S 0 /\u03c3) of 20 and 10, respectively. The case that SNR = 20 is typical for dMRI studies while that SNR = 10 corresponds to a high noise setting. The set of gradient directions U is obtained from the sphere tessellation with 3 subdivision using octahedron and |U| = 33, which is in a typical range for dMRI studies nowadays. With these gradient directions, the observed signal intensities S(s)'s are simulated according to the multi-tensor model (2) with the Rician noise. A total of four different procedures are compared:\n\u2022 raw: voxel-wise estimation without any smoothing;\n\u2022 DiST-cv: DiST using ordinary cross-validation score for choosing h;\n\u2022 DiST-tcv: DiST using 5% trimmed cross-validation score for choosing h;\n\u2022 DiST-mcv: DiST using median cross-validation score for choosing h.\nSee Section S3 of the SM for definitions of the various cross-validation variants. \nwhere\u00fb 1 , . . . ,\u00fb J are the estimated diffusion directions. Here, the MSE is the mean of squared errors (10) over voxels with\u0134 = J in one simulated data set and root MSE (RMSE) is the square root of MSE. Then MMSE and MRMSE are defined, respectively, as the means of MSEs and\nRMSEs over the 200 simulated data sets.\nThe voxel-wise estimation works reasonably well in estimating both the number of diffusion directions J and the diffusion directions. Even for the low SNR setting, the correctness of estimation of J is around 75% and the angular error is no more than 11 degree. For the single tensor region (J = 1), smoothing improves upon estimation of both J and diffusion directions. For regions with two tensors (J = 2), smoothing only improves direction estimation. Among the three smoothing procedures, DiST-mcv works the best. Table 2 shows the five-number summary of the maximum angular error with\u0134 = J = 2 across the 200 simulated data sets. Again smoothing procedures have smaller errors than the raw procedure and DiST-mcv is the best among all methods. For DiST-mcv, the mean and median of angular errors are around 2.5 degree and 1 degree for SNR = 10 and SNR = 20, respectively. Such magnitude of errors has little impact on tracking.\nWe then apply the proposed tracking algorithm in Section 5 (Algorithm S4, SM) to the estimated diffusion directions based on the above procedures. The tracking results of a simulation with SNR = 10 are shown in Figures 4 (Bottom) and 5. As can be seen in Figure 5 , the lines produced by\nDiST are much more aligned when compared to the tracking result based on voxel-wise estimation without smoothing (raw). 8 Real data application\nIn this section, we apply the proposed methodology to a real dMRI data set, which was obtained from the Alzheimer's Disease Neuroimaging Initiative (ADNI) database (www.loni.ucla.edu/ADNI).\nThe primary goal of ADNI has been to test whether serial MRI, positron emission tomography (PET), other biological markers, and clinical and neuropsychological assessment can be combined to measure the progression of mild cognitive impairment (MCI) and onset of Alzheimer's disease Figure 4 : Top: The true tensor field used in the simulation study (Section 7). Bottom: Illustration of fiber tracking using DiST-mcv.\n(AD). In the following, we use an eddy-current-corrected ADNI data set of a normal subject for illustration of our technique.\nThis data set contains 41 distinct gradient directions with b-value set as 1000s/mm 2 . In addition, there are 5 b0 images (corresponding to b = 0), forming in total 46 measurements for each of In this analysis, we focus on a subset of voxels (15 \u00d7 15 \u00d7 5), which contains the intersection of corpus callosum (CC) and corona radiata (CR). This region is known to contain significant fiber crossing (Wiegell et al., 2000) . Figure 6 shows the fiber orientation color map (derived from the single tensor model). The aforementioned region is indicated by a white rectangular box. Within this region, S 0 (s)'s have mean 1860.1 and standard deviation 522.7.\nWe then apply voxel-wise estimation to individual voxels followed by the DiST-mcv procedure.\nDistributions of the estimated number of diffusion directions are summarized in Table 3 . For comparison purposes, we also fit the single tensor model with the commonly used regression estimator (e.g., Mori, 2007) .\nThe tracking results are produced by applying the proposed tracking algorithm to the estimated diffusion directions from DiST-mcv and those from the single tensor model estimation. Figure 7 shows the corresponding tracking results. For visualization purposes, we also present the longest 300 tracts in Figure 8 . From anatomy, the CC has a mediolateral direction while the CR has a superoinferior orientation. They are clearly shown in both tracking results. In these figures, reconstructed fiber tracts are colored by a RGB color model with red for left-right, green for anteroposterior, and blue for superior-inferior. Thus, one can easily locate the CC and the CR as the red fiber bundle and the blue fiber bundle respectively. Tracking result based on DiST-mcv shows clear crossing between mediolateral fiber and the superoinferior fiber (In the figure, the crossing of red and blue fiber tracts). From neuroanatomic atlases and previous studies, Wiegell et al. (2000) conclude that there are several fiber populations with crossing structure in this conjunction region of CC and CR, which matches with the tracking based on DiST-mcv. However, the single tensor model estimation can only reconstruct one major diffusion direction in each voxel and thus the corresponding tracking result does not show crossing structure. Instead, the CC (red fiber bundle)\nis blocked by the CR (blue fiber bundle) and this leads to either termination of the CC fiber tracts or significant merging of the CC and the CR fiber tracts instead of the known crossing structure.\nTo give further illustration, Figure 9 shows the locations of the CC, the CR and the region of crossing fibers (Cross). One can see that tracking based on DiST-mcv reproduces the crossing fiber structures between the CC and the CR, while the result based on single tensor model tends to connect the CC and the CR fibers.\nMoreover, the green fiber on top of the CC represents the cingulum bundle. Both fiber tracking based DiST and single fiber model produce clear and sensible reconstruction of cingulum bundle.\nAll these features match with neuroanatomic atlases and provide a good demonstration of our proposed method. "}, {"section_title": "Discussion", "text": "Using tensor estimation to resolve cross-fiber can be problematic, due to the non-identifiability issue in multi-tensor model. In this paper, we take a different route by focusing on the estimation of diffusion directions rather than the non-identifiable diffusion tensors. We develop the corresponding direction smoothing procedure and fiber tracking strategy, together called DiST, along this route.\nOur technique gives promising empirical results in both simulation study and real data analysis.\nThe procedure we presented works well even with moderate number of gradient directions (a few tens), as long as the number of distinct crossing fibers within a voxel is not large. With HARDI data, which can have up to a couple of hundreds gradient directions, rather than modeling the direction distribution within a tensor framework, we can estimate the fiber orientation distribution nonparametrically (Tuch, 2004; Descoteaux et al., 2007) . In that case, we can potentially extend the fiber tracking procedure presented here by adopting a probabilistic approach in which the directions for moving from one voxel to another are sampled from the fiber orientation distribution. Such a probabilistic fiber tracking has the additional advantage of giving a measure of uncertainty of the fiber tracts extracted from the data. This is a topic of future research. fibers. The plot also shows the location of corpus callosum (CC), corona radiata (CR) and crossing region (Cross). The fiber orientation color map is overlaid as the background. Left: for DiST-mcv."}]