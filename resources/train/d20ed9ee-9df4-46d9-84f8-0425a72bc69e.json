[{"section_title": "Abstract", "text": "Multi-task feature learning (MTFL) is a powerful technique in boosting the predictive performance by learning multiple related classification/regression/clustering tasks simultaneously. However, solving the MTFL problem remains challenging when the feature dimension is extremely large. In this paper, we propose a novel screening rule-that is based on the dual projection onto convex sets (DPC)-to quickly identify the inactive features-that have zero coefficients in the solution vectors across all tasks. One of the appealing features of DPC is that: it is safe in the sense that the detected inactive features are guaranteed to have zero coefficients in the solution vectors across all tasks. Thus, by removing the inactive features from the training phase, we may have substantial savings in the computational cost and memory usage without sacrificing accuracy. To the best of our knowledge, it is the first screening rule that is applicable to sparse models with multiple data matrices. A key challenge in deriving DPC is to solve a nonconvex problem. We show that we can solve for the global optimum efficiently via a properly chosen parametrization of the constraint set. Moreover, DPC has very low computational cost and can be integrated with any existing solvers. We have evaluated the proposed DPC rule on both synthetic and real data sets. The experiments indicate that DPC is very effective in identifying the inactive features-especially for high dimensional data-which leads to a speedup up to several orders of magnitude."}, {"section_title": "Introduction", "text": "Empirical studies have shown that learning multiple related tasks (MTL) simultaneously often provides superior predictive performance relative to learning each tasks independently (Ando and Zhang, 2005 , Argyriou et al., 2008 , Bakker and Heskes, 2003 , Evgeniou et al., 2005 , Zhang et al., 2006 , Chen et al., 2013 . This observation also has solid theoretical foundations (Ando and Zhang, 2005 , Baxter, 2000 , Ben-David and Schuller, 2003 , Caruana, 1997 , especially when the training sample size is small for each task. One popular MTL method especially for high-dimensional data is multi-task feature learning (MTFL), which uses the group Lasso penalty to ensure that all tasks select a common set of features (Argyriou et al., 2007) . MTFL has found great success in many real-world applications including but not limited to: breast cancer classification (Zhang et al., 2010) , disease progression prediction (Zhou et al., 2012) , gene data analysis (Kim and Xing, 2009) , and neural semantic basis discovery (Liu et al., 2009a) . A major issue in MTFL-that is of great practical importance-is to develop efficient solvers (Liu et al., 2009b , Sra, 2012 , Wang et al., 2013a . However, it remains challenging to apply the MTFL models to large-scale problems.\nThe idea of screening has been shown to be very effective in scaling the data and improving the efficiency of many popular sparse models, e.g., Lasso (El Ghaoui et al., 2012 , Wang et al., 2013b , Wang et al., Xiang et al., 2011 , Tibshirani et al., 2012 , nonnegative Lasso Wang and Ye (2014) , group Lasso (Wang et al., 2013b , Wang et al., Tibshirani et al., 2012 , mixed-norm regression (Wang et al., 2013a) , 1 -regularized logistic regression (Wang et al., 2014b) , sparse-group Lasso (Wang and Ye, 2014) , support vector machine (SVM) (Ogawa et al., 2013 , Wang et al., 2014a , and least absolute deviations (LAD) (Wang et al., 2014a) . Essentially, screening aims to quickly identify the zero components in the solution vectors such that the corresponding features-called inactive features (e.g., Lasso)-or data samples-called non-support vectors (e.g., SVM)-can be removed from the optimization. Therefore, the size of the data matrix and the number of variables to be computed can be significantly reduced, which may lead to substantial savings in the computational cost and memory usage without sacrificing accuracy. Compared to the solvers without screening, the speedup gained by the screening methods can be several orders of magnitude.\nHowever, we note that all the existing screening methods are only applicable to sparse models with a single data matrix. Therefore, motivated by the challenges posed by large-scale data and the promising performance of existing screening methods, we propose a novel framework for developing effective and efficient screening rules for a popular MTFL model via the dual projection onto convex sets (DPC). The framework of DPC extends the state-of-the-art screening rule, called EDPP (Wang et al.) , for the standard Lasso problem (Tibshirani, 1996) -that assumes a single data matrix-to a popular MTFL model-that involves multiple data matrices across different tasks. To the best of our knowledge, DPC is the first screening rule that is applicable to sparse models with multiple data matrices.\nThe DPC screening rule detects the inactive features by maximizing a convex function over a convex set containing the dual optimal solution, which is a nonconvex problem. To find the region containing the dual optimal solution, we show that the corresponding dual problem can be formulated as a projection problem-which admits many desirable geometric properties-by utilizing the bilinearity of the inner product. Then, by a carefully chosen parameterization of the constraint set, we transform the nonconvex problem to a quadratic programming problem over one quadratic constraint (QP1QC) (Gay, 1981) , which can be solved for the global optimum efficiently. Experiments on both synthetic and real data sets indicate that the speedup gained by DPC can be orders of magnitude. Moreover, DPC shows better performance as the feature dimension increases, which makes it a very competitive candidate for the applications of very high-dimensional data.\nWe organize the rest of this paper as follows. In Section 2, we briefly review some basics of a popular MTFL model. Then, we derive the dual problem in Section 3. Based on an indepth analysis of the geometric properties of the dual problem and the dual feasible set, we present the proposed DPC screening rule in Section 4. In Section 5, we evaluate the DPC rule on both synthetic and real data sets. We conclude this paper in Section 6. Please refer to the supplement for proofs not included in the main text.\nNotation: Denote the 2 norm by \u00b7 . For x \u2208 R n , let its i th component be x i , and the diagonal matrix with the entries of x on the main diagonal be diag(x). For a set of positive integers {N t : t = 1, . . . , T, T t=1 N t = N }, we denote the t th subvector of x \u2208 R N by x t such that x = (x T 1 , . . . , x T T ) T , where x t \u2208 R Nt for t = 1, . . . , T . For vectors x, y \u2208 R n , we use x, y and x T y interchangeably to denote the inner product. For a matrix M \u2208 R m\u00d7n , let m i , m j , and m ij be its i th row, j th column and (i, j) th entry, respectively. We define the (2, 1)-norm of M by M 2,1 = m i=1 m i . For two matrices A, B \u2208 R m\u00d7n , we define their inner product by A, B = tr(A T B). Let I be the identity matrix. For a convex function f (\u00b7), let \u2202f (\u00b7) be its subdifferential. For a vector x and a convex set C, the projection operator is:"}, {"section_title": "Basics", "text": "In this section, we briefly review some basics of a popular MTFL model and mention several equivalent formulations.\nSuppose that we have T learning tasks {(X t , y t ) : t = 1, . . . , T }, where X t \u2208 R Nt\u00d7d is the data matrix of the t th task with N t samples and d features, and y t \u2208 R Nt is the corresponding response vector. A widely used MTFL model (Argyriou et al., 2007) takes the form of\nwhere w t \u2208 R d is the weight vector of the t th task and W = (w 1 , . . . , w T ). Because the \u00b7 2,1 -norm induces sparsity on the rows of W , the weight vectors across all tasks share the same sparse pattern.\nWe note that the model in (1) is equivalent to several other popular MTFL models.\nThe first example introduces a positive weight parameter \u03c1 t for t = 1, . . . , T to each term in the loss function:\nwhich reduces to (1) by setting y t = yt \u221a \u03c1t and X t = Xt \u221a \u03c1t . The second example introduces another regularizer to (1):\nwhere \u03c1 is a positive parameter and \u00b7 F is the Frobenius norm. Let I \u2208 R d\u00d7d be the identity matrix and 0 be the d-dimensional vector with all zero entries. By lettin\u1e21\nwe can also simplify the above MTFL model to (1). In this paper, we focus on developing the DPC screening rule for the MTFL model in (1)."}, {"section_title": "The Dual Problem", "text": "In this section, we show that we can formulate the dual problem of the MTFL model in (1) as a projection problem by utilizing the bilinearity of the inner product. We first introduce a new set of variables:\nThen, the MTFL model in (1) can be written as\ns.t. z t = y t \u2212 X t w t , t = 1, . . . , T.\nLet \u03bb\u03b8 \u2208 R N be the vector of Lagrangian multipliers. Then, the Lagrangian of (1) is\nTo get the dual problem, we need to minimize L(W, z; \u03b8) over W and z. We can see that\nFor notational convenience, let\nThus, to minimize L(W, z; \u03b8) with respect to W , it is equivalent to minimize f (W ), i.e.,\nBy the bilinearity of the inner product, we can decouple f (W ) into a set of independent subproblems. Indeed, we can rewrite the second term of f (W ) as\nwhere M = (X T 1 \u03b8 1 , . . . , X T T \u03b8 T ). Eq. (6) expresses M, W by the sum of the inner products of the corresponding columns. By the bilinearity of the inner product, we can also express M, W by the sum of the inner products of the corresponding rows:\nDenote the j th column of X t by x (t) j . We can see that\nMoreover, as W 2,1 = d =1 w , Eqs. (7) implies that:\nwhere f ( ) (w ) = w \u2212 m , w . Thus, to minimize f (W ), we can minimize each f ( ) (w ) separately. The subdifferential counterpart of the Fermat's rule (Bauschke and Combettes, 2011) , i.e., 0 \u2208 \u2202f ( ) (\u0175 ), yields:\nwhere\u0175 is the minimizer of f ( ) (\u00b7). We note that Eq. (9) implies m \u2264 1. If this is not the case, then f (\u00b7) is not lower bounded (see the supplements for discussions), i.e., min w f (w ) = \u2212\u221e. Thus, by Eqs. (5) and (9), the dual function is\nMaximizing q(\u03b8) yields the dual problem of (1) as follows:\nIt is evident that the problem in (11) is equivalent to\nIn view of (12), it is indeed a projection problem. Let F be the feasible set of (12). Then, the optimal solution of (12), denoted by \u03b8 * (\u03bb), is the projection of y/\u03bb onto F, namely,\n4 The DPC Rule\nIn this section, we present the proposed DPC screening rule for the MTFL model in (1). Inspired by the Karush-Kuhn-Tucker (KKT) conditions (G\u00fcler, 2010) , in Section 4.1, we first present the general guidelines. The most challenging part lies in two folds: 1) we need to estimate the dual optimal solution as accurately as possible; 2) we need to solve a nonconvex optimization problem. In Section 4.2, we give an accurate estimation of the dual optimal solution based on the geometric properties of the projection operators. Then, in Section 4.3, we show that we can efficiently solve for the global optimum to the nonconvex problem. We present the DPC rule for the MTFL model (1) in Section 4.4."}, {"section_title": "Guidelines for Developing DPC", "text": "We present the general guidelines to develop screening rules for the MTFL model (1) via the KKT conditions. Let W * (\u03bb) = (w * 1 (\u03bb), . . . , w * T (\u03bb)) be the optimal solution (1). By Eqs. (2), (5) and (9), the KKT conditions are:\nwhere (w ) * (\u03bb) is the th row of W * (\u03bb), and\nThe rule in (R) provides a method to identify the rows in W * (\u03bb) that have only zero entries. However, (R) is not applicable to real applications, as it assumes knowledge of \u03b8 * (\u03bb), and solving the dual problem (12) could be as expensive as solving the primal problem (1). Inspired by SAFE (El Ghaoui et al., 2012) , we can first estimate a set \u0398 that contains \u03b8 * (\u03bb), and then relax (R) as follows:\nTherefore, to develop a screening rule for the MTFL model in (1), (R * ) implies that: 1) we need to estimate a region \u0398-that turns out to be a ball (please refer to Section 4.2)-containing \u03b8 * (\u03bb); 2) we need to solve the maximization problem-that turns out to be nonconvex (please refer to Section 4.3)-on the left hand side of (R * )."}, {"section_title": "Estimation of the Dual Optimal Solution", "text": "Based on the geometric properties of the dual problem (12) that is a projection problem, we first derive the closed form solutions of the primal and dual problems for specific values of \u03bb in Section 4.2.1, and then give an accurate estimation of \u03b8 * (\u03bb) for the general cases in Section 4.2.2."}, {"section_title": "Closed form solutions", "text": "The primal and dual optimal solutions W * (\u03bb) and \u03b8 * (\u03bb) are generally unknown. However, when the value of \u03bb is sufficiently large, we expect that W * (\u03bb) = 0, and \u03b8 * (\u03bb) = y \u03bb by Eq. (14). The following theorem confirms this.\nThen, the following statements are equivalent:\nRemark 1. Theorem 1 indicates that: both the primal and dual optimal solutions of the MTFL model (1) admit closed form solutions for \u03bb \u2265 \u03bb max . Thus, we will focus on the cases with \u03bb \u2208 (0, \u03bb max ) in the rest of this paper."}, {"section_title": "The general cases", "text": "Theorem 1 gives a closed form solution of \u03b8 * (\u03bb) for \u03bb \u2265 \u03bb max . Therefore, we can estimate \u03b8 * (\u03bb) with \u03bb < \u03bb max in terms of a known \u03b8 * (\u03bb 0 ). Specifically, we can simply set \u03bb 0 = \u03bb max and utilize the result \u03b8 * (\u03bb max ) = y/\u03bb max . To make this paper self-contained, we first review some geometric properties of projection operators.\nTheorem 2. (Ruszczy\u0144ski, 2006 ) Let C be a nonempty closed convex set. Then, for any point\u016b, we have\nwhere\nAnother useful property of the projection operator in estimating \u03b8 * (\u03bb) is the so-called firmly nonexpansiveness.\nTheorem 3. (Bauschke and Combettes, 2011) Let C be a nonempty closed convex subset of a Hilbert space H. The projection operator with respect to C is firmly nonexpansive, namely, for any u 1 , u 2 \u2208 H,\nThe firmly nonexpansiveness of projection operators leads to the following useful result.\nCorollary 4. Let C be a nonempty closed convex subset of a Hilbert space H and 0 \u2208 C. For any u \u2208 H, we have:\nRemark 2. Part 1 of Corollary 4 indicates that: if a closed convex set C contains the origin, then, for any point u, the norm of its projection with respect to C is upper bounded by the norm of u . The second part is a useful consequence of the first part and plays a crucial role in the estimation of the dual optimal solution (see Theorem 5).\nWe are now ready to present an accurate estimation of the dual optimal solution \u03b8 * (\u03bb).\nTheorem 5. For the MTFL model in (1), suppose that \u03b8 * (\u03bb 0 ) is known with \u03bb 0 \u2208 (0, \u03bb max ]. Let g be given by Eq. (16) for = 1, . . . , d, and\nFor any \u03bb \u2208 (0, \u03bb 0 ), we define\nThen, the following holds:\n. Consider Theorem 5. Part 1 characterizes \u03b8 * (\u03bb) via the normal cone. Parts 2 and 3 illustrate key geometric identities that lead to the accurate estimation of \u03b8 * (\u03bb) in part 4 (see supplement for details).\nRemark 3. The estimation of the dual optimal solution in DPC and EDPP (Wang et al.) -that is for Lasso-are both based on the geometric properties of the projection operators. Thus, the formulas of the estimation in Theorem 5 are similar to that of EDPP. However, we note that the estimations in DPC and EDPP are determined by the completely different geometric structures of the corresponding dual feasible sets. Problem (12) implies that the dual feasible set of the MTFL model (1) is much more complicated than that of Lasso-which is a polytope (the intersection of a set of closed half spaces). Therefore, the estimation of the dual optimal solution in DPC is much more challenging than that of EDPP, e.g., we need to find a vector in the normal cone to the dual feasible set at y/\u03bb max [see n(\u03bb max )].\nFor notational convenience, let\nTheorem 5 implies that \u03b8 * (\u03bb) lies in the ball:"}, {"section_title": "Solving the Nonconvex Problem", "text": "In this section, we solve the optimization problem in (R * ) with \u0398 given by \u0398(\u03bb, \u03bb 0 ) [see Eq. (24)], namely,\nAlthough g (\u00b7) and \u0398(\u03bb, \u03bb 0 ) are convex, problem (25) is nonconvex, as it is a maximization problem. However, we can efficiently solve for the global optimal solutions to (25) by transforming it to a QP1PC via a parametrization of the constraint set. We first cite the following result.\nTheorem 6. (Gay, 1981 ) Let H be a symmetric matrix and D be a positive definite matrix. Consider\nwhere \u2206 > 0. Then, u * minimizes \u03c8(u) over the constraint set if and only if there exists \u03b1 * \u2265 0-that is unique-such that (H + \u03b1 * D T D)u * is positive semidefinite,\nWe are now ready to solve for s (\u03bb, \u03bb 0 ).\nTheorem 7. Let o = o(\u03bb, \u03bb 0 ) and u * be the optimal solution of problem (26)\nnamely, there exists a \u03b1 * \u2265 0 such that \u03b1 * and u * solve Eqs. (27) and (28). Let\nThen, the following hold: 1. \u03b1 * is unique, and \u03b1 * \u2265 2\u03c1 . 2. We define\u016b \u2208 R T by\u016b\nThen, we have \u03b1 * \u2208 2\u03c1 , if \u016b \u2264 \u2206, and x (t * ) , o t * = 0, for t * \u2208 I , (2\u03c1 , \u221e), otherwise.\n3. Let V = {v \u2208 R T : v t = 0 for t / \u2208 I , \u016b + v = \u2206}. Then, we have"}, {"section_title": "The maximum value of problem (25) is given by", "text": "Proof. We first transform problem (25) to a QP1PC by a parameterization of \u0398(\u03bb, \u03bb 0 ):\nwhere u = (u 1 , . . . , u T ) T . We define\nThus, problem (25) becomes\nBy the Cauchy-Schwartz inequality, for a fixed u, we have\nThus, problem (25) becomes\nTherefore, to solve (25), it suffices to solve problem (26) with \u2206, D, H, and q as in the theorem. The statement follows immediately from Theorem 6.\nRemark 4. To develop the DPC rule, (R * ) implies that we only need the maximum value of problem (25). Thus, Theorem 6 does not show the global optimal solutions. However, in view of the proof, we can easily compute the global optimal solutions in terms of \u03b1 * and u * .\nComputing \u03b1 * and u * Consider Theorem 7. If \u016b \u2264 \u2206 and x (t * ) , o t * = 0 for t * \u2208 I , then \u03b1 * and u * admit closed form solutions. Otherwise, \u03b1 * is strictly larger than 2\u03c1 , which implies that H + \u03b1 * I is positive definite and invertible. If this is the case, we apply Newton's method (Gay, 1981) to find \u03b1 * as follows. Let\nBecause \u03d5(\u00b7) is strictly increasing on (2\u03c1 , \u221e), \u03b1 * is the unique root of \u03d5(\u00b7) on (2\u03c1 , \u221e). Let \u03b1 0 = 2\u03c1 . Then, the k th iteration of Newton's method to solve \u03d5(\u03b1 * ) = 0 is:\nAs pointed out by Mor\u00e9 and Sorensen (1983) , Newton's method is very efficient to find \u03b1 * as \u03d5(\u03b1) is almost linear on (2\u03c1 , \u221e). Our experiments indicates that five iterations usually leads to an accuracy higher than 10 \u221215 ."}, {"section_title": "The Proposed DPC Rule", "text": "As implied by R * , we present the proposed screening rule, DPC, for the MTFL model (1) in the following theorem.\nTheorem 8. For the MTFL model (1), suppose that \u03b8 * (\u03bb 0 ) is known with \u03bb 0 \u2208 (0, \u03bb max ]. Then, we have\nwhere s (\u03bb, \u03bb 0 ) is given by Theorem 7.\nIn real applications, the optimal parameter value of \u03bb is generally unknown. Commonly used approaches to determine an appropriate value of \u03bb, such as cross validation and stability selection, need to solve the MTFL model over a grid of tuning parameter values \u03bb 1 > \u03bb 2 > . . . > \u03bb K , which is very time consuming. Inspired by the ideas of Strong Rule (Tibshirani et al., 2012) and SAFE (El Ghaoui et al., 2012) , we develop the sequential version of DPC. Specifically, suppose that the optimal solution W * (\u03bb k ) is known. Then, we apply DPC to identify the inactive features of MTFL model (1) at \u03bb k+1 via W * (\u03bb k ). We repeat this process until all W * (\u03bb k ), k = 1, . . . , K are computed.\nCorollary 9. DPC For the MTFL model (1), suppose that we are given a sequence of parameter\nwhere s (\u03bb, \u03bb 0 ) is given by Theorem 7.\nWe omit the proof of Corollary 9 since it is a direct application of Theorem 8."}, {"section_title": "Experiments", "text": "We evaluate DPC on both synthetic and real data sets. To measure the performance of DPC, we report the rejection ratio, namely, the ratio of the number of inactive features identified by DPC to the actual number of inactive features. We also report the speedup, i.e., the ratio of the running time of solver without screening to the running time of solver with DPC. The solver is from the SLEP package (Liu et al., 2009c) . For each data set, we solve the MTFL model in (1) along a sequence of 100 tuning parameter values of \u03bb equally spaced on the logarithmic scale of \u03bb/\u03bb max from 1.0 to 0.01. We only evaluate DPC since no existing screening rule is applicable for the MTFL model in (1)."}, {"section_title": "Synthetic Studies", "text": "We perform experiments on two synthetic data sets, called Synthetic 1 and Synthetic 2, that are commonly used in the literature (Tibshirani et al., 2012, Zou and Hastie, 2005) . Both synthetic 1 and Synthetic 2 have 50 tasks. Each task contains 50 samples. For t = 1, . . . , 50, the true model is\nFor Synthetic 1, the entries of each data matrix X t are i.i.d. standard Gaussian with pairwise correlation zero, i.e., corr x i , x (t) j = 0.5 |i\u2212j| . To construct w * t , we first randomly select 10% of the features. Then, the corresponding components of w * t are populated from a standard Gaussian, and the remaining ones are set to 0. For both Synthetic 1 and Synthetic 2, we set the feature dimension to 10000, 20000, and 50000, respectively. For each setting, we run 20 trials and report the average performance in Fig. 1 Figure 1: Rejection ratios of DPC on two synthetic data sets with different feature dimensions. Fig. 1 shows the rejection ratios of DPC on Synthetic 1 and Synthetic 2. For all the six settings, the rejection ratios of DPC are higher than 90%, even for small parameter values. This demonstrates one of the advantages of DPC, as previous empirical studies (El Ghaoui et al., 2012 , Tibshirani et al., 2012 indicate that the capability of screening rules in identifying inactive features usually decreases as the parameter value decreases. Moreover, Fig. 1 also shows that as the feature dimension increases, the rejection ratios of DPC become higher-that is very close to 1. This implies that the potential capability of DPC in identifying the inactive features on high-dimensional data sets would be even more significant. Table 1 presents the running time of the solver with and without DPC. The speedup is very significant, which is up to 60 times. Take Synthetic 1 for example. When the feature dimension is 50000, the solver without DPC takes about 40.68 hours to solve problem (1) at 100 paramater values. In contrast, combined with DPC, the solver only takes less than one hour to solve the same 100 problems-which leads to a speedup about 60 times. Table 1 also shows that the computational cost of DPC is very low-which is negligible compared to that of the solver without screening. Moreover, as the rejection ratios of DPC increases with feature dimension growth (see Fig. 1 ), Table 1 shows that the speedup by DPC increases as well."}, {"section_title": "Experiments on Real Data Sets", "text": "We perform experiments on three real data sets: 1) the TDT2 text data set (Cai et al., 2009) ; 2) the animal data set (Lampert et al., 2009 ); 3) the Alzheimers Disease Neuroimaging Initiative (ADNI) data set (http://adni.loni.usc.edu/). The Animal Data Set The data set consists of 30475 images of 50 animals classes. By following the experiment settings in Kang et al. (2011) , we choose 20 animal classes in the data set: antelope, grizzly-bear, killer-whale, beaver, Dalmatian, Persiancat, horse, german-shepherd, blue-whale, Siamese-cat, skunk, ox, tiger, hippopotamus, leopard, moose, spidermonkey, humpbackwhale, elephant, and gorilla. We construct 20 tasks, where each of them is a classification task of one type of animal against all the others. For the t th task, we first randomly select 30 samples from the t th class as the positive samples; and then we randomly select 30 samples from all the other classes as the negative samples. We make use of all the seven sets of features kindly provided by Lampert et al. (2009) : color histogram features, local self-similarity features, PyramidHOG (PHOG) features, SIFT features, colorSIFT features, SURF features, and DECAF features. Thus, each image is represented by a 15036-dimensional vectors. Hence, the data matrix X t of the t t h task is of 60 \u00d7 15036, where t = 1, . . . , 20.\nThe TDT2 Data Set The original data set contains 9394 documents of 30 categories. Each document is represented by a 36771-dimensional vector. Similar to the Animal data set, we construct 30 tasks, each of which is a classification task of one category against all the others (Amit et al., 2007) . Also, for the t th task, we first randomly select 50 samples from the t th category as the positive samples, and then we randomly select 50 samples from all the other categories as the negative samples. Moreover, we remove the features that have only zero entries, thus leaving us 24262 features. Hence, the data matrix X t of the t t h task is of 100 \u00d7 24262, where t = 1, . . . , 30.\nThe ADNI Data Set The data set consists of 747 patients with 504095 single nucleotide polymorphisms (SNPs), and the volume of 93 brain regions for each patient. We first randomly select 20 brain regions. Then, for each region, we randomly select 50 patients, and utilize the corresponding SNPs data as the data matrix and the volumes of that brain region as the response. Thus, we have 20 tasks, each of which is a regression task. The data matrix X t of the t th task is of 50 \u00d7 504095, where t = 1, . . . , 20. Fig . 2 shows the rejection ratios of DPC-that are above 90%-on the aforementioned three real data sets. In particular, the rejection ratios of DPC on the ADNI data set are higher than 99% at the 100 parameter values. Table 1 shows that the resulting speedup is very significant-that is up to 270 times. We note that the feature dimension of the ADNI data set is more than half million. Without screening, Table 1 shows that the solver takes about seven days (approximately one week ) to compute the MTFL model (1) at 100 parameter values. However, integrated with the DPC screening rule, the solver computes the 100 solutions in about half an hour. The experiments again indicate that DPC provides better performance (in terms of rejection ratios and speedup) for higher dimensional data sets."}, {"section_title": "Conclusion", "text": "In this paper, we propose a novel screening method for the MTFL model in (1), called DPC. The DPC screening rule is based on an indepth analysis of the geometric properties of the dual problem and the dual feasible set. To the best of our knowledge, DPC is the first screening rule that is applicable to sparse models with multiple data matrices. DPC is safe in the sense that the identified features by DPC are guaranteed to have zero coefficients in the solution vectors across all tasks. Experiments on synthetic and real data sets demonstrate that DPC is very effective in identifying the inactive features, which leads to a substantial savings in computational cost and memory usage without sacrificing accuracy. Moreover, DPC is more effective as the feature dimension increases, which makes DPC a very competitive candidate for the applications of very high-dimensional data. We plan to extend DPC to more general MTFL models, e.g., the MTFL models with multiple regularizers.\nEq. (13) implies that 1 is equivalent to 2. (2 \u21d4 3) Suppose that 2 holds. Eq. (14) implies that X t w * t (\u03bb) = 0 for t = 1, . . . , T . Denote the objective function of the MTFL model (1) by f (W ). We claim that W * (\u03bb) must be zero. To see this, let W * (\u03bb) = 0 be another optimal solution of (1) and thus X tw * t (\u03bb) = 0 for t = 1, . . . , T . However, it is evident that f (W * (\u03bb)) < f (W * (\u03bb)). This leads to a contradiction. Thus, the optimal solution W * (\u03bb) is zero and we have proved 2 \u21d2 3. The converse direction, i.e., 2 \u21d0 3 is a direct consequence of Eq. (14).\n(1 \u21d4 4) It is evident that 1 holds if and only if y/\u03bb is a feasible solution of problem (12), namely, all constraints in (12) holds at y/\u03bb. By plugging y/\u03bb into the constraints in (12), we can see that the feasibility of y/\u03bb is equivalent to 4. Thus, we can see that 1 is equivalent to 4. This completes the proof."}, {"section_title": "C Proof of Corollary 4", "text": "Proof.\n1. To show part 1, we only need to set u 1 = u and u 2 = 0, and then plug them into the inequality (18) [note that P C (0) = 0 since 0 \u2208 C].\n2. Part 1 implies that P C (u) \u2264 u . Thus, we have\nwhich is equivalent to the statement in part 2. The proof is completed."}, {"section_title": "D Proof of Theorem 5", "text": "We first cite some useful properties of the projection operators.\nLemma 10. (Ruszczy\u0144ski, 2006, Bauschke and Combettes, 2011 ) Let C be a nonempty closed convex set of a Hilbert space and u \u2208 C. Then 1. N C (u) = {v : P C (u + v) = u}.\n2. P C (u + v) = u, \u2200 v \u2208 N C (u).\n3. Let u / \u2208 C and u = P C (u). Then, P C (u + t(u \u2212 u)) = u for all t \u2265 0.\nWe are now ready to prove Theorem 5\nProof.\n(i) For \u03bb \u2208 (0, \u03bb max ), Theorem 1 implies that y/\u03bb / \u2208 F. Thus, the statement holds for \u03bb \u2208 (0, \u03bb max ) by Theorem 2 and Eq. (13) [let\u016b = y/\u03bb and u = \u03b8 * (\u03bb)].\nTo show the statement holds at \u03bb max , Theorem 2 indicates that we need to show \u2207g * y \u03bb max , \u03b8 \u2212 y \u03bb max \u2264 0, \u2200\u03b8 \u2208 F.\nBecause g * (\u00b7) is convex, we have (Ruszczy\u0144ski, 2006) g * (\u03b8) \u2212 g * y \u03bb max \u2265 \u2207g * y \u03bb max , \u03b8 \u2212 y \u03bb max .\nNote that, g is the constraint function of the dual problem in (12). Thus, for any dual feasible solution \u03b8 \u2208 F, it is evident that g * (\u03b8) \u2264 1. Moreover, Eq. (17) implies that g * (y/\u03bb max ) = 1. Therefore, the left hand of the inequality (39) must be non-positive, which yields inequality (38). Thus, the statement holds.\n(ii) A direct application of part 2 of Corollary 4 yields\nWhen \u03bb 0 = \u03bb max , by noting that n(\u03bb max ) = \u2207g * ( y \u03bbmax ), we have y \u03bb max , n(\u03bb max ) = The fact that 0 \u2208 F yields 0 \u2212 y \u03bb max , n(\u03bb max ) \u2264 0.\nThus, the first term on the right hand side of Eq. (40) is nonnegative for \u03bb 0 = \u03bb max . For \u03bb 0 \u2208 (0, \u03bb max ), part 2 of Corollary 4, Eqs. (13) and (20) imply that\nThus, the first term on the right hand side of Eq. (40) is nonnegative for \u03bb 0 \u2208 (0, \u03bb max ).\nAs a result, the inner product r(\u03bb, \u03bb 0 ), n(\u03bb 0 ) is nonnegative.\n(iv) We define \u03b8(t) = \u03b8 * (\u03bb 0 ) + tn(\u03bb 0 ).\nPart 1 of Lemma 10 implies that P F (\u03b8(t)) = \u03b8 * (\u03bb 0 ), \u2200 t \u2265 0.\nThe nonexpansiveness of the projection operators yields [let u 1 = y/\u03bb and u 2 = \u03b8(t) and plug them into (18)]\nBy Eqs. (13), (42) and (21), the above inequality reduces to \u03b8 * (\u03bb) \u2212 \u03b8 * (\u03bb 0 ) 2 + \u03b8 * (\u03bb) \u2212 \u03b8 * (\u03bb 0 ) \u2212 (r(\u03bb, \u03bb 0 ) \u2212 tn(\u03bb 0 )) 2 \u2264 r(\u03bb, \u03bb 0 ) \u2212 tn(\u03bb 0 ) 2 , \u2200 t \u2265 0.\nLet us consider min t\u22650 r(t) = r(\u03bb, \u03bb 0 ) \u2212 tn(\u03bb 0 ) 2 .\nBecause r(t) is a quadratic function of t, we can see that The proof is complete."}]