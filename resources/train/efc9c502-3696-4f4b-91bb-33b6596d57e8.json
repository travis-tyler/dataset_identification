[{"section_title": "Abstract", "text": "A new approach, based on the hierarchical soft correspondence detection, has been presented for significantly improving the speed of our previous HAMMER image registration algorithm. Currently, HAMMER takes a relative long time, e.g., up to 80 min, to register two regular sized images using Linux machine (with 2.40 GHz CPU and 2-Gbyte memory). This is because the results of correspondence detection, used to guide the image warping, can be ambiguous in complex structures and thus the image warping has to be conservative and accordingly takes long time to complete. In this paper, a hierarchical soft correspondence detection technique has been employed to detect correspondences more robustly, thereby allowing the image warping to be completed straightforwardly and fast. By incorporating this hierarchical soft correspondence detection technique into the HAMMER registration framework, both the robustness and the accuracy of registration (in terms of low average registration error) can be achieved. Experimental results on real and simulated data show that the new registration algorithm, based on the hierarchical soft correspondence detection, can run nine times faster than HAMMER while keeping the similar registration accuracy."}, {"section_title": "Introduction", "text": "Deformable registration is important for comparing medical images across different subjects. So far, various image registration algorithms [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] [14] [15] [16] [17] [18] [19] have been proposed in the literature. Most registration methods are based on matching simple image information such as intensities, while other methods use features for image registration. Features can be local features [4, 20] such as image boundary or curvature, or regional features such as geometric moment invariants (GMIs) [21, 22] , wavelet coefficients [23] , multiple-scale histogram features [24] , local descriptor features [25] , or combinations of various local features [25] . In the image registration, besides maximizing the matching of image features, the estimated dense deformation field is required to be smooth as well. This can be achieved by using a Laplacian smoothness constraint [21, 22] , an elastic energy [8] , or even the statistical deformation constraint learned from the training samples [26] .\nWe have previously developed a hierarchical image registration algorithm, called HAMMER [21, 22] . There are two novel ideas in this algorithm. First, an attribute vector is defined for each point in the image, in order to characterize and better distinguish this point from its neighboring points; the image registration can be accordingly formulated as a problem of attribute vector matching or correspondence detection. Second, a strategy for hierarchical approximation of energy function is used to reduce the chance of local minima in the registration. In particular, the registration algorithm is designed to focus initially on the registration of only a small set of active points (with distinctive attribute vectors). This process implicitly selects only a small number of major energy terms in the whole energy function for optimization, thus potentially achieving global optimization for the new energy function. With the progress of registration, more and more points with less distinctive attribute vectors are added into the set of active points for actively driving the image registration, once these less distinctive points have been moved close to their targets and become stable for registration. In the final registration stage, all points in the images are considered as active points to drive image registration, which means that all energy terms in the whole energy function will be finally considered for optimization. By using this hierarchical registration strategy, we can improve the performance as well as the speed of registration. Also, since not all points are initially considered as active points to drive image registration, thus effectively reducing the scale of image registration problem and becoming fast and robust to complete. HAMMER has been successfully applied to many large clinical research studies and clinical trials involving over 5000 MR brain images. These applications include one of the largest longitudinal studies of aging in the world to date-which involves an 18 year annual follow-up of 150 elderly individuals [27] , a relatively large schizophrenia imaging study involving 148 participants [28] , a study of cocaine-exposed children [29] , a morphometric study of children with genetic abnormalities [30] , a large study of the effects of organolead-exposure on the brain [31] , and a study of effect of sustained, heavy drinking on the brain [32, 33] . Many of these studies are the leading studies in their respective fields, and have received ample international attention.\nTo further improve the performance of HAMMER, various research works have been performed. In order to improve the performance of correspondence detection using attribute vectors, the best-scale GMIs have been learned for registration [34] . Also, the separate sets of best features have been specially learned for different parts of brain, since it is believed that different types of features have different functions in characterizing image points, and different parts of brain need different sets of best features to distinguish themselves. Moreover, by learning the normal brain variations from a set of brain image samples, we can use this learned information to constrain the image registration, thus improving the robustness of registration [25, 26] .\nIt is worth noting that all previous improvements were focusing on improving the robustness and accuracy of registration in HAM-MER, e.g., using the average registration error. Less attention has been paid to increasing the registration speed. Currently, HAMMER takes up to 80 min for registering two MR brain images with the size of 256\u00d7256\u00d7124, which might be too long for some applications. Therefore, it is important to design methods to improve the speed of registration algorithm.\nOne reason that HAMMER needs a relatively long time for registration is that the correspondence detection results, used to guide image registration, can be ambiguous in some complex structures, and image warping has to be performed conservatively and thus slow. Many advanced correspondence detection methods have been proposed in the literature [35, 36] . Traditionally, one-to-one correspondence is established for each point in the image, which we can call as hard correspondence detection. Some advanced methods such as in [35, 36] allow to identify correspondences in a soft way, e.g., each point can have multiple points as candidate correspondences, each assigned with a possibility. The total possibility is equal to 1. This is called soft correspondence detection. In the initial correspondence detection procedure, candidate correspondences can have similar amount of probability, indicating the uncertainty is high. With the progress of correspondence detection process, it will allow only a single correspondence or several candidate correspondences having the high probability and others close to zero, which increases the specificity of correspondence detection.\nIn this paper, we propose to detect soft correspondences [35, 36] for active points selected during the registration procedure. Thus, correspondence detection can be robust and allows the image warping to perform fast. Moreover, soft correspondence detection can be implemented hierarchically to render the registration both robust and accurate. For example, in the initial registration procedure, the distant points with high attribute similarity can also contribute significantly to the soft correspondence detection, thus potentially increasing the robustness of correspondence detection. With the progress of registration, the distant points even with high attribute similarity decrease gradually their contribution to the soft correspondence detection, thus effectively increasing the specificity of final correspondence detection results. By mathematically formulating this soft correspondence detection idea into the HAMMER registration framework, the speed of the final registration algorithm is reduced to only the one-ninth of original computational cost required by HAMMER, without affecting much for registration performance. In particular, the proposed registration algorithm can complete the alignment of two 256\u00d7256\u00d7124 images in about 9 min using Linux machine (with 2.40 GHz CPU and 2-Gbyte memory).\nThe structure of this paper is organized as follows. In Section 2, the definitions for attribute vector and similarity, a new energy function for registration, and details for implementation are all discussed one by one. In particular, the ideas of how to mathematically allow each active point to have multiple correspondences in the other image, and how to make soft correspondence detection strategy robust as well as accurate are also explained in detail. In Section 3, various experiments on simulated and real data are conducted to confirm that the performance of the proposed registration method is not decreased much even with the significant deduction of computation cost. This paper concludes in Section 4."}, {"section_title": "Method", "text": "Image registration problem is formulated here as an iterative process of detecting soft correspondences for the active points. The active points are selected according to the distinctiveness of their attribute vectors, which include image intensity, edge type, and geometric features from the neighborhood. The active points are also selected hierarchically during the registration procedure, e.g., initially a small set of active points with the most distinctive attribute vectors and gradually a larger and larger set of active points by including less distinctive points. The dense correspondences in the entire image domain are interpolated by the mean correspondences estimated in the active points.\nThe correspondence for each active point is softly determined. Instead of one-to-one correspondence detection, each active point is allowed to have multiple correspondences detected in the other image; each detected correspondence is assigned with a probability ranging from 0 to 1, and all the detected correspondences have a total probability of 1. The location of soft correspondence is determined as a statistical mean location of all detected correspondences. Note that, if a point v is considered as a correspondence of an active point x, the respective probability is determined by evaluating not only the similarity of attribute vectors of points v and x, but also the similarity of attribute vectors of all points in their neighborhoods. To increase the speed of detecting candidate correspondences and measuring their probabilities, the evaluation of the similarity of attribute vectors of the two points can be performed first, in order to select only a small set of candidate points {v} to perform the computation-consuming comparison of attribute vectors in the whole neighborhoods.\nIt is worth noting that the soft correspondence detection is more robust than the one-to-one correspondence detection, thus the robustness of registration using the soft correspondence detection can be improved. In the initial registration procedure, both local and distant points with similar attribute vectors can contribute to the correspondence detection. Gradually, in the later registration procedure, only the most similar points are allowed to contribute to the correspondence detection. By using these strategies, we can achieve both the robustness and the accuracy for the registration results.\nIn the following, we first briefly summarize the definitions for attribute vectors and their similarity, which are the same as in HAM-MER [21, 22] . Then, we give a definition of new energy function for the proposed registration algorithm. Finally, we provide the detailed descriptions of the soft correspondence matching within the original HAMMER registration framework."}, {"section_title": "Attribute vector and similarity", "text": "Definition: An attribute vector is defined for each point x in the image, to better distinguish one point from its neighboring points and also to identify its corresponding points in the other image by matching attribute similarity. The attribute vector a(x) includes three parts of information, i.e., edge type a 1 (x), image intensity a 2 (x), and GMIs a 3 (x) that are calculated from the structure in the neighborhood. Hence, a(x) = [a 1 (x) a 2 (x) a 3 (x)]; each of these three sub-vectors is explained one by one in the next three paragraphs.\nFor the hard tissue segmentation case [37] as employed in this paper, a 1 (x) is a 1\u00d71 vector, which takes one of seven discrete values corresponding to seven edge types such as non-edge and six combinations of edges between grey matter (GM), white matter (GM), and CSF. In the fuzzy segmentation case [38] , a 3\u00d71 fuzzy vector [C WM , C GM , C CSF ] T is typically used to represent the probability of WM, GM, and CSF on an image point x, where C WM , C GM , and C CSF all take a value between 0 and 1 and C WM +C GM +C CSF = 1.0. Thus, in the fuzzy segmentation case, a 1 (x) is designed as a 3\u00d71 vector to measure the maximal direct difference (3\u00d71 vector) of the tissue segmentation results between the image point x and any neighboring points. a 2 (x) represents direct information on the image point x, which can be image intensity, tissue segmentation result, or both. In this paper, a 2 (x) is selected as a 1\u00d71 vector to represent the intensity on the image point x, which has been normalized between 0 and 1.\nFor the brain images, the vector a 3 (x) comprises the GMIs of the respective GM, WM, and CSF, calculated from the multiple-scale spherical neighborhoods around the image point x. For a particular scale and tissue type, 13 rotation invariants can be calculated from the zero-order, second-order, and third-order 3D regular moments [39] . Therefore, a 3 (x) can be a vector with K = 3\u00d713xL, where L is the number of scales used. Four rotation invariants that are formulated from the zero-order and the second-order moments are listed next, while other nine rotation invariants, formulated from the third-order moments and both the second-order and the third-order moments, can be found in Ref. [39] .\nNote that the first GMI corresponds to the volume of a certain tissue.\nSimilarity: As mentioned above, there are three parts of attributes included in each attribute vector, with different parts of attributes having different contributions to the overall similarity of attribute vectors. For example, a 1 (x) represents the edge type, which provides important information for matching the same type of boundary points in the two individual brain images. a 3 (x) provides the geometric features, to allow the detailed comparison of geometric similarity between two images. Moreover, the sizes of these three different parts of attributes are different. Thus, we can first compare the similarity of short vectors of important attributes, such as a 1 (x), in the two attribute vectors, in order to avoid comparing the similarity of long vectors of attributes, such as a 3 (x), if the similarity on short vectors is low. In this way, we can significantly reduce the overall computation time for similarity measurement. In particular, the dissimilarity of two attribute vectors, a(x) and a(y), of two points x and y can be defined as\nIf |a 1 (x)\u2212a 1 (y)| is larger than , the overall dissimilarity d(a(x),a(y)) is one. In the hard tissue segmentation case, is equal to zero; in the fuzzy segmentation case, is a certain value that should be determined in the experiments. c([a 2 (x) a 3 (x)], [a 2 (y) a 3 (y)]) is the similarity of the second and the third parts of the two attribute vectors in a(x) and a(y). To be strict on the similarity measure, each element in a 2 and a 3 is first normalized into a range from 0 to 1, and then compared and further integrated as a way described next:\nwhere a 3 i (x) is the i-th element of a 3 (x) which has total K elements."}, {"section_title": "Energy function", "text": "The goal of image registration is to best align a template image T(x) with a subject image S(y) by maximizing the similarity of attribute vectors on the corresponding points. If a template point x is corresponding to a subject point y, their attribute vectors a T (x) and a S (y) should be as similar as possible, i.e., d(a T (x),a S (y)) should be as small as possible. On the other hand, the estimated deformation field {h(x), x \u2208 T }, where T denotes the template image domain, should be able to warp the template point x very close to its corresponding subject point y, i.e., h(x) = y.\nIt is important to allow each active point to have multiple correspondences detected in the other image, in order to increase the robustness of overall registration algorithm. This is significant particularly when the one-to-one correspondence detection is difficult. Accordingly, in this paper, each active point x in the template is allowed to have multiple points {v} detected in the subject image as correspondences, with {p x,v } representing the probability of a template active point x and a subject point v as a pair of corresponding points. The deformation field h(x) in the template point x can be thus estimated as a statistical mean location of all correspondences detected in the subject, i.e., h(x) = v p x,v \u00b7 v. Note that the soft or fuzzy correspondence will be progressively forced to the one-to-one correspondence during the registration procedure, thus achieving not only the robustness but also the accuracy of registration. The robustness is achieved by initially allowing all points with similar attribute vectors to contribute to the correspondence detection, while the accuracy or the specificity of registration is achieved by finally allowing only the most similar points to contribute to the correspondence detection.\nOur registration algorithm can be accordingly formulated as an iterative optimization process involving three steps. The first step is to select active points from both template and subject images, with the number of active points progressively increased during the registration. The second step is to detect multiple candidate correspondences and respective probabilities for each active point; candidate points can be selected initially from a large neighborhood and later from a small or even immediate neighborhood. The third step is to calculate the mean deformation for each template active point based on the detected correspondences, and also to interpolate the mean deformations in the other locations of the template image domain and make them smooth spatially. By iteratively performing these three steps, the registration algorithm can register images robustly and accurately.\nThe energy function is defined next to facilitate the iterative performance of these three steps in the registration procedure.\nEnergy terms: The first term in the whole energy function describes the overall cost of matching a template image with a subject image (see Fig. 1 for reference) . For a template point x, its mean deformation is defined as h(x). For a subject point v in the neighborhood of h(x), v \u2208 n 1 (h(x)), its probability of being selected as a correspondence for the template point x is p x,v . n 1 denotes\nTemplate Subject Fig. 1 . Schematic explanation for correspondence detection, probability estimation, and neighborhood matching in our registration algorithm. A template point x is tentatively warped to a location h(x) in the subject. In the subject space, a neighboring point v of h(x) is considered as a candidate correspondence for the template point x, with the probability px,v calculated from the similarity of attribute vectors on points x and v, as well as the similarity of attribute vectors in the respective neighborhoods (e.g., a dotted grey circle n2 in the template and one deformed dotted grey circle around point v in the subject). The deformed dotted circle around point v is shifted by v\u2212h(x) from the one around point h(x), which is a warped version of an original circle in the template. In the searching neighborhood n1 (red circle), only several points (green cross points) are detected as candidate correspondences for template point x.\na searching neighborhood around the mean deformation h(x); the size of n 1 is large initially, and decreases gradually with the progress of registration, in order to achieve the robustness as well as the accuracy of registration. Three types of costs need to be minimized once a subject point v is selected as a correspondence of the template point x. The first type of cost is the dissimilarity of attribute vectors of the template point x and the subject point v, i.e."}, {"section_title": ", d(a T (x),a S (v)).", "text": "The second type of cost is the overall dissimilarity in the neighborhoods around the template point x and the subject point v, i.e.,\nwhere all neighboring points {u} of the template point x, u \u2208 n 2 (x), are compared with the neighboring points h(u)+(v\u2212h(x)) of the subject point v, by using attribute vector dissimilarity. n 2 represents a matching neighborhood, whose size changes from an initial large size to a final small size with the progress of registration. The third type of cost is the distance of the subject point v away from the mean deformation h(x), i.e., ||v \u2212 h(x)|| 2 . By integrating all of these three types of cost from all template points, the total cost for aligning the template with the subject images can be obtained as the first energy term in whole energy function. For increasing the consistency of registration [5, 21, 22, 40, 41] , we also define a cost function for matching the subject image with the template image, as described by the second energy term in the whole energy function. h \u22121 (y) is the backward transformation from the subject to the template, which is the inverse of the forward transformation h(x). Cost definitions in the second energy term are similar to those in the first energy term.\nAs mentioned, by allowing each point to have multiple correspondences, the robustness of registration algorithm can be increased. Also, in order to increase the specificity or the accuracy of registration results, it is necessary to finally determine only a single correspondence for each point, or require all the detected correspondences very close to the mean deformation h(x). The latter requirement can be implemented by increasing the parameter (in the energy function) with the progress of registration, to constrain the distance between each correspondence (v) and the mean location of all correspondences (h(x)). Also, the progressive decrease of the size of searching neighborhood n 1 ensures the selection of candidate correspondences from the nearby points. The former requirement can be implemented by adding an entropy measurement on the probabilities {p x,v } and {p v,y }, which is included as the third energy term in the whole energy function. The parameter controls the significance of this energy term [42, 43] . By adaptively adjusting parameter with the progress of registration, i.e., changing from extremely large to extremely small value, we can actively allow the registration algorithm to detect multiple correspondences from an initial large neighborhood to latter a small neighborhood, and also from initially even the low similarity points to latter only the high similarity points.\nThe last energy term evaluates the smoothness of the mean deformation field {h(x)} estimated in the entire image domain, using a Laplacian operator. Based on the multiple correspondences and the respective probabilities detected for each active point, the mean deformations {h(x)} in all active points {x} can be statistically determined and then used to refine the previous estimations in the same active points. The mean deformations in the other locations of the image can be interpolated with an interpolation kernel, e.g., a Gaussian kernel used in this paper. Finally, this updated deformation field can be made as regular as possible in the entire image domain by using a Laplacian smoothness constraint. A parameter is used to control the importance of the Laplacian smoothness constraint in the whole energy function.\nThe following is the whole energy function that our image registration algorithm will minimize:\nSubject to the constraints:\n0 p v,y 1,\np v,y = 1 for each subject point y.\nHierarchical optimization: As mentioned, our registration algorithm will hierarchically select a set of active points with distinctive attribute vectors to drive the image registration. The set of active points will be progressively increased with the progress of registration by adding less distinctive points when they are deformed close to their targets and become reliable to drive the image registration. This strategy can be implemented by hierarchically assigning different values to the parameters T (x) and S (y) in the energy function, thus effectively selecting the respective template and subject points (x and y) to be actively involved in the image registration.\nWe can initially assign large values to the points with distinctive attribute vectors, and zero to other points in the images. In this case, the whole energy function above describes a problem of determining correspondences for those selected active points and also interpolating a smooth dense deformation field according to the mean correspondence locations determined in those active points. After solving this relative small scale problem of correspondence detection and deformation field estimation, we can increase the set of active points by including other less distinctive points, and then start to solve a relatively large scale problem of correspondence detection on more active points. Since the sizes of the searching neighborhood n 1 and the matching neighborhood n 2 will be decreased with the progress of registration, the computational cost for detecting correspondences for more active points will not be necessarily increased as confirmed by our experiments.\nIn the final, by considering all image points into the energy minimization problem, we solve the exact energy function that our registration algorithm should originally minimize. Importantly, the advance of using this hierarchical optimization strategy is that we can have high chances to avoid local minima. The subsection next describes the details for implementing this hierarchical optimization strategy."}, {"section_title": "Implementation", "text": "The whole energy function above can be hierarchically minimized by iteratively estimating (1) the correspondence probabilities {p x,v } and {p v,y } for the current selected active points, (2) the mean deformations in the current selected active points, and (3) the dense mean deformation field in the entire image domain. The descriptions for each of these three iterative steps are provided next.\nEstimating correspondence probabilities: The probability for each pair of correspondences in {p x,v } can be determined by solving an equation of jE/jP x,v = 0, with the result given next. Note that the probabilities in {p v,y } can be similarly determined.\nwhere c is a constant, m(x,v) measures the similarity of attribute vectors between a template point x and a subject point v, and m Sub (x,v) represents the similarity of whole neighborhoods around the template point x and the subject point v, and m Dist (x,v) measures how close two points x and v are. Expressions of these measures are given next:\nThe estimated probabilities {p x,v } are normalized separately for each template point x as follows, in order to ensure that the total probability for detecting correspondences for the point x is 1.0.\nfor every template point x.\nIt is worth noting that the similarity of neighborhoods m Sub (x,v) is generally expensive to compute, if the number of points {v} in the neighborhood n 2 is large. To avoid this computation problem, we propose to first calculate the measurement m(x,v) for all neighboring points {v}. Then, we check whether any neighboring points have the measurement m(x,v) over a certain threshold. (Note that this threshold can be gradually adjusted with the progress of registration, e.g., from initially a large value (such as 0.8 in our paper) to later a small value.) Only for the points with the expected measurement m(x,v) , their neighborhood similarity m Sub (x,v) will be consequently computed. By using this strategy, we can potentially assign zero probability for many neighboring points v, thus significantly reducing the overall computational time.\nEstimating the mean deformations in active points: Once the probabilities {p x,v } and {p v,y } have been determined, the mean deformation, or the location of soft correspondence, for each active point can be immediately determined. By taking active points in the template image as an example, we can determine the mean deformation for each template active point x by optimizing the sub-energy term,\n. This means that the new location of soft correspondence for the active point x is the statistical mean location of all correspondences detected in the subject image. By determining the new location for each of these active points in the template and the subject images, we can deform all points in the neighborhoods of these active points by using a Gaussian kernel as employed in HAMMER [21, 22] . By selecting the standard deviation of the Gaussian kernel as small as the one-third of the size of searching neighborhood n 1 , we can smoothly update the deformation field without introducing possible self-intersection. Note that the entire deformation field might be not sufficiently smooth due to this independent, local updating of deformations. This necessitates the use of Laplacian smoothness constraint to regularize the entire deformation field, as briefly summarized next.\nRegularizing the dense deformation field: Once deformations have been updated in active points and their neighborhoods, the last energy term, e.g., Laplacian smoothness constraint, can be used to ensure both global and local smoothness of the entire deformation field. In the discrete case, the Laplacian smoothness constraint actually requires the deformation of each point to be close to the average deformation in its immediate neighborhood. Therefore, in the implementation, we can gradually push the deformation of each point to the average deformation in the immediate neighborhood, e.g., a 3\u00d73\u00d73 neighborhood. By repeating this step, we can finally obtain a smooth dense deformation field {h(x)}."}, {"section_title": "Experimental results", "text": "The performance of the proposed registration algorithm has been evaluated using both simulated and real data. The results on simulated data show that the proposed registration method can achieve a registration accuracy comparable to the one produced by HAMMER, while the results on the real longitudinal data indicate that the proposed registration algorithm can achieve better longitudinal consistency than HAMMER. Importantly, the speed of the proposed registration algorithm has been significantly improved, e.g., taking only about the one-ninth of computation time required by HAMMER. For example, it takes about 9 min for registration of two 256\u00d7256\u00d7124 brain images, using Linux machine (with 2.40 GHz CPU and 2-Gbyte memory).\nThree subsections next compare the performances of our proposed registration algorithm and HAMMER in registering simulated data, constructing average brains from 18 individual brains, and aligning longitudinal data of real patients, respectively. The registration is performed in the isotropic image space. Note that all of these experimental results are provided to confirm that the performance of the proposed registration algorithm is comparable to that of HAM-MER, even with the significant improvement of registration speed. , 1 5 , or 1 3 computation time of HAMMER. The difference image between the result by HAMMER and each result by the proposed method is provided in the top row. These different images have been enhanced for better visual inspection."}, {"section_title": "Simulated data", "text": "The proposed registration method has been applied to the simulated data for quantitatively measuring its registration performance. The same simulated data used to validate HAMMER in [21] are used here. The simulated data were created by first randomly selecting a brain, and then using the STAR elastic warping method [8] to warp this selected brain to five individual human brains by respectively placing forces on the ventricles and the cortex. Finally, five simulated brains were obtained, which are actually the different warped versions of the same selected brain. Note that the overall shapes of these five simulated brains are similar to those five individual brains used to guide the warping.\nIt is worth noting that the ground-truth deformations from the selected brain to each of these simulated brains are known. Thus, by applying the proposed registration method to estimating the deformations between the selected brain and each of these five simulated brains, we can quantitatively measure the accuracy of the proposed registration algorithm by comparing our estimated deformations with the ground-truth ones. The average registration error by the proposed algorithm is 1.13 mm, which is comparable to 0.97 mm error produced by HAMMER. Note that, as mentioned above, the proposed algorithm took only one-ninth of the computational cost required by HAMMER."}, {"section_title": "Average brain", "text": "The proposed registration algorithm has been applied to 18 real brain images for constructing an average brain from these 18 normalized brain images in the template space. The same 18 brain images used in HAMMER [21] are used here for direct comparison of our constructed average brain with that by HAMMER. Fig. 2 shows the average images constructed from 18 individual brain images using the proposed registration algorithm and HAM-MER, respectively. The average brain image constructed by the proposed method (the 2nd from left in the bottom row) is relatively fuzzy compared to the one constructed by HAMMER (left). Considering that the proposed registration method takes only one-ninth of the computation time to align images, the quality of registration is still promising. If we spend a relatively long time for registration, i.e., about 1 5 or 1 3 of computation time used by HAMMER, we can obtain average brain images closer and closer to the one obtained by HAMMER."}, {"section_title": "Longitudinal data", "text": "The proposed registration method has been applied to the longitudinal data obtained from our Baltimore Longitudinal Study of Aging (BLSA) [27] , to check the longitudinal stability of our registration algorithm in aligning images of the same subject acquired at different times. In the BLSA project, SPGR MR brain images have been acquired annually by a GE 1.5 T scanner for 150 elderly subjects over 13 years. We applied our registration algorithm to the first five images of the same patients (acquired in the first five years), and the performance is compared with that achieved by HAMMER. Fig. 3 shows the results of five longitudinally acquired images collected once per year for five years of the same subject. These images were spatially normalized by HAMMER (1st row) and the proposed algorithm (2nd row), respectively. Since the normalization for each time image was performed independently, the normalization results might be not longitudinally consistent. It can be observed that the normalization results by HAMMER are not consistent in the fourth time image as indicated by the arrow. In contrast, the normalization results achieved by the proposed algorithm are more stable across different times, indicating the better performance of the proposed algorithm than HAMMER in aligning longitudinal data. On the other hand, it is worth noting that the normalization results from these two methods are somewhat different, particularly in the light hemisphere sulcal patterns (right in the image). More evaluations need to be done in the future for complete comparison of the two methods."}, {"section_title": "Conclusion", "text": "We have presented a new approach to significantly improve the speed of our previous HAMMER registration algorithm. This is achieved by using a hierarchical soft correspondence detection technique to replace the one-to-one correspondence detection strategy in HAMMER, thus the correspondence detection can be performed more robustly and the image warping can be conducted straightforwardly and fast. In particular, for each active point selected during the registration procedure, it is allowed initially to have multiple correspondences detected in the other image, and gradually forced to have few (or even one) correspondences detected in the other image. By using this hierarchical soft correspondence detection technique, we can achieve not only the robustness but also the accuracy of registration.\nIn summary, the image registration is here formulated as a process of hierarchically detecting a soft correspondence for each active point selected during the registration procedure, and also a process of interpolating and regularizing the dense smooth deformation field in the entire image domain. The experimental results indicate that, compared to HAMMER, first the speed of the proposed registration algorithm has been significantly increased without sacrificing much for the registration performance, and second the longitudinal consistency has been considerably improved.\nIn future work, we will extensively evaluate and optimize all the parameters in our proposed registration algorithm, by using more real and simulated datasets with ground-truth information provided by manual raters or computer simulations. The final registration algorithm will be released publicly, as we did for the HAMMER registration algorithm, http://www.nitrc.org/projects/hammer/."}]