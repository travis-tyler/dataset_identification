[{"section_title": "Abstract", "text": "Recently, many methods to interpret and visualize deep neural network predictions have been proposed, and significant progress has been made. However, a more class-discriminative and visually pleasing explanation is required. Thus, this paper proposes a region-based approach that estimates feature importance in terms of appropriately segmented regions. By fusing the saliency maps generated from multi-scale segmentations, a more class-discriminative and visually pleasing map is obtained. This paper incorporates this regional multi-scale concept into a prediction difference method that is model-agnostic. An input image is segmented in several scales using the superpixel method, and exclusion of a region is simulated by sampling a normal distribution constructed via the boundary prior. The experimental results demonstrate that the regional multi-scale method produces much more class-discriminative and visually pleasing saliency maps.\nComputer vision, neural networks, explainable artificial intelligence, machine learning."}, {"section_title": "I. INTRODUCTION", "text": "Deep learning has facilitated breakthroughs for a variety of AI tasks and, in many cases, has achieved performance equal or superior to human performance [1] . Despite considerable success, most learning models do not satisfactorily explain why they reach a decision; thus, model deployment is delayed or even abandoned. Recognizing that this deficiency could cause potential harm, the European Union adopted a regulation for algorithmic decision-making that addresses the ''right to explanation'' [2] . This regulation will restrict the deployment of AI systems that do not satisfy this constraint, which will have a significant impact on the AI industry.\nTo address this situation, a variety of explanation techniques have been devised and evaluated [3] . The evaluation of some techniques involved user studies to ensure that the explanations increased user trust and helped users choose better models [4] , [5] . In the early days of development, interpreting the learning model itself dominated [5] . Currently, interpreting predictions for individual instances, which is the focus of this study, is receiving greater attention.\nThe associate editor coordinating the review of this manuscript and approving it for publication was Rentao Gu .\nAn interpretation model should satisfy several requirements. The most critical requirement is that the interpretation be class-discriminative; i.e., it should identify features that make the greatest contribution toward determining the given class. As shown in Fig. 1 , sensitivity analysis (SA) [7] , the gradient-weighted class activation map (Grad-CAM) [5] , and the proposed method are class-discriminative, whereas the other methods are not. This paper proposes another requirement, i.e., a visually pleasing saliency map. The proposed method demonstrates better performance for both requirements. In Fig. 1 , where the target class is ''eggnog'', note that the proposed method correctly indicates the eggnog regions inside the glass. In addition, our saliency map retains clear object shapes and thus is visually pleasing. We believe that visually pleasing saliency maps can help machine learning experts select appropriate models and optimize hyperparameters and are essential in helping lay persons (such as doctors and public safety officers) choose and use a reasonable AI system. Our primary contribution is a region-based approach that estimates feature importance in terms of appropriately segmented regions. By fusing saliency maps generated from multi-scale segmentations, a more class-discriminative and visually pleasing map is obtained. Example results of the conventional methods and the proposed method. The input image is classified as ''eggnog''. The conventional methods are deconvolution (DC) [10] , sensitivity analysis (SA) [7] , layer-wise relevance propagation (LRP) [11] , prediction difference in Algorithm II (PD) [17] , and gradient-weighted class activation mapping (Grad-CAM) [5] . Note two color bars representing the ranges. The maps of the five conventional methods were made using official software (https://github.com/lmzintgraf/DeepVis-PredDiff) and official site (https://lrpserver.hhi.fraunhofer.de/image-classification).\nAvoiding a tradeoff between accuracy and interpretability is another important issue. For example, to obtain high classdiscriminability, the class activation map (CAM) method that works on only the convolutional neural networks (CNN) with global average pooling sacrifices with 1% \u223c 5% accuracy [8] .\nIn our implementation, we incorporate the regional multiscale idea into a prediction difference method that is modelagnostic, i.e., applicable to any learning model without modifying internal operations.\nThe proposed method was evaluated qualitatively and quantitatively and was compared to state-of-the-art methods. The results demonstrate that the proposed method produces much more class-discriminative and visually pleasing saliency maps ( Fig. 1 ). In addition, the proposed method is two orders of magnitude faster than the conventional prediction difference algorithm.\nIn Section II, the related work is reviewed. Section III describes the conventional and proposed algorithms. Section IV presents qualitative and quantitative experiment results. Section V presents the paper's conclusions."}, {"section_title": "II. RELATED WORK", "text": "Making a learning model interpretable involves interpreting the model itself and interpreting the predictions of individual input instances. The simplest form of interpreting a CNN model is the visualization of filters and feature maps generated by the CNN, which includes an activation maximization technique that searches for an input-domain map that maximizes a node's response [5] , as well as schemes that are extended using effective regularizers [9] .\nInstance interpretation seeks to explain why the model arrives at the classification decision given a particular instance and a target class. This paper focuses on this concept, particularly on methods that estimate the importance (or relevance) of features (pixels, in the case of images) with respect to a classification decision."}, {"section_title": "A. SALIENCY MAPS FOR EXPLAINING CNN DECISIONS", "text": "Given an instance image input to a trained CNN, the CNN generates a class prediction. Based on the prediction, an interpretation model measures the impact of a pixel or a region on the prediction. The value assigned to the corresponding pixel or region of the saliency map depends on the extent of impact; i.e., greater impact results in a higher value. Several different methods to estimate impacts have been proposed.\nSimonyan et al. proposed a gradient-based estimation method, which they referred to as sensitivity analysis (SA) [7] . The gradient indicates how much a small change in a pixel influences the class output. The gradient map itself is considered the saliency map. Zeiler and Fergus proposed a deconvolution method [10] . In their method, when a user designates a neuron in a hidden or output layer, the forward signal is reversed at the neuron and back-propagated to the input space. Bach et al. proposed the layer-wise relevance propagation (LRP) method in which class-decision information in the output layer is decomposed into pixelwise relevance values and back-propagated while satisfying the conservation rule [11] . Samek et al. emphasized the importance of quantitative evaluation and provided a rigorous comparison of the three abovementioned methods [12] . Shrikumar et al. pointed out the limitations of the gradientbased approach and proposed the DeepLIFT technique to address these problems [13] . Zhou et al. devised the CAM technique that exploits global-average pooling [8] . Selvaraju et al. extended CAM to Grad-CAM so that it could be applied to a wider range of CNNs [5] . The local interpretable modelagnostic explanation (LIME) optimizes a separate model g to explain the classification model f , where g should be interpretable, such as a linear classifier or decision tree [4] .\nExplaining with text is also worthy of attention. Most studies employ a learning model comprising CNN and long short-term memory (LSTM) concatenation. Feature vector outputs from the CNN encoder are passed to an LSTM-based decoder that generates explanatory texts. Barrat proposed a learning algorithm that uses training sample (x, y, E), where x and y are the input image and class label, respectively [14] .\nHere, E represents the class-discriminative textual features such as ''this is a bird with a white belly, brown back, and white eyebrows''. Dong et al. extended the text explanation to video clips [15] .\nRobnik-Sikonja and Kononenko proposed the prediction difference method [16] , and several studies have extended and improved this method [15] , [17] . The proposed regional and multi-scale approach is embedded in the prediction difference; thus, we will review the prediction difference in greater detail. VOLUME 8, 2020 B. PREDICTION DIFFERENCE Prediction difference measures the difference between the prediction for a feature vector and the prediction for the same feature vector without feature i. The essential problem is how to exclude feature i from the original feature vector. Robnik-Sikonja et al. proposed a principled method that simulates feature exclusion based on marginal probability [16] . A formal generic code will be presented in Section III-A. Since excluding a pixel (feature) or a region is impossible in a CNN, a reasonable simulation method is required. Zintgraf et al. presented solutions that use prior knowledge about the image characteristics [17] . Then, they applied the solutions to a CNN that classifies natural images in ImageNet. Conditional sampling considers the fact that a given pixel value is highly dependent on neighboring pixels, and multivariate analysis excludes a rectangular region rather than a single pixel (Section III-B). Petsiuk et al. presented the randomized input sampling for explanation (RISE) method, which generates an importance map indicating how salient each pixel is for prediction of the black-box model [18] . To simulate feature exclusion, RISE used randomly masked versions of the input image. Fong and Andrea used metalearning to maximize the interpretability of a model [19] . An optimized framework that learns a minimum perturbation mask from the corresponding response to its output neuron has also been proposed [19] . However, this framework often fails to optimize its results because of its sensitivity to various types of models and instances.\nDong et al. improved the interpretability of a videocaptioning CNN-RNN model by embedding the prediction difference maximization operation in the model [15] . The learning stage uses an objective function that maximizes the discriminability and interpretability of a learning model. Interpretability is represented by a topic model (semantic representation) constructed by parsing target-text descriptions. After completing the learning stage, prediction difference maximization is applied to search for correspondence between neurons (features extracted from video frames by a CNN) and semantic topic words. The correspondence information enables a neuron to visualize the activation levels for both relevant and irrelevant words across consecutive video frames."}, {"section_title": "C. LIMITATIONS OF CONVENTIONAL METHODS AND COMPARISONS WITH THE PROPOSED METHOD", "text": "We describe the limitations of the abovementioned methods and compare them with the proposed method in terms of four criteria. The proposed method corresponds to former choices for four criteria, i.e., regional, multi-scale, model-agnostic, and syntactic.\nRegional vs. Non-Regional: As shown in Fig. 1 , all methods except the proposed method apply a pixel-wise approach. The pixel-wise approach has the limitation of not considering that the inherent nature of images is that neighbor pixels have similar properties. For this reason, compared to the proposed method, their saliency maps are less classdiscriminative and not visually pleasing.\nMulti-Scale vs. Single-Scale: The regional approach requires segmenting an image into a set of regions. The granularity (size) of the segmented regions is very important. One of our key ideas is a multi-scale processing that fuses maps from coarse to fine scales. Pixel-wise methods are single-scale processing approaches that only rely on the atomic scale. The multi-scale property is another means for the proposed method to achieve better class discrimination in saliency maps that are visually pleasing.\nModel-Agnostic vs. Model-Dependent: The methods based on the prediction difference are inherently model-agnostic. That is, they are applicable to any learning model, such as neural networks, SVM, decision tree, random forest, and even the ensemble method, because they rely only on the output values regardless of internal workings of the models. The LIME described in Section II-A is model-agnostic [4] . LIME is cumbersome since g should be faithful to f ; therefore, another model selection and optimization for g should be resolved properly. The other methods mentioned in Section II-A modify the model's internal operations or rely on the model's internal values; thus, they are model-dependent.\nSyntactic vs. Semantic: The saliency maps in Fig. 1 and Fig. 7 show activation levels to explain the extent to which parts of the image influence the classification decision. Thus, the maps syntactically interpret CNN decisions. In contrast, textual descriptions that include topic models are considered to provide semantic interpretations [14] , [15] ."}, {"section_title": "III. ALGORITHMS", "text": "When explaining the classifier's decision, the causal effect that the change in one feature value (or the values of a feature subset) has on the prediction value can be used as essential information. The greater the effect, the more important we consider the changed features. The principle of prediction difference originates from this simple observation. Specifically, the prediction difference measures the value f (x) \u2212 f (x \\i ) between the prediction f (x) with all features, and the predic-\nIn practice, the difference is measured relative to a specific class label, and the classifier provides a probability for each of the class labels. Thus, the term f (x) is replaced with p(y|x) in the following descriptions."}, {"section_title": "A. GENERIC PREDICTION DIFFERENCE CODE", "text": "The prediction difference procedure is described by the generic code of Algorithm I [16] . The code is a type of meta-algorithm where several options should be specified during implementation, such as classifier type and method for excluding feature i. Robnik-Sikonja et al. proposed a simulation scheme that formulates the exclusion of feature i by marginalization in (1), where the i\u2212th feature has the domain x i \u2208 {a 1 , a 2 , \u00b7 \u00b7 \u00b7 , a m i }. Since the term p(x i = a j |x \\i ) in the first summation is, in most cases, impossible to calculate,"}, {"section_title": "Algorithm I Generic Prediction Difference Code", "text": "Input: trained classifier f , instance feature vector x, target class c Output: saliency vector s 1: Run f to get p(y = c|x) 2: for each feature i of x do 3:\nEstimate p(y = c|x \\i ) using (1) 4:\nthe second summation is used as an approximation. Here, x \u2190 x i = a j denotes the feature vector x where the value of x i is set to be a j .\nIn Algorithm I, g in line 4 is a function that computes the prediction difference. The simplest function is the subtraction g(a, b) = a \u2212 b. Refer to [16] for other schemes such as information difference and weight of evidence. for j = 1 to r do // sampling r times 7:\nReplace x in of x with a patch sampled from p(x in |x out\\x in ) 8:\nRun f to get p(y = c|x ) 9: sum+ = p(y = c|x ) 10: end for 11: p y = c | x \\i = sum/r 12:\nfor every pixel q in x in do 13:\ns q + = g (p(y = c|x), p(y = c|x \\i ) ; c q + + 14:\nend for 15: end for 16: s=s/c // element-wise division this by replacing x in of x with a sampled patch. The sampling is performed from a distribution of p(x in |x out\\x in ). In the implementation, the mean and variance of a normal distribution are calculated from the pixels in x out\\x in ; i.e., the gray area in Fig. 2(a) . Line 7 substitutes the values of the pixels in the patch x in (the white area of Fig. 2(a) ) with values obtained by sampling the normal distribution. In addition, to simulate the marginal probability, Algorithm II executes line 7 r times, and line 11 takes the average. Note that to obtain a smooth saliency map, line 13 assigns the average to every pixel in the patch x in . Examples of saliency maps produced by Algorithm II are shown in Fig. 7(d) . Though the algorithm attempts multiple sampling and propagation of the average to neighboring pixels, the output saliency map is still problematic in the sense that saliency values are dispersed inside object regions and leak into the background regions. As a result, such a saliency map does not appear to be particularly useful for explaining CNN predictions.\nLine 8 performs forward computation and is a computationally expensive step. Algorithm II is very slow because this line is executed rn 2 times for an n \u00d7 n image. Algorithm II required 30 minutes to execute on a GPU for a 256 \u00d7 256 image, where k = 10 l = 14, and r = 10 [17] ."}, {"section_title": "C. REGIONAL MULTI-SCALE PREDICTION DIFFERENCE", "text": "If we continue to employ pixel-wise processing, the dispersion and leakage problems of Algorithm II cannot be remedied. Thus, we propose a regional approach as a solution that is easily embedded into the generic code of Algorithm I. Since the proper granularity of regions is not known in advance, we also propose a multi-scale approach. These regional and multi-scale approaches are combined and described in Algorithm III.\nIn Algorithm III, lines 2 and 4 require region segmentation. The superpixel method has the advantage that the number of resulting regions is controllable, thereby enabling multi-scale processing; therefore, we adopt a previously proposed algorithm: entropy rate superpixel segmentation [20] . We chose this paper because it is the most frequently cited. We refer the reader to [21] for a survey of the issues related to superpixel segmentation. Note that line 2 uses a fixed scale (2 8 ) and line 4 goes through multiple scales (2 1 to 2 r ). When the image is segmented into k superpixels, this scale will be denoted as k-level segmentation. In addition, lines 2 and 6 cooperate Algorithm III Regional Multi-Scale Prediction Difference Input: trained classifier f , image x, target class c, multiscale number r Output: saliency map s 1: Run f to get p(y = c|x) 2: Estimate N (\u00b5, \u03c3 2 ) from the image x segmented with scale 2 8 3: for j = 1 to r do // for each scale 4:\nPerform a segmentation with the scale 2 j 5:\nfor each region i do 6:\nSimulate the exclusion of i using N \u00b5, \u03c3 2 , i.e., x \\i 7:\nRun f to get p(y = c|x \\i ) 8:\nfor each pixel q in the region i do 9: s j q = max 0, g p(y = c|x), p(y = c|x \\i ) 10: end for 11: end for 12: end for 13: s = 1 r r j=1 s j to simulate region exclusion, and these lines exploit the boundary prior, i.e., the inherent nature of boundary regions belonging primarily to backgrounds [22] . Line 2 prepares a normal distribution that will be used by line 6 for sampling background-like pixel values. Here, the RGB mean vector for each of the boundary regions (shown in Fig. 2(b) as gray superpixels) is calculated separately, and those mean vectors are used as sample points to estimate the normal distribution. Note that some object regions (e.g., those shown as dark gray superpixels in Fig. 2(b) ) may be boundary regions; thus, to avoid them from participating in the estimation, we apply the mean shift algorithm and select the largest cluster, where the mode of the largest cluster is taken as the mean \u00b5 of the normal distribution and the variance \u03c3 2 is fixed at 10.0. Line 6 simulates the exclusion of region i. Here, each pixel in the region is substituted with a sample drawn from N (\u00b5,\u03c3 2 ). Note that the negative impact is ignored using the max operator in line 9.\nLine 7 executes the forward computation of a deep neural network. Here, the number of executions is 2 1 + 2 2 + \u00b7 \u00b7 \u00b7 + 2 r , e.g., 62 executions for r = 5. Compared to rn 2 in Algorithm II, this number represents dramatically lower computational complexity."}, {"section_title": "IV. EXPERIMENT RESULTS", "text": "In our experiments, the visual and quantitative comparisons of five state-of-the-arts methods and the proposed method (Algorithm III) were conducted on the ILSVRC 2012 dataset (ImageNet) [23] . For the trained model, we used the GoogLeNet [24] , ResNet-50 [25] and VGG-16 [26] models. We set the input parameter r of Algorithm III to 5. The experiments were performed on an Intel Core i5-4670 CPU (3.40 GHz) with an Nvidia GTX1080 GPU. The segmentation is performed six times, one for line 2 and five for line 4 (when r = 5). It consumes less than 0.1 second, so the segmentation time is negligible. The dominant time is affected by the line 7 (classification stage). The total number for executing line 7 is 2 + 4 + 8 + 16 + 32 = 62, resulting in about five seconds by Algorithm III. The running time of the white-box models such as SA and Grad-CAM is about 0.2 seconds since only a single feedforward execution is necessary.\nIn the quantitative comparisons, two evaluation metrics are used: intersection over union (IOU) and the pointing game [27] . The IOU score was calculated by comparing the predicted bounding box and the bounding box extracted from the ground truth label. Since the score varies depending on the threshold values of intensity map, both the mean and maximum accuracy are reported. To evaluate whether the visualization model correctly points to the target object, Zhang et al. [27] proposed the pointing game task, which uses ground truth labels as cues. The pointing game measures the localization accuracy by Acc = #Hits #Hits+#Misses for each object category."}, {"section_title": "A. EFFECT OF REGIONS", "text": "As the most important analysis of our algorithm, Fig. 3 demonstrates the causal effect that region exclusion has on the prediction score. The sample image is from the ImageNet dataset. When the region corresponding to the ''Samoyed'' target class is erased, as shown in Fig. 3(b) , the prediction score dramatically drops from 70.63% to 0.01%. The other cases of erasing irrelevant regions shown in Fig. 3(c) and (d) show little effect. We can be sure that the CNN can distinguish different species of dogs because no impact is observed when erasing other dogs. Fig. 3(e) shows the saliency map for the 16-level segmentation scale. From these observations and the subsequent sections, we believe that the proposed regional approach with superpixel segmentation and boundary priorbased region exclusion simulation is very effective and viable. "}, {"section_title": "1) EFFECT OF THE SEGMENTATION SCALE", "text": "The analysis in this section is related to the multi-scale processing. The objects in natural images appear in various sizes. Fig. 4 shows two sample images where the violin is larger than the Samoyed. Each row shows the saliency maps resulting from 2-to 32-level segmentations. As shown in the top row, coarse-scale segmentation explains the global shape of the violin well, while fine-scale segmentation explains the details faithfully. In the bottom row, the target object is well explained in the middle (8-level) to fine scales (16-and 32level) . Table 1 and Fig. 5 show the localization performance of the single-scale and multi-scale maps. We measured the maximum and mean IOU scores. The mean IOU represents the AUC (area under curve). The experiment results confirm the effectiveness of the multi-scale fusion. 2) SUPERPIXEL VS. GRID MASK This paper uses superpixels as a region unit, whereas Zintgraf et al. [17] and Zeiler and Fergus [10] used grid masks. In the grid mask method, the image is divided into equal-sized rectangular grids, and each grid is used as a region unit. We applied both the grid mask and the superpixel to Algorithm III to compare the effectiveness of producing visually pleasing saliency maps.\nThe saliency maps for a sample image from the ImageNet dataset are presented in Fig. 6 . The target class of the image is ''black grouse''. As shown in Fig. 6(b) , the saliency map using superpixel preserves the object shape well. In contrast, the object shape has been completely destroyed in the saliency map produced by using grid masks, as shown in Fig. 6(c) . A quantitative evaluation using IOU scores is also presented in Table 2 . The IOU was measured pixel-wise using pixel-level ground truth in Fig. 6(d) . The images in the Ima-geNet localization validation set were used for the experiment [28] . The maximum IOU score is shown in bold type in the table. The superpixel method gives 35.0 at threshold 0.3 and 0.4, whereas the grid mask method gives just 27.9 at threshold 0.1. The mean IOU of the superpixel method is 29.0%, which is 7.3% higher than the grid mask method. Based on these results, we believe that the superpixel segmentation is reasonable, both qualitatively and quantitatively. Fig. 7 compares the results of the proposed method to those of five conventional state-of-the-art methods. The saliency maps of DC, LRP, and SA look similar to point clouds, and those of PD and Grad-CAM are similar to blobs and contours, respectively. The proposed method produces saliency maps that retain the object shapes effectively, leading to a visually pleasing result. A user can easily perceive the highlighted objects in a saliency map produced by the proposed method; thus, it is expected that the user will trust the system more. In the saliency maps produced by the Grad-CAM method, the user must attempt to identify objects by looking alternately at the original image and saliency map. The bottom row of Fig. 7 attempts to overlap the saliency map of the Grad-CAM method onto the original image. However, it is difficult to perceive the highlighted object in the resulting image. We believe that the visually pleasing aspect of the proposed method leads to perceptual attractiveness and increases user trust in the system."}, {"section_title": "B. QUALITATIVE COMPARISONS OF VISUAL QUALITY", "text": "In terms of class-discriminability, the DC and LRP methods reveal a clear limitation; i.e., they tend to emphasize object edges and do not detect the right places for the target class. For example, the images belonging to the ''chocolate syrup'' and ''coffee mug'' classes should be differently [10] , sensitivity analysis (SA) [7] , layer-wise relevance propagation (LRP) [11] , prediction difference in Algorithm II (PD) [17] , and gradient-weighted class activation mapping (Grad-CAM) [5] . Note the two color bars representing the ranges. highlighted on the inside content and container surface. However, the DC and LRP methods only found the edges of the container for both classes. This observation indicates that these methods cannot distinguish the chocolate syrup and the coffee mug. The Grad-CAM method correctly detects the inside content and the handle of the container for these two classes. Note that these components are also well distinguished by the proposed method, but it is unclear whether the SA and PD distinguish two classes or not. Considering the qualities of the other images in Fig. 7 , we conclude that the proposed method and the Grad-CAM method show greater class-discrimination ability compared to the other methods.\nWe have experimented with many other images from Ima-geNet and other datasets, and we have carefully analyzed their saliency maps. As a result, we conclude that the observational facts discussed so far are consistently maintained. Experiments with AlexNet, VGG-16, and ResNet-50 produced a performance similar to GoogLeNet."}, {"section_title": "C. QUANTITATIVE COMPARISONS OF VISUAL QUALITY", "text": "This section evaluates the localization performance of the proposed regional multi-scale approach and other methods using the ImageNet localization challenge dataset [28] . Sample images are presented in Fig. 8 . The other methods are occlusion sensitivity [10] , LIME [4] , SA [7] , and Grad-CAM [5] . ResNet-50 was used [25] . 9 presents the IOU scores obtained by thresholding the saliency maps. The Grad-CAM achieves the best performance when the threshold is set to 0.1, which agrees with the experiment results presented in the paper [5] . The line for Grad-CAM rapidly drops as the threshold increases. This finding indicates that Grad-CAM focuses only on a specific part of the relevant object rather than highlighting the whole object region. The SA and Occlusion show sharper decreases with increasing thresholds than Grad-CAM. LIME maintains a similar IOU over the whole range because it usually produces very large regions. Our proposed method achieves the best performance (55.0) at threshold 0.3. Our method leads all the other methods over almost the entire range.\nThe IOU scores in Fig. 9 are summarized in Table 3 . The bold type indicates the best score in each column. Our method achieves values of 55.0 and 42.9 for the maximum and mean IOU scores, respectively, which significantly outperforms other methods. In terms of the pointing game, our method and Grad-CAM achieve the same results. Both Grad-CAM and our method focus well on the most important parts of the images. Thus, they produced a similar pointing game score. However, our method is better than Grad-CAM at finding the entire object region, so our method achieved a much better IOU score. Table 4 shows the IOU and pointing game scores according to the object size of the target class. The object size is categorized into four groups ranging from <0.25 to <1.0 of the image size. All methods produce lower scores when the object is small. In terms of IOU, our method shows the best score except in the <0.25 case. Grad-CAM shows the best performance for the pointing game,\nThe performance of the two CNN models (ResNet-50 [25] and the VGG-16 model [26] ) is also analyzed in Table 5 . Only our method and Grad-CAM are compared. With ResNet-50, Grad-CAM scores the same as ours in the pointing game, but our method scores higher with VGG-16."}, {"section_title": "D. APPLICATION ON NEURO-IMAGING DATA", "text": "In this experiment, we consider a neuro-imaging classification problem to demonstrate the applicability of the proposed visualization method in a medical imaging domain. We employed 3D-magnetic resonance imaging (MRI) scans reflecting 199 Alzheimer's disease (AD) vs. 230 healthy normal control (NC) brain images from the publicly available Alzheimer's Disease Neuroimaging Initiative (ADNI-1) [29] .\nA 3D-CNN was employed for classification of AD vs. NC. Due to limited dataset size, 3D-MR images are spatially normalized based on a template brain image, and an unsupervised learning technique (convolutional autoencoder) is applied before the supervised learning to extract a sparse visual representation of neuro-imaging data. The overall architecture is comprised of three 3 * 3 * 3 conv layers with 10 filters each, two FC layers with 32 and 16 channels each, and softmax activation. Each of the conv layers is followed by ReLU and 2 \u00d7 2 \u00d7 2 max-pooling. A Gaussian dropout ratio of 0.8 is applied in between conv layers. In the FC layers, we used SELU activation to accelerate learning and to have a normalization effect on the FC layers.\nThe five-fold cross-validations were conducted to evaluate the classification model. The mean accuracy was 85.31%. We modified the proposed method (Algorithm III) to be suitable for processing 3D-MR images. We employed a supervoxel segmentation algorithm, and we used segmentation levels from 28 to 210 for the multi-scale processing. Fig. 10 shows a saliency map obtained by averaging the 199 AD saliency maps. Note that the highlighted area appears around a medial temporal lobe that includes the amygdala, the hippocampal formation, and the entorhinal cortex. In the previous studies [30] - [33] , the medial temporal lobe has been reported as being the most important brain region that is highly related to AD. These observations show that the proposed method successfully explains the 3D-CNN's decision by highlighting the most important brain area for AD diagnosis."}, {"section_title": "V. CONCLUSION", "text": "This paper has proposed a new requirement-i.e., being visually pleasing-that is important for interpreting predictions in a perceptually attractive manner. An intelligent system that enables a visually pleasing interpretation is expected to receive higher trust from users. This paper has presented the regional multi-scale prediction difference method as a viable solution. Through comprehensive experiment analyses (both quantitative and qualitative), this paper has demonstrated that the proposed method is much more class-discriminative and visually pleasing than state-of-the-art methods. In the future, there is a plan to perform actual user studies. This approach can be applied not only to image classification but also to other computer vision problems such as visual questionanswering. Embedding the regional multi-scale concept into other methods such as Grad-CAM will be another focus of future work. To evaluate superpixel semantic performance, a segmentation dataset such as MS-COCO will be used. In addition, semantic interpretation performed by incorporating our method into CNN-RNN models will also be utilized in future.\nKANGHAN OH received the B.S. degree in computer science from Honam University, in 2010, South Korea, and the Ph.D. degree in electronic and computer engineering from Chonnam National University, South Korea, in 2017. He is currently a Postdoctoral Researcher with the Division of Computer Science and Engineering, Jeonbuk National University, South Korea. His research interests include object detection, neuroimaging, and document image processing.\nIL-SEOK OH received the B.S. degree in computer engineering from Seoul National University, South Korea, and the Ph.D. degree in computer Science from KAIST, South Korea, in 1984 and 1992, respectively.\nHe was a Visiting Scientist with CENPARMI, Concordia University, Canada, and UCI, USA. He is currently a Professor with the Division of Computer Science and Engineering, Jeonbuk National University, Jeonju, South Korea. His research interests include computer vision, pattern recognition, and machine learning. He is the author of the books Pattern Recognition, Computer Vision, and Machine Learning (written in Korean)."}]