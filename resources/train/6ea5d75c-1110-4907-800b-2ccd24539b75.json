[{"section_title": "Abstract", "text": "In this article, we describe a detailed method for automatically generating tetrahedral meshes from 3D images having multiple region labels. An adaptively sized tetrahedral mesh modeling approach is described that is capable of producing meshes conforming precisely to the voxelized regions in the image. Efficient tetrahedral mesh improvement is then performed minimizing an energy function containing three terms: a smoothing term to remove the voxelization, a fidelity term to maintain continuity with the image data, and a novel elasticity term to prevent the tetrahedra from becoming flattened or inverted as the mesh deforms while allowing the voxelization to be removed entirely. The meshing algorithm is applied to structural MR image data that has been automatically segmented into 56 neuroanatomical sub-divisions as well as on two other examples. The resulting tetrahedral representation has several desirable properties such as tetrahedra with dihedral angles away from 0 and 180 degrees, smoothness, and a high resolution. Tetrahedral modeling via the approach described here has applications in modeling brain structure in normal as well as diseased brain in human and non-human data and facilitates examination of 3D object deformations resulting from neurological illness (e.g. Alzheimer's disease), development, and/or aging.\n\u00a9 2010 Elsevier Inc. All rights reserved.\nApproaches to the geometric modeling of neuroimaging data have existed for a number of years and have been aggregated into a commonly used framework for assessing, representing, and displaying the results from structural and functional magnetic resonance (MR) investigations (Joshi et al., 1997; Miller et al., 2009; Thompson et al., 2009 ). These methods seek to, at once, model the 2D embedded surfaces of the brain, measure the inherent geometric properties of those surface manifolds, and to use collections of 2D surfaces to measure sub-elements of brain thickness and volume that lie between them. Yet, such surface meshes alone do not typically capture the 3D nature of the cerebrum, its defined sub-divisions, and embedded subelements, i.e. closed surface meshes work well for modeling 2D edges and boundaries of an object but they do not account for the space inside of the surface. What is needed are efficient methods for generating space filling meshes that not only represent the surface of the object of interest but fill that object with a connected lattice that facilitates more comprehensive registration and resulting statistical analysis of brain structural change. In this paper, a robust model is described for the generation of 3D tetrahedral meshes applied to MR brain data. Such finite element modeling approaches provide a useful extension for surface-based modeling and give rise to many applications in the study of 3D brain architecture.\nIn what follows, the use of surface mesh modeling in the neuroimaging literature is discussed, the use of finite element modeling approaches is examined, a detailed method for generating tetrahedral meshes is introduced, mesh generation on MRI data from several human subjects and on animal data is illustrated, and several other applications where tetrahedral meshes are advantageous are described. The paper concludes with summary of this approach and a brief description of future work in the application of tetrahedral meshes for neuroscience imaging data."}, {"section_title": "Introduction", "text": "Approaches to the geometric modeling of neuroimaging data have existed for a number of years and have been aggregated into a commonly used framework for assessing, representing, and displaying the results from structural and functional magnetic resonance (MR) investigations (Joshi et al., 1997; Miller et al., 2009; Thompson et al., 2009) . These methods seek to, at once, model the 2D embedded surfaces of the brain, measure the inherent geometric properties of those surface manifolds, and to use collections of 2D surfaces to measure sub-elements of brain thickness and volume that lie between them. Yet, such surface meshes alone do not typically capture the 3D nature of the cerebrum, its defined sub-divisions, and embedded subelements, i.e. closed surface meshes work well for modeling 2D edges and boundaries of an object but they do not account for the space inside of the surface. What is needed are efficient methods for generating space filling meshes that not only represent the surface of the object of interest but fill that object with a connected lattice that facilitates more comprehensive registration and resulting statistical analysis of brain structural change. In this paper, a robust model is described for the generation of 3D tetrahedral meshes applied to MR brain data. Such finite element modeling approaches provide a useful extension for surface-based modeling and give rise to many applications in the study of 3D brain architecture.\nIn what follows, the use of surface mesh modeling in the neuroimaging literature is discussed, the use of finite element modeling approaches is examined, a detailed method for generating tetrahedral meshes is introduced, mesh generation on MRI data from several human subjects and on animal data is illustrated, and several other applications where tetrahedral meshes are advantageous are described. The paper concludes with summary of this approach and a brief description of future work in the application of tetrahedral meshes for neuroscience imaging data."}, {"section_title": "Tessellated surface representations", "text": "The creation of 2D surface-based models of the mammalian cortex first became of interest to neuroscientists in the 1980s (Van Essen and Maunsell, 1980) becoming mainstream with the widespread growth of MR imaging and the use of computationally-based approaches for surface fitting, generation, and representation (Dale et al., 1999; Fischl et al., 1999a,b,c) . Surface models of the cerebral cortex permit quantification of not only the particular surface geometry itself (e.g. shape index and local curvature (Thompson et al., 1996) , cortical folding (Fischl et al., 2008) , etc.) but with nested surfaces, often representing the outer cortical surface as well as the gray/white matter boundary, it is possible to measure cortical thickness (Fischl and Dale, 2000) , sulcal depth (Tosun et al., 2007) , as well as the fractal characteristics (Kuriakose et al., 2004) of the cortical sheet. Surface based approaches have now been widely applied to measure the cortical geometry normal (Shattuck et al., 2009 ), schizophrenic (Narr et al., 2007) , aging (Apostolova et al., 2010 ), Alzheimer's disease , Williams syndrome (Van Essen et al., 2006) , and many other subject populations. Lastly, cortical surface models provide a convenient canvas upon which to \"paint\" patterns of cortical activity obtained during cognitively induced blood oxygenation level dependent change from functional MRI experiments (Van Essen et al., 1998; Tootell and Hadjikhani, 2001; Slotnick and Yantis, 2003; Ekstrom et al., 2009) . So important have surface models become in the context of brain imaging that proposals to create databases of surface representations as well as population based average surfaces have been put forward with much success (Van Essen, 2005 ).\nYet while surface-based representations provide a useful context for the representation of embedded manifolds contained in MR data sets (e.g. the outlines of the basal ganglia (Ballmaier et al., 2008) , lateral ventricles (Chou et al., 2009) , etc.) they present limitations, as well. Surfaces are fundamentally described by their topological characteristics (e.g. Euler numbers, genus, etc.) wherein in extreme cases, some processing algorithms require that surfaces be continuously differentiable while not having any errors in the topology (e.g. \"handles\" or \"holes\") that must often be corrected by hand. The reasons for such constraints include: (1) in the case of examining fMRI data is the desire of the investigator to smooth or flatten the cortical model to more precisely examine loci of BOLD activation existing with sulcal folds; (2) in surface-based atlasing where the cortical surface may be inflated, represented as a sphere, and subjected to population averaging; and/or (3) surface models subjected to tensor based morphometric (TBM) approaches to examine the relative changes in cortical geometry as a function of disease state (Leow et al., 2006; Chiang et al., 2007; Thompson and Apostolova, 2007) . Whereas surfaces lend themselves nicely to the challenges of geometric representation in neuroimaging data, they are insufficient to fully describe brain anatomy due to their non-volumetric nature (e.g. they are 2D sheets in a 3D space). What is needed is an extended framework that provides a fully 3D generalization of the surfacebased approach but does so in a way that possesses unique attributes that enable new forms of morphometric measurement."}, {"section_title": "Finite elements and mesh generation methods", "text": "Finite element methods have been widely used in physics based modeling for some time (Hughes, 2000; Logan, 2007; Roters et al., 2010) , but are now beginning to be used in image processing applications as well, such as image registration (Joshi et al., 2007) and various types of deformable modeling (Wang et al., 2004) . These applications require the construction of a volumetric mesh, and tetrahedral meshes are most common type. Tetrahedral mesh modeling and analysis (TMMA) is an active area of research even for single region objects with well defined boundaries (e.g. Labelle, 2007) . Generation of a tetrahedral mesh from an image poses particular difficulties due to the \"voxelization\" of the image, which is a byproduct of how the image is captured, thresholded, and stored and not reflective of the true shape of the imaged object. For instance, the left side of Fig. 1A and B shows tetrahedral meshes that conform exactly to an image of a perfect sphere while on the right is a mesh of the same image but with the voxelization removed using the method described below. It is frequently assumed that a smoothed representation is a better approximation to the true, underlying object. Another means for removing the voxelization would simply be to generate tetrahedra much larger than the image voxel size, however this can result in loss of information and so is not advisable. Of the many mesh generation methods, only a few have been designed to or adapted to work specifically for medical images. Whether or not a mesh generated from an image volume is considered to be an accurate representation of the underlying object is somewhat dependent on the application, but a few useful metrics considered here for assessing mesh quality are the range of dihedral angles of the tetrahedra, the adaptivity of the tetrahedral sizes, conformity to the data, boundary smoothness, and the robustness of the method. Examples of existing methods for tetrahedral generation are briefly summarized below.\nOne of the most common approaches for tetrahedral mesh generation has been the Delaunay method (Weatherhill and Hassan, 1994) . One limitation of the Delaunay approach is that it can allow tetrahedra to possess exceedingly small dihedral angles, although some research has attempted to address this (Freitag and OllivierGooch, 1997) . A means of finding the regional boundaries in images for Delaunay mesh generation has been proposed by Fang and Boas (2009) . A limitation of this approach is that a 2D triangulated mesh needs to be generated a priori as an input to the Delaunay tetrahedral mesh generation method. Non-intersecting and topologically accurate high resolution triangulated meshes can be difficult to generate for images with multiple regions having complicated boundaries. Any intersections that occur in generating this web of surfaces will cause the Delaunay method to fail, since it is sensitive to topological defects of the input surface mesh such as self-intersections and overlapping regions. In contrast, the method described in this article works directly on segmented images, instead of on surfaces extracted from them, and therefore avoids these issues.\nIterative approaches to tetrahedral mesh generation and improvement have also been proposed. Ferrant and Warfield (2004) have suggested covering objects of interest with tetrahedra and systematically subdividing those on the boundary via several approaches. However, use of tetrahedra larger than the image voxel size means that the resulting mesh could contain less information than the original image. Thus, applications using certain iterative mesh improvement methods may be disadvantageous compared to other finite difference methods which operate on the more detailed image. Tetrahedralizing images based on octree techniques has been discussed by Mohamed and Davatzikos (2004) as well as by Zhang et al. (2005 Zhang et al. ( , 2008 . In contrast to the Ferrant et al. approach, the Zhang et al. method is able to produce smooth meshes with high resolution. We provide a thorough comparison of this approach to our own method in the results section.\nAnother technique involves constructing a mesh that approximates the desired geometry and then physically deforming it. In the method described by Molina et al. (2003) the entire single region of interest is covered with adaptively sized tetrahedra. A force is then applied to push the boundary nodes close to the known boundary while tetrahedra quality is maintained by an elastic response. In a second step, the boundary nodes are moved to lie exactly on the known boundary regardless of the elastic response. This second step could potentially allow elements to be crushed (e.g. dihedral angles equal to zero) if the data to be meshed is poor. This method will only work if a single region is to be meshed and is not designed to directly mesh an image. Despite the fact that this is a physics based method and the one proposed is an optimization based one, this method bears the most resemblance to the proposed one in that it improves a constructed mesh rather than employing the widely used Delauny method."}, {"section_title": "Advantages of tetrahedral meshes", "text": "Tetrahedral meshes have particular utility in image alignment and registration. Additionally, tetrahedral finite element mesh models of brains have applications in modeling of spatial brain deformation during neurosurgery (Nimsky et al., 2000; Nabavi and Black, 2001; Skrinjar et al., 2002) . Tetrahedral meshes are useful for accurately modeling the bio-mechanical forces acting on the brain which may cause it to deform in a nonlinear manner (Ferrant et al., 2000; Wittek et al., 2005) . Tetrahedral meshes are helpful in modeling of volume conduction effects in EEG and MEG (Van den Broek et al., 1998) and for simulating the potential and magnetic field for realistically shaped head models and understanding the effects current distribution (Hebden et al., 2001; Van Uitert et al., 2003; Darvas et al., 2004) . Finally, tetrahedral meshes have been used in optical tomography, diffuse optical tomography and bioluminescence tomography (Hebden et al., 2001 ) to model diffusion and radiative transfer equation and hemodynamics for human brains, mouse models, as well as modeling the adult human breast (Bluestone et al., 2001; Hebden et al., 2001; Wexler et al., 2002) . Given these applications, accurately generating robust tetrahedral meshes is an important step and deserves particular consideration to the necessary mathematics involved."}, {"section_title": "Proposed mesh generation approach", "text": "In the current paper, a voxel conforming mesh is constructed that has good quality tetrahedra and adaptive sizes inside individually segmented regions. The method proposed in this paper extends the basic approach of Molina et al. (2003) to obtain a structured mesh within region interiors and a modified mesh generation for multiple ROIs to ensure voxel conformity on region boundaries.\nTo perform the smoothing, the methodology of active surfaces (active contours in 2D) is used. Active contours refers to a body of research concerned with finding objects in noisy or otherwise In another illustration, a tetrahedral mesh of the image of a large sphere that conforms exactly to the voxelization (left in yellow) and the recovered smooth sphere (right in fuchsia), resulting in many more tetrahedra being utilized but maintaining dihedral angles between 18 and 155 degrees. In this example only, the boundary was allowed to move without penalty by up to half a voxel to fully remove the voxelization. (C) A tetrahedral mesh generated from an image of random noise. This example demonstrates the robustness of the meshing method, regardless of the number and shape of segmented regions contained in the input image. degraded 2D images (Jifeng et al., 2007; Le Guyader and Vese, 2008) . This is initiated using a simple initial curve (usually a circle) and evolving it to the boundary of an object by attempting to minimize an energy value. The energy typically contains a term for how well the curve matches the boundary and a regularization term, relating to the smoothness or length of the curve. In this method, the voxelization of the image needs to be removed while keeping the overall shape of the regions entirely intact. The energy to be minimized is given below and based on previous work on joint segmentation and registration (Le Guyader and Vese, 2008) ."}, {"section_title": "Materials and methods", "text": ""}, {"section_title": "Image processing on segmented data", "text": "The starting point for this approach is any digital image that has been segmented into N multiple regions at the voxel level. Many established methods are capable of finding distinct regions of interest even if the image quality is relatively low (Tu et al., 2008) . The segmented image can also be easily adjusted to create the thresholded image used for the meshing. For example, unnecessary regions can be removed manually or using a segmentation algorithm, the image dimensions can be adjusted, or necessary topological characteristics can be enforced. For all the examples to follow, a simplistic masking feature is applied as an initial step, which reassigns voxels that share zero or one voxels with another voxel of the same type. This has no effect on smooth regions but removes single voxel features for which it is not appropriate to mesh."}, {"section_title": "Regions and level set generation", "text": "For meshing purposes, every voxel is represented as a unit cube. If two cubes of a different type share a face, then that face is considered as a boundary. This defines both the boundaries of the individual regions (\"region boundaries\") and union of all region boundaries (called here simply \"the boundary\"). The distance function \u03c6 0 (x) to the boundary is computed using the fast marching method (Sethian, 1996) . This function remains fixed, it is computed only once, and is not updated during the iterative process. The distance function is used both for adaptively sizing the tetrahedra and for the active surface smoothing, as discussed below."}, {"section_title": "Voxel conforming mesh generation", "text": "In this step, a tetrahedral mesh that conforms exactly to the voxelized regions of interest is created. Every 1-by-1 square on the boundary is composed of two tetrahedral faces. On each side of the boundary, two tetrahedra, taken together, form a pyramid, whose base is the 1-by-1 square of the boundary and whose apex is exactly at the center of a unit cube formed from a single voxel. In this way, no tetrahedra are permitted to have all 4 nodes on the boundary.\nFor the interior tetrahedra, an adaptive body-centered cubic (BCC) mesh based on Molina et al. (2003) is used. It begins by creating large tetrahedra and refines each of these into 8 identical smaller tetrahedra. This process is continued in an iterative fashion until the degree of fit is satisfied. The signed distance function (Osher and Sethian, 1988 ) is used to determine how many refinements are made. Tetrahedra near the boundary are refined many times, making them smaller, while the interior tetrahedra are refined less and so will tend to be larger. T-junctions can be formed when a node of one tetrahedron lies on the edge of another tetrahedra and results in an unusable mesh. These are identified and systematically removed allowing interior tetrahedral elements to be adaptively sized and have good quality.\nMost meshing methods allow for adaptively sized elements on region boundaries. This is an extremely useful property for meshing an object of arbitrary detail that is flat or nearly in some areas. For example, a mesh of an airplane might only need large tetrahedra for the wings but smaller tetrahedra would be needed for more detailed areas such as the engine nacelle. Medical images, such as those of the brain, usually do not have large flat areas where large tetrahedra can be effectively used. Two other image-to-mesh methods referenced in the introduction, Zhang et al. (2005) and Fang and Boas (2009) , employ tetrahedral generation methods with the capacity for adaptively sized boundaries, but the boundaries of segmented brain regions end up being universally small on the boundaries. In contrast, the methods that mesh arbitrarily detailed boundaries of man-made objects make effective effect use of adaptively sized boundary tetrahedra. Additionally, many image processing applications like registration are concerned with the pooling of data to assess betweengroup differences. A smooth boundary in one mesh should be able to be registered to a less smooth boundary in another mesh or image. Keeping the boundaries at a uniformly high level of detail allows for more types of deformation at the level of detail allowed by the image resolution."}, {"section_title": "Boundary smoothing method", "text": "The effects of voxelization are removed while maintaining the overall geometry of the regions. For the notation of the equations below, we utilize symbols that are standard in continuum mechanics (such as x, X, F) and some that are standard in level set applications (such as \u03b4, \u03a9) when possible. The initial voxel conforming state is given by X, while the deformed state is denoted by x, and the displacement vector field, v, is given by:\nThe smooth mesh is obtained by finding a v that minimizes an energy G(v). G(v) has three additive terms, an elastic term, E(v), a smoothness term, S(v), and a fidelity term B(v). The formula for the energy is: G\u00f0v\u00de = E\u00f0v\u00de + S\u00f0v\u00de + B\u00f0v\u00de:\nThe elastic energy prevents dihedral angles from becoming too small and tetrahedral elements from collapsing. In places where the voxelized region is smooth and well shaped, the elastic term has no effect on the location of the boundary nodes. It is undesirable to have the boundary moved unnecessarily to improve element quality. In poorly shaped regions (most likely from errors in the automatic segmentation), the smoothing should be done as much as possible, but the elasticity should still maintain element quality and affect the location of the boundary nodes. These features allow to the proposed meshing method to succeed in producing a mesh with uniformly good element quality and smoothness and/or accuracy consistent with the accuracy of the initial segmented input image. We employ techniques from nonlinear elasticity (Hughes, 2000) , since these allow larger and smoother deformations.\nThe displacement vector field is related to measures of deformation F and C. Here, I refers to the identity matrix. F is often called the deformation gradient and C is referred to as the right Cauchy-Green Deformation Tensor (Gonzalez and Stuart, 2008) .\nAs done with many existing elasticity models such as the Pedegral (2000), an elasticity penalty is computed using the three invariants of C. If \u03bb 1 , \u03bb 2 , \u03bb 3 are the eigenvalues of F: The first invariant is most affected by large amounts of stretching, the second by large amounts of shearing, and the third by significant changes in volume. The elasticity will provide no resistance to small deformations, but will resist large stretch, shear, and volume changes. While this is not a physically realistic model for solids, it is effective for spreading deformations evenly throughout the mesh. This allows the elasticity to have as little effect as possible on the boundary location while enforcing uniformly high element quality. We first introduce the following functions (as part of the nonlinear elastic component),\nand the elastic penalty term is given by:\nwhere k 1 , k 2 , k 3 , e 1 , e 2 , e 3 are parameters of the meshing model. The function W 3 will resist a change in the volume. The number e 3 when greater than 0 will allow the volume to decrease before any penalty is applied. The functions W 1 and W 2 will apply a penalty if too much stretching or shearing, respectively is applied relative to the volume change. They are initially calibrated to be 0, regardless of e 1 and e 2 , if the deformation is equal in all directions, e.g. if the three eigenvalues of F are all equal. The values of e 1 and e 2 when greater than 0 allow modest stretching and shearing to occur before any penalty is applied. All parameter values used are provided in a detailed listing in Table 1 . This elasticity, E, is a function of all three invariants of the deformation and should resist all possible types of changes in the shape of a tetrahedron. As discussed in the results section, in practice no tetrahedra were noted to approach becoming inverted and a variety of measures show the elements to be of good quality.\nAnother possibility for maintaining element quality is to directly optimize common quality measures, such as a tetrahedron's dihedral angles (Freitag and Ollivier-Gooch, 1997) . However, in these cases, it may be difficult to adapt a general quality measure to limit its effect on the boundary (if the boundary is not fixed). The proposed elasticity is also well suited for optimization where as differentiating a general quality measure may be more susceptible to local minima.\nThe second term of G(v) is a smoothing term, S(v), involving level sets, \u03c6 0,m . Each region 1, . . ,m, . . . N, has its own associated level set. No topological changes are permitted at this stage and the level sets themselves are not evolved. Instead, a map v is morphed, as performed in Leguyader and Vese (2009) . We define the smoothing term using the harmonic energy, as follows, Recalling that \u03c6 0 (x) is the distance function to the union of all boundaries of segmented regions, we use in the above smoothing term another function, defined for each m between 1 and N, as the distance function inside region m, and zero outside: \u03c6 0;m \u00f0x\u00de = \u03c6 0 \u00f0x\u00de; if x is in region m 0; otherwise An approximation to the delta function is typically used when functionals of this type are used in finite difference applications. In the proposed method, only the boundary is moved to minimize the above functional and the interior nodes are allowed to position themselves in a way that maximizes element quality.\nThe third term of G(v) is a data fidelity term, B(v), similar to ones used in Chan and Vese (2001) and Leguyader and Vese (2009) . Inside the integral for each region, there are three factors multiplied together. The product of the first two factors is either just, at each x, 0, if the mesh label and image label match, and 1 if the mesh label and image label do not match. The third multiplicative factor increases the penalty as a node moves farther away from its corresponding voxelized region. The proposed data fidelity term is thus given by As with the smoothing term, only the boundary nodes are moved to minimize the above functional. However, to avoid overly strict enforcement of the voxelization, the value of the Heaviside function on the boundary nodes is taken to be a weighted average over nodes in the surrounding volume using the connectivity of the mesh. If the constant c is 0.5, no penalty is applied until a boundary node is half a voxel away from its corresponding region.\nThe minimum of the above energy can be found by solving the Euler-Lagrange equation via gradient descent: \nAt each time step, the gradient and Laplacian of the level set function are computed independently using linear basis functions and a straightforward application of the finite element method (Bank, 1996; Mezger et al., 2009) . Computationally, this can be done quickly and does not require solving a system of equations at each time step. In contrast, a strict use of the finite element method for non-linear differential equations frequently requires solving a nonlinear system of equations, which can be computationally expensive.\nTo further improve the speed of the numerical implementation, the Sobolev Gradient Method (Neuberger, 1997; Sundaramoorthi et al., 2005) is employed by solving\nThe Sobolev Gradient implementation requires a linear system to be solved at each time step where K N 0 is a constant step-size parameter."}, {"section_title": "Storage of tetrahedral representations", "text": "Generation of the tetrahedral meshes produces a list of nodal locations and their associated connectivity. Several means for storing this information exist, most notably the multi-file format set of TetGen (http://tetgen.berlios.de/fformats.html). This format consists of three ASCII-text files, one for each of the mesh nodes, elements, and boundary faces. The software created to implement the tetrahedral mesh generation approach described here uses TetGen file formats for file I/O and TetView (the viewing program accompanying TetGen) was used for graphical display. Incidentally, the GIFTI file format (http://www.nitrc.org/projects/gifti) does not presently accommodate higher-order mesh descriptions and, thus, is not sufficient for describing tetrahedra. As such, we are currently developing a more general file description format designed to accommodate a range of geometric representations and employed it here to form the basis of a subsequent publication."}, {"section_title": "Results", "text": "The parameters used for the examples are given in Table 1 . They were selected to provide a good balance of smoothness, high tetrahedra quality, and fidelity to the image. The parameters are independent of the image geometry and values given should be adequate for many applications. A summary of the meaning of each parameter is also provided.\nTwo examples of our mesh generation are presented in Fig. 1A and B. In Fig. 1A (left) , the equation of a perfect sphere is approximated to fit on a finite grid and concludes with the degree of voxelization as shown. Fig. 1A (right) shows the recovered sphere, which is very close to spherical. The fidelity term constant c is set to 0. The minimum dihedral angle of the tetrahedra is 20 and maximum dihedral angle is 152. Fig. 1B shows a larger sphere and its smoothened version, generated with the constant c set to 0.5, which results in dihedral angles between 18 and 155.\nTo demonstrate the robustness of the proposed tetrahedral meshing method, we randomly assigned a 60 \u00d7 60 \u00d7 60 block the values in the range of 0 to 5 (0 corresponding to empty space) and ran the meshing procedure. It succeeded in creating a mesh with dihedral angles between 13 and 160 degrees, and a maximum edge ratio of 5.0. (Fig. 1C) . This illustrates that this approach can be applied to mesh segmented regions in a volume having arbitrary shape and size and thus is suitable for many medical imaging applications in which one or more regions-of-interest have been defined.\nThe number of tetrahedra generated depends both on the image size (here as large as 160 \u00d7 256 \u00d7 256 for the automatic segmentation) as well as on the number and geometry of the regions. As with all explicit methods, instability can occur if the time step is too large, but that can always be avoided by selecting a suitably smaller time step. In our experience, the only reason the meshing method will fail is due to lack of random access memory. But even with 8 GB RAM, the algorithm can generate all the examples here and possess up to 16 million tetrahedra, if practical.\nApplication to a sample of normal data T1-weighted MRI images volumes were selected from N = 10 normal subjects included as part of the Alzheimer's Disease Neuroimaging Initiative (ADNI) (Ho et al., 2010) , stored in the Integrated Data Archive (IDA; http://ida.loni.ucla.edu) maintained by the Laboratory of Neuro Imaging (LONI; http://www.loni.ucla.edu). Volumetric data were stored in 16-bit Analyze format and all preprocessing and tetrahedral model generation were performed using the LONI computational grid system, comprised of 1400 multithreaded CPUs, on a Linux-based operating system, and Sun GridEngine.\nImage volume segmentation was performed using LONI Brain Parser software (2008). Brain Parser is a learning based algorithm that efficiently performs whole brain image segmentation to parse an input MRI image into N = 56 anatomical structures of interest. It automatically fuses a detailed set of image features and context information from a large candidate pool to perform classification and segmentation. It can be trained to \"learn\" how to segment a particular set of structures of interest if a set of training images with the corresponding ground truth labels are provided. Brain Parser specifically includes skull and scalp removal, image non-uniformity compensation, voxel-based tissue classification, topological correction, rendering, and editing functions. The collection of tools is designed to require minimal user interaction to produce cortical representations. Brain Parser software segments regions of interest based on a training set of data and generates 3D MRI volumes. Fig. 2 shows an example of the meshing from one of these brains showing the parcellation and a cross-sectional sagittal cut through the mesh. \nAffects relative importance of data fidelity C 0 and 0.5 (value .5 used in Fig. 1 only) [0, 0.5] Allows mesh to mismatch with the image by up to half a voxel without penalty\nThe stepsize parameter associated with the Sobolev Gradient Method.\nFitting tetrahedral meshes across a cohort of brains from multiple subjects permits within and between subject registration as well as for carrying out between group statistical analyses on the effects of disease or brain injury. Fig. 3 (parts 1 and 2) shows the results obtained from tetrahedral mesh generation for N = 10 example normal brains drawn from the ADNI normative cohort and segmented into the N = 56 distinct, color-coded, cortical and sub-cortical regions. The complete meshes range in size from 6.8 to 8.2 million elements in which the dihedral angles for all tetrahedra have been constrained to range between 12 and 160 degrees. The use of tetrahedral mesh representations for the registration and analysis of patient and matched-control samples will be subjects of forthcoming publications from our group."}, {"section_title": "Application to gray/white matter segmented data", "text": "The tetrahedralization method was applied to gray/white segmented image data from the Montreal Neurological Institute (MNI) digital brain phantom (http://mouldy.bic.mni.mcgill.ca/brainweb/) (Collins et al., 1998) . The image was partitioned into gray matter, white matter, cerebrospinal fluid, and rest of the head based on local image models where each models the image content in a subset of the image domain (Tohka et al., 2007 (Tohka et al., , 2010 . The segmentation framework used here derives local models for tissue intensities and Markov Random Field priors and combined these into a global probabilistic image model. This is valuable since it offers better protection against intensity non-uniformity artifact than the corresponding method based on a global (e.g. whole image volume) modeling scheme. Some regions in the image were removed prior to meshing. For example the edge of the head intersected the image field-of-view, which would have created an undesirable artificial boundary in the mesh and unnecessarily increased the final mesh size. The resulting tetrahedral model (Fig. 4) contains over 15 million elements and is color coded according to tissue type."}, {"section_title": "Application to small animal image data", "text": "Finally, the tetrahedral mesh generation approach was applied to the Digimouse atlas (http://neuroimage.usc.edu/Digimouse.html). Freely available from the Biomedical Research Imaging Laboratory at the University of Southern California, the Digimouse atlas was generated using co-registered CT and cryosection images of a 28 g nude normal male mouse (Dogdas et al., 2007) . Seventeen anatomical structures are labeled in the Digimouse including the whole brain, external cerebrum, cerebellum, olfactory bulbs, striatum, medulla, massetter muscles, eyes, lachrymal glands, heart, lungs, liver, stomach, spleen, pancreas, adrenal glands, kidneys, testes, bladder, skeleton and the skin. The segmentation is manual, and thus existing methods such as the Delaunay method can be employed. A tetrahedral mesh is available for download along with the atlas generated using TetGen (http://tetgen.berlios.de/). For the Digimouse atlas the surface triangular mesh for each organ had to be generated first followed by tetrahedralization. This mesh contains 58,244 vertices and 306,773 tetrahedral faces. Using the approach described here, the voxelized image was first reduced by a factor of two in each direction in order for the meshing program to require less than the 8 GB limit on our computing power. Further reductions in image size or region number may be desirable depending on the computational requirements of the imaging application. The mesh contains 15,481,899 tetrahedra with constrained dihedral angles between 12 and 160 degrees, and 2,750,350 nodes (Fig. 5) .\nComparison with other tetrahedral meshing methods Table 2 presents a brief comparison between several of the major public domain and commercial tetrahedral meshing programs presently available. We have also worked to compare this approach to other methods discussed in the literature. However, the proposed method is difficult to directly compare with all other meshing methods because many, such as Molina et al. (2003) for example, were simply not designed to work on image data having multiple segmented regions. Other methods, such as that of Ferrant and Warfield (2004) , produce meshes that are larger than the resolution of the original image, making a direct comparison of meshing accuracy and quality somewhat inequitable.\nWe applied the open source code method Fang and Boas (2009) , shown to be applicable to brain imaging data, to one of our automatically segmented brains. However, we were unable to obtain a successful result using the method as they describe. We suspect that this may be due to the difficulty associated with finding a triangulated boundary mesh prior to the application of the Delauny method. The mesh examples described in their paper do not appear to contain as much detail as the ones presented here and tetrahedra quality measures are not reported.\nIn the papers by Zhang et al. (2005 Zhang et al. ( , 2008 , four high resolution meshes are generated from medical images that appear to capture roughly as much detail as the proposed method. Two tetrahedra quality measure given in these papers are the edge ratio, which is defined for each tetrahedra as the largest edge divided by the smallest, and the Joe-Liu parameter (Liu and Joe, 1994) , which ranges from 0 for a flattened tetrahedra, and 1 for a equilateral tetrahedra. The formula for the Joe-Liu parameter is given in the Appendix. The Fig. 2 . A close-up view of the result of tetrahedral mesh generation for an example regionally segmented T1 anatomical image volume comprising 56 distinct cortical and sub-cortical regions. Note the finer tetrahedra promixal to each regional boundary and relatively larger tetrahedra near their centers.\npoorest edge ratio of the four meshes in the examples reported by Zhang et al. was 8.5 . The poorest edge ratio across all 15 of our examples was 5.2. The smallest Joe-Liu parameter for their method was reported as 0.01, while it is 0.07 for our method. We also note that the method described by Zhang et al. directly calculates these two measures and works to improve them. In contrast, the proposed method does not involve iteratively computed tetrahedra quality measures-they are simply computed after the mesh is generated. It is possible that mesh improvement techniques such the one described by Zhang as well as other methods such as Freitag and Ollivier-Gooch Fig. 3. (parts 1 and 2) : The results of tetrahedral mesh generation for N = 10 example brains drawn from the ADNI normative cohort. Across the subjects, meshes range in size from 6.8 to 8.2 million elements in which the dihedral angles have been constrained to range between 14 and 159 degrees.\n(1997), could be used to further improve the mesh quality beyond what is presented here. However, this is not essential as the tetrahedra quality have been shown to be good even without any mesh improvement techniques.\nSoftware embodying the TMMA approaches for tetrahedral mesh generation and smoothing described here are being made publicly available via the Laboratory of Neuro Imaging (LONI) web site for use with the LONI Pipeline (Dinov et al., 2009) "}, {"section_title": "Discussion", "text": "As we discuss above, 2D surface model representations present convenient manifolds for modeling cortical and sub-cortical boundaries of the brain, permitting their deformation, as well as characterization of their local properties (e.g. curvedness, shape index, fractal dimension, etc). Collections of surface models have permitted largescale surface registration leading to population-based atlasing (Van Essen and Dierker, 2007) as well as between groups comparisons (Narr et al., 2001) . Such applications are important tools for graphically representing cortical change and for use in indicting areas of activity in functional imaging studies.\nTetrahedral mesh generation, on the other hand, extends the notion of surface tessellation to 3D and provides a finite element Fig. 4 . A nested tetrahedral meshing of a brain segmented into gray (blue) and white (red) matter partitions comprising a total of over 15 million elements. means for the filling of segmented spaces in the brain and other data. As shown by applying it to both human brain segmentation and nonhuman mammalian data, this method is likely to be useful for many other medical imaging applications, as well (e.g. cardiothoracic imaging) that have a need to isolate and model specific structures. The approach we detail here is able to generate high quality mesh from images with a large number of regions even if the segmentation is poor in some areas as might occur for an automatic segmentation.\nAn important advantage of this approach is that it does not require pre-built 2D surfaces as inputs and works directly on segmented brain image volumes. Related to this, the method is robust with respect to topology issues in comparison to the Delaunay method which requires a 2D surface (and surface meshing usually requires a genus zero region as discussed) as input while our method does not need surfaces. As such, this method may be more widely applicable to cases where whole brain or image masks may not satisfy the genus requirements of many 2D surface generators."}, {"section_title": "Conclusion", "text": "This paper describes a detailed TMMA-based method for tetrahedral mesh generation applied to neuroimaging anatomical data containing one or more segmented parcellations. We expect it to find broad application in many medical imaging data types, most notably in the modeling, registration, and statistical analyses of tetrahedral deformation over time or between samples. The approach is efficient and has desirable properties, which enable the modeling of fully 3D objects extracted from medical imaging data. "}]