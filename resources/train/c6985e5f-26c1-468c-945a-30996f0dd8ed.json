[{"section_title": "Introduction", "text": "With advances in modern imaging technology, it is becoming increasingly prevalent to collect high-dimensional imaging data (e.g., magnetic resonance imaging [MRI] ) in order to extract imaging biomarkers (or features) that are useful for various tasks, including disease detection, diagnosis, prognosis, and treatment, among many others (Chen et al., 1998; Lopez et al., 2009; Ram\u00edrez et al., 2009) . For many diseases, such as Alzheimer's disease (AD) and breast cancer, it is expected that medical images contain clinically relevant information associated with their pathophysiology. A critical challenge is determining how to build a predictive model (or classifier) that can classify patients into clinically meaningful subgroups according to their imaging data. Such a model may improve the clinical care of these patients and possibly slow their disease progression.\nIn the current literature, there exist two groups of classification methods for imaging data, including feature-based analysis and imagebased analysis. Feature-based analysis consists of (i) converting medical images into a set of features and (ii) building classifiers based on these extracted features. Standard feature extraction methods often extract some summary statistics (e.g., mean imaging intensity) in either segmented tumors or prefixed regions of interest (ROIs) in a template space. For example, Rusinek et al. (2004) used the partial volumes of the brain and cerebrospinal fluid (CSF) to classify AD versus normal control (NC), and Zhu et al. (2014) built a multi-category classifier using sparse linear discriminant analysis based on features extracted from 93 ROIs of both MRI and positron emission technology (PET) images. More examples of feature-based analysis can be found in Xu et al. (2000) , Busatto et al. (2003) , Colliot et al. (2008) , and Yu et al. (2014) . The major drawback of these feature-based methods is that they require knowledge of spatial segmentation to identify meaningful ROIs in order to extract informative, discriminating and independent features for the classification task. Image-based analysis, however, uses raw imaging data across all grid points. Two key advantages of using raw imaging data include potential gain in classification accuracy and spatially interpretable coefficient maps of the classifiers in the original imaging space. The main challenges for image-based analysis include (i) high dimensionality, (ii) complex spatial information and (iii) noisy functional data. For example, a typical T1-weighted MR image of size 256 \u00c2 256 \u00c2 256 will yield a 16; 777; 216 dimensional space, and due to the inherent biological structure of the brain, these data also have complex spatial correlation and smoothness.\nMany methods in the literature apply a pre-screening procedure to reduce the dimensionality of the imaging data, and build classifiers in the reduced imaging space. For example, Liu et al. (2012) applied the ensemble of multiple classifiers based on randomly selected patches of the MR images, and Hinrichs et al. (2011) built multiple kernel support vector machines based on 2000 to 250,000 features selected by voxel-wise t-tests. The pre-screening procedure can significantly reduce the computational cost in estimating the classifiers, but potentially loses important predictive information. On the other hand, many regularization techniques have been proposed to directly handle high-dimensional data, including imaging data as a special case (Grosenick et al., 2008 (Grosenick et al., , 2009 Yamashita et al., 2008; Van Gerven and Heskes, 2012) . For instance, Yamashita et al. (2008) proposed a method by imposing L 2 norm regularization to logistic regression for classification of functional MRI data in various tasks; whereas Casanova et al. (2011) applied elastic-net penalized regression to distinguish between patients with AD versus NCs based on both gray matter and white matter segmentation maps. These regularization methods perform simultaneous estimation of coefficients across all voxels and select the predictive voxels. Since most standard regularization methods do not account for the spatial structure of imaging data, their resulting classifiers usually contain only isolated voxels; thus, it can be difficult to interpret the results. Moreover, standard sparsity penalties, such as L 1 , can be sub-optimal for the high-dimensional prediction problems considered here, since the effect of high-dimensional imaging data on certain categories is often spatially clustered and non-sparse.\nTo effectively handle imaging data, it is critically important to utilize the spatial smoothness and correlation of imaging data in the construction of classifiers. For instance, Grosenick et al. (2013) proposed a spatial smoothing classifier based on the GraphNet penalty. Furthermore, Watanabe et al. (2014) developed a spatial support vector machine (SSVM) classifier based on the fused lasso (FL) and GraphNet penalties. These methods yield meaningful coefficient images and achieve good accuracy for binary neuroimage classification, but are not directly applicable to multi-category classification problems.\nThe aim of this paper is to develop a spatial multi-category anglebased classifier (SMAC) for high-dimensional imaging data. Compared with the existing methods in the literature, three major methodological contributions of this paper are as follows:\nThe proposed SMAC not only utilizes the spatial structure of images, but also extends the angle-based classification framework recently developed by Zhang and Liu (2014) to perform simultaneous multi-category classification of imaging data. We use a hybrid of a generalized total variation (TV) penalty ) and a sparse L 1 penalty, namely an FL penalty, to identify spatially aggregated clusters that are important for discriminating different classes. Our methods are able to deliver competitive classification accuracy and interpretable imaging biomarkers. We have developed the SMAC package by using both MATLAB and Python. The MATLAB codes have been released through the websites \"https://www.nitrc.org/projects/smac\" and \"https://github.com/ BIG-S2/SMAC\". Our package includes a graphical user interface that is freely downloadable from the same websites. Our SMAC package can handle 1-dimensional (1-D) curves, 2-dimensional (2-D) surfaces, and 3-dimensional (3-D) volumes.\nThe rest of the paper is organized as follows. In Section 2, we introduce the SMAC framework and describe an optimization algorithm to efficiently estimate the model coefficients. We use two simulation experiments and the Alzheimer's Disease Neuroimaging Initiative (ADNI) data in Section 3 to examine the finite-sample performance of SMAC. In Section 4, we conclude with some discussion."}, {"section_title": "Methods and materials", "text": ""}, {"section_title": "Data structure", "text": "One important classification problem in the neuroimaging literature is to predict the disease status of patients based on their neurological images. The class label is denoted by a categorical response variable y, usually taking values of 1; 2; \u2026;\np represents the observed imaging data, where D denotes the spatial structure of the image, which can be a 1-D curve, 2-D surface or 3-D volume, and d is a vector of length 1, 2 or 3, indicating the location of the underlying voxel in the image. Without loss of generality, we focus on 3-D real valued images in this paper, and use p as the dimension of the imaging data, which equals the total number of voxels in the image.\nWe use bold symbols to represent the imaging variables, such as X and use regular symbols for scalar and other non-image variables, such as y. The notation \u00bdn represents the set f1; 2; \u2026; ng."}, {"section_title": "Statistical classification framework", "text": "For a K-category classification problem, a statistical classifier builds a map from the covariate space \u211d p to the category space f1;\u2026;Kg. Given a new imaging observation X \u00c3 , the classifier predicts the associated class label y \u00c3 as b y \u00c3 . To build the classifier, many statistical procedures can be fitted into the regularization framework of loss \u00fe penalty. A loss function l\u00f0\u22c5\u00de is introduced to ensure the goodness of fit of the resulting model to the training data. Two groups of loss functions that are commonly used in the literature include likelihood-based and margin-based loss functions. Likelihood-based methods usually impose some assumption of probability distributions on the data and then establish the classification rule by solving some parametric statistical models. Examples of these methods include Fishers linear discriminant analysis (LDA) (Fisher, 1936) and logistic regression . In contrast, margin-based methods solve the classification problems without imposing a strong distributional assumption on the data. Specifically, a margin-based method uses a functional margin as the input of the loss function l\u00f0\u22c5\u00de. The values of the functional margins are directly associated with the accuracy of the class label assignment. For binary classification with the class label W y 2 fAE1g for y 2 f1; 2g, one can obtain a function f \u00f0x\u00de and use c W y \u00bc sign\u00f0f \u00f0X\u00de\u00de as a classification rule. In this case, the functional margin is defined as W y f \u00f0X\u00de, indicating the correctness of the classification. Our proposed classifier belongs to margin-based methods. When dealing with high-dimensional data, a regularization term is usually added to the loss function to prevent the models from over-fitting the training data. The choice of the regularization term is based on prior knowledge of the data structure and the properties of the specific penalty. For instance, the L 1 norm penalty can be utilized to learn the sparse structure of data (Tibshirani, 1996) , and the L 2 type of penalties encourage continuous shrinkage in the estimation (Zou and Hastie, 2005) . To choose the penalty term for handling the neuroimaging data, it is necessary to account for its high dimensionality and complex imaging structure. A desired penalty should encourage sparsity, while incorporating the spatial structure of the imaging data."}, {"section_title": "Binary large-margin classifiers", "text": "Many \"off the shelf\" classifiers are potential candidates for neuroimaging classification. Examples range from the very classical LDA (Fisher, 1936) and logistic regression to the recent machine learning techniques, such as the support vector machine (Boser et al., 1992) and boosting (Friedman et al., 2000) . The choice of the classifier depends on the data structure and the goal of classification. However, there is no clear guideline about which classifier to choose in each complicated case. proposed a large-margin unified classifier (LUM), covering a rich family of classification methods, which allows us to tune our loss function within the rich LUM family to obtain a satisfactory solution. In this paper, we choose a special LUM loss function which has the following form:\nThis special loss can be viewed as a hybrid of the support vector machine and AdaBoost, which allows us to maximize the separation margin and dynamically assign weights in \"weak\" learners (Freund and Schapire, 1997) . We refer readers to the original paper for further details of the LUM loss.\nDespite the potential improvement in classification performance when using LUM, this classifier was originally proposed to solve binary classification problems. The extension to multi-category cases requires additional effort. We address this issue in the following section."}, {"section_title": "Multi-category large-margin classifiers", "text": "To handle multi-category data, one simple approach is to conduct binary classification sequentially via the one-versus-one or one-versusthe-rest scheme in order to predict the class labels. These methods have been proven to be suboptimal when there is no dominating class (Liu and Yuan, 2011) . Other classifiers solve the classification problem simultaneously by mapping covariates to a vector with the length equal to the total number of categories. Such classifiers can be found in Zhu and Hastie (2005) , Zhu et al. (2009) and Liu and Yuan (2011) . A sum-to-zero constraint on the predicted vector is usually applied to achieve desirable theoretical properties, but may increase the complexity of the corresponding optimization. Without this constraint, Zhang and Liu (2014) proposed a multi-category angle-based classifier (MAC) that can achieve the Fisher consistency and some other desirable properties.\nFor a K-category classification problem (K ! 2), MAC creates a map from the class labels y 2 \u00bdK to the vertices of a regular simplex in the \u00f0K \u00c0 1\u00de -dimensional space, i.e.,\nwhere \u03be 2 \u211d K\u00c01 is a vector with all elements being 1, and e y 2 \u211d K\u00c01 is a vector such that all elements are 0, except that the y-th component is 1. Note that for K \u00bc 2, it reduces to the traditional binary classification with labels W y 2 fAE1g. Due to the property of the regular simplexes, the angles between any two projected class labels are equal, i.e., \u2220\u00f0W y ; W y 0 \u00de \u00bc C K for all y 6 \u00bc y 0 .\nInstead of directly using the original class label y, MAC uses the projected class label W y to solve the multi-category problem. In particular, we construct a function that maps the covariate X to the same K \u00c0 1 dimensional space, i.e., f : \u211d p \u2192\u211d K\u00c01 , and use the angle between f \u00f0X\u00de and W y for y 2 \u00bdK to determine the prediction rule, i.e.,\nAccording to the \"law of cosine\", this is equivalent to\nwhere h\u22c5; \u22c5i denotes the inner product of two vectors. The inner product essentially plays the role of the functional margin in MAC, and the empirical risk minimization (ERM) is, therefore defined as follows:\nwhere l\u00f0\u22c5\u00de is the margin-based loss function defined by equation (1) and J\u00f0f \u00de is the penalty term with the tuning parameter \u03bb, which controls the strength of regularization. Considering the specialty of voxel-based neuroimaging classification, we narrow the function space F to linear functions, so that the coefficients of f \u00f0\u22c5\u00de are voxel-wisely matched with the structure of the imaging covariate X, i.e., f \u00f0X\u00de \u00bc \u00f0f 1 \u00f0X\u00de; f 2 \u00f0X\u00de; \u2026; f K\u00c01 \u00f0X\u00de\u00de T ;\nNotice that \u03b2 j \u00bc \u00f0\u03b2 j;1 ; \u2026; \u03b2 j;p \u00de T has a one-to-one correspondence with the imaging data X \u00bc \u00f0x 1 ; \u2026; x p \u00de T . Thus, it can be also defined in the original imaging space of the covariates. In this case, we denote \u03b2 j as the coefficient image of the fitted classifier. For a K-category classification problem, we have K \u00c0 1 coefficient images. In order to match the coefficient images with the K class labels, we denote the reconstructed coefficient images \u03b2 \u00c3 y , y 2 \u00bdK of the same dimension of \u03b2 j as follows,\nwhere W y;j is the j-th element of the project class label W y in Equation (2) and \" \" denotes the element-wise product. Note that \u03b2 \u00c3 y has the one-to-one correspondence with the class label y. Additionally, since P K y\u00bc1 W y \u00bc 0 according to Equation (2), we have the sum-to-zero constraint on \u03b2 \u00c3 y 's as well, i.e.,\nThese properties ensure that the reconstructed coefficient images are comparable with the coefficient images obtained from other linear classification models with the sum-to-zero constraint, such as logistic regression."}, {"section_title": "Spatial smoothing regularization", "text": "The penalty term J\u00f0f \u00de in problem (4) not only plays an important role of preventing the resulting classifier from over-fitting, but also helps to achieve some desired structure in the coefficient images. For imaging classification, unpenalized estimation often yields dense coefficients, but requires additional thresholding (or feature selection) to identify meaningful biomarkers. In contrast, the use of sparse penalties alone, such as lasso and the elastic net, leads to coefficient images with isolated voxels, which can be difficult to interpret. The use of spatial smoothing penalties not only captures the spatial smoothness in the image space, but also yields biologically interpretable coefficient images. For instance, Grosenick et al. (2013) proposed a spatial smoothing penalty, GraphNet, that incorporates the spatial structure in the elastic net penalization. However, the GraphNet penalty yields global smoothness in coefficient images, so it may be suboptimal in preserving sharp edges.\nWe introduce the generalized FL penalty (Tibshirani, 2011) to capture the spatial structure of imaging data. For an image I \u00bc fI\u00f0d\u00de 2 \u211d : d 2 D g, the discrete imaging intensities are evaluated at grid\nThe FL penalty is a weighted mixture of the L 1 and TV penalty on the imaging intensities. The L 1 penalty encourages both shrinkage and sparseness (Tibshirani, 1996) ; whereas the TV penalty regularizes the differences between the consecutive elements in the estimation. We denote the latter as the TV-I penalty. Its discrete formulation is defined as follows:\nwhere jj\u22c5jj 1 denotes the L 1 norm, D 1 , D 2 and D 3 respectively represent the total number of voxels along each dimension, and r is the discrete differential operator such that rI d1;d2;d3 \u00bc \u00f0r 1 I d1;d2;d3 ; r 2 I d1;d2;d3 ; r 3 I d1;d2;d3 \u00de T . Moreover, r 1 I d1;d2;d3 is defined as\nand r 2 I d1;d2;d3 and r 3 I d1;d2;d3 can be similarly defined. The TV-I penalty penalizes the discrete gradient of the imaging function I\u00f0\u22c5\u00de. It encourages the spatial smoothness of I\u00f0\u22c5\u00de, while capturing its sharp edges. This property allows us to efficiently detect important blobs. However, in some cases, the TV-I penalty tends to yield images with block-wise constant blobs (Rudin et al., 1992) , which might erase too many details. For this reason, we introduce the second-order TV penalty, denoted TV-II, which can capture blobs with a continuous change of intensity by imposing the regularization on the Hessian matrix of I\u00f0\u22c5\u00de, which encourages the gradual fade of I\u00f0\u22c5\u00de in the space. The discrete formulation of TV-II is defined as follows:\nwhere H\u00f0I d1;d2;d3 \u00de \u00bc \u00f0r m \u00f0r m 0 \u00f0I d1;d2;d3 \u00de\u00de\u00de 1 m;m 0 3 and jj\u22c5jj 1 denotes the entry-wise L 1 norm of a matrix. Note that the calculation of both gradient and Hessian operators can be represented as matrix multiplication on the vectorized images. In particular, the TV \u00c0 I\u00f0I\u00de in (7) can be represented as\nwhere D is the discrete derivative operator that contains the differencing operation along each of the 3 dimensions of the imaging domain.\nSimilarly, the TV-II penalty can be represented as\nwhere\nDg is a diagonal block matrix, with 3 copies of matrix D representing the operations along each dimension. For problem (4), we have K \u00c0 1 coefficient images for a K category classification problem and can denote \u03b2 \u00bc \u00f0\u03b2 1 ; \u2026; \u03b2 K\u00c01 \u00de T as the vector of all the imaging coefficients, as denoted in equation (5). The associated TV-I penalty is defined as\nwhere C I \u00bc \u00bdD; \u2026; D is K \u00c0 1 copies of the operator D. Similarly, we can define\nwhere\nFinally, the EMR problem in (4) can be reformulated as follows:\nwhere l\u00f0\u22c5\u00de is the loss function in (1), f \u00f0\u22c5\u00de is a system of linear functions defined in (5), and FL\u00f0\u03b2\u00de \u00bc \u03bb 1 jj\u03b2jj 1 \u00fe \u03bb 2 jjC\u03b2jj 1 is the FL penalty, in which \u03bb 1 and \u03bb 2 are two non-negative tuning parameters and C \u00bc C I for TV-I or C II for TV-II."}, {"section_title": "Algorithm", "text": "The optimization in problem (9) is a mixture of smooth and nonsmooth convex optimization. Many iterative proximal algorithms can be adopted here to solve this problem, such as ISTA and FISTA (Beck and Teboulle, 2009 ). However, the evaluation of the Lipschitz constant and the proximal operators can be computationally expensive in this case. Instead, we introduce an alternative direction method of multipliers (ADMM) (Boyd et al., 2011) algorithm to solve the optimization efficiently. A brief introduction of the ADMM is given in the Appendix A1."}, {"section_title": "Reformulation of ERM", "text": "We first reformulate the ERM (9) so that the ADMM algorithm can be applied smoothly. Note that the evaluation of the functional margins h W yi ; f \u00f0X i \u00dei consists of only linear operations. We construct a big matrix A, such that the inner product can be simplified as one matrix multiplication, i.e., *\nwhere A i;: denotes the i-th row of the matrix A. The details for constructing such a matrix A can be found in Appendix A2. The penalty term in (9) consists of a sum of two L 1 norms of vectors, and thus can be simplified as\nwhere\nWith a little bit of adjustment to the notations, we use I to denote the identity matrix here. Furthermore, we reconstruct the differencing matrix C to a circulant matrixC by adding some additional rows, and defineB T \u00bc \u00bd\u03bb 1 I; \u03bb 2C T accordingly. Under this reformulation, the matrix \u00f0I \u00feB TB \u00de becomes a block circulant with a circulant block matrix and can be efficiently inverted by using the fast Fourier transform (FFT) (Chan et al., 1993) .\nFor masked images, we introduce a recovering matrix R according to the masking matrix to recover the 3-D imaging structure with all the grid points in the space. A selection matrix M is then introduced to rule out the augmented rows added inB and force the regions outside the mask to zeros. Therefore, we have\nThe EMR is then reformulated as\nWe further introduce some auxiliary constants and artificial variables to reformulate the problem in a desired form for the ADMM. This leads to our final ERM formulation as follows:\n; g 1 \u00f0X\u00de \u00bc kMv 3 k 1 and g 2 \u00f0Y\u00de \u00bc P n i\u00bc1 l\u00f0v 1i \u00de:, and denote\nand then the updating rules for the ADMM can be adopted smoothly for our problem."}, {"section_title": "Closed-form solutions for the subproblems", "text": "We first demonstrate the solution of the optimization in the X block, which contains the following two subproblems:\nSolution for \u03b2:\nThe optimization of \u03b2 in (12) is a quadratic minimization problem, which has a closed-form solution:\nwhere\nis a fixed term across all iterations, so it can be precalculated. Solution for v 3 : Problem 13 can be solved by a proximal algorithm, the solution of which is given by\nwhere Soft\u00f0\u22c5\u00de is a component-wide soft thresholding operator (Parikh and Boyd, 2013) , denoted by Soft \u03bb \u00f0v\u00de \u00bc \u00f0\u00f0v j \u00c0 \u03bb\u00de \u00fe \u00c0 \u00f0\u00c0v j \u00c0 \u03bb\u00de \u00fe \u00de j ; in which \u00f0x\u00de \u00fe \u00bc maxfx; 0g. Next, we demonstrate the optimization of the Y block, which involves two variables v 1 and v 2 . We apply the ADMM algorithms, and decompose it into the following two subproblems:\nSolution for v 1 :\nThe optimization of v 1 in (16) can be solved component-wisely by applying the Newton-Raphson method, i.e.,\nwhere l 0 \u00f0\u22c5\u00de and l 00 \u00f0\u22c5\u00de are the first-and second-order derivatives of the loss function l\u00f0\u22c5\u00de, which are given as follows:\nTo ensure convergence, we need to conduct multiple iterations in every Newton step. In our implementation, we only perform 1 iteration, which has been shown to result in sufficiently good convergence in practice.\nSolution for v 2 :\nThe optimization of v 2 in (17) is a standard quadratic programming problem, which has a closed-form solution:\nThe direct inversion of the matrix I \u00feB TB may not be feasible due to the extra high dimensionality. We make use of its block circulant structure and solve the problem in v 2 by FFT at a cost of O\u00f0n log n\u00de operations (Afonso et al., 2010) . Specifically, we have\nwhere fft and ifft denote the 3-D FFT and inverse FFT operators, respectively, \" \u00c4 \" denotes the element-wise division, and \u0393 1 is the first column of matrix I \u00feB TB . A complete ADMM updating procedure is summarized in Algorithm 1. We list all the involved parameters in Table 1 for a convenient reference. The primal updates are discussed above. The dual updates are directly derived from the general updating rule of the ADMM algorithm. We conduct the primal and dual updates alternatively until the prespecified convergence criteria are satisfied. In particular, we check the relative change in the estimated coefficient \u03b2, and stop the algorithm if the total number of iterations exceeds a prespecified bound or the relative change is below a certain threshold, \u03b5, i.e.,"}, {"section_title": "Algorithm 1. ADMM algorithm for SMAC-I/II", "text": "Initialize primal variables \u03b2, v 1 , v 2 , v 3 as 0.\nInitialize dual variables u 1 , u 2 , u 3 as 0.\nwhile t t max do Primal update: \nAugmented discrete operator for FL penalty, see Section 2.4.1 for details. M Selection matrix to rule out additional terms, see Section 2.4.1 for details. R Recovering matrix for masked images."}, {"section_title": "\u03931", "text": "The first column of matrix I \u00feB TB .\nDual update:\nConvergence criteria:\nend if end while"}, {"section_title": "Simulation of synthetic data", "text": "To illustrate the finite sample performance of SMAC, we conducted simulation studies in both binary and multi-category cases."}, {"section_title": "Generation of the synthetic data", "text": "In Simulation I, we simulated 2 classes of images of size 20 \u00c2 20 \u00c2 10. The true signals for each class are denoted as \u03b8 1 and \u03b8 2 (see Fig. 1 ), where \u03b8 1 has two ROIs and \u03b8 2 has three ROIs. The discriminating region between the two classes is the ROI represented by the region of the black triangular prism in the center, which contains 75 voxels in total. The image intensities in the three ROIs are 0, 1 and 2, respectively.\nIn Simulation II, we considered classifying three classes of images. The image size is 32 \u00c2 32 \u00c2 4, and the true signals are \u03b8 1 , \u03b8 2 and \u03b8 3 , which are graphically illustrated in Fig. 2 . The image intensities are 0 in the black regions and 1 in the white regions. The discriminating regions among the three classes located in the first and second diagonal blocks are marked in the red boxes.\nWe generated noisy imaging samples by adding independent Gaussian noise at each voxel of the true signals, i.e., if the i-th image belongs to the k-th category, the associated noisy sample is given as L. Yu-Feng Liu et al. NeuroImage 175 (2018) 230-245 Application: classification of MRI images from ADNI data For the real data applications, we analyzed data from the ADNI study, a large-scale multi-site study that has collected MRI and PET images, CSF, and blood biomarkers, among other patient data. In AD, the most common form of dementia, the affected individual progressively develops disabilities in memory, language, and behavior, and the disease eventually results in death. A key goal of the ADNI study is to develop more sensitive and accurate biomarkers for the early detection of AD. The participants in the ADNI study include cognitively NCs, individuals with amnestic mild cognitive impairment (MCI), and subjects with AD. More information about this study can be found at the ADNI website (http:// adni.loni.usc.edu/)."}, {"section_title": "Participants", "text": "In this paper, we used a subset of baseline T1-weighted images from the ADNI study. After removing images with low quality, we obtained a dataset consisting of 749 samples (209 NC, 361 MCI and 179 AD). Table 2 summarizes the demographic information of all the subjects in our data analysis."}, {"section_title": "Image acquisition and processing", "text": "All images were preprocessed by a standard procedure (Guo et al., 2014) , including anterior commissure and posterior commissure correction, N2 bias field correction, skull-stripping, intensity inhomogeneity correction, cerebellum removal, segmentation, and registration. We generated RAVENS-maps for the whole brain, using the deformation field obtained during registration (Davatzikos et al., 2001) and obtained 749 images of size 128 \u00c2 128 \u00c2 128. Considering that the variability of age, gender and whole-brain volume among different subjects may affect the classification results, we first removed those factors by fitting linear regression models at each voxel, and then built the classification model based on the residual images of these linear models."}, {"section_title": "Results", "text": ""}, {"section_title": "Comparison, tuning parameter selection and cross-validation", "text": "The proposed SMAC is designed to handle whole-brain volumetric data and detect disease-related regions without any prior spatial knowledge. To evaluate the performance of SMAC in these two tasks, we compared our method with other classifiers that can handle highdimensional whole-brain volumetric data without any pre-screening procedure, and which also have the ability to yield volumetric coefficient images in the same space of the covariates. Under this guidance for comparison, we chose the following classifiers for neuroimaging classification: logistic regression using elastic-net regularization (EN-LR) (Casanova et al., 2011) , logistic regression with the GraphNet penalty (GN-LR) (Grosenick et al., 2013) and SSVM with an FL penalty (Watanabe et al., 2014). Since SSVM was originally designed only for binary problems, we did not include it in the multi-category problems. To distinguish between SMAC with TV-I and TV-II penalties, we respectively denote them as SMAC-I and SMAC-II.\nAll the methods mentioned above involve two tuning parameters, \u03bb 1 and \u03bb 2 . For consistent comparison, we denoted \u03bb 1 as the tuning parameter of the sparse penalty terms for all methods. In SSVM, SMAC-I and SMAC-II, we denoted \u03bb 2 as the tuning parameter of the total variation terms, whereas in EN-LR and GN-LR, we defined \u03bb 2 as the parameter of the L 2 norm penalty. We conducted a grid search to select the best pair of the two parameters across a 21 by 21 log-based grid for the synthetic data, i.e., \u03bb 1 \u03bb 2 2 f0; 2 \u00c014 ; 2 \u00c013 ; \u2026; 2 5 g 2 and a smaller grid of \u03bb 1 \u03bb 2 2 f0; 2 \u00c013 ; 2 \u00c011 ; \u2026; 2 3 ; 2 5 g 2 for the real data.\nFor the analysis of the synthetic data, a data-rich scenario, we independently generated 30 training, 30 validation and 300 test samples for each class according to (21), which yielded 60 training, 60 validation and 600 test samples in Simulation I and 90 training, 90 validation and 900 test samples in Simulation II. We used the training samples to build models for each combination of \u03bb 1 and \u03bb 2 , and evaluated the models on the validation samples to calculate the tuning classification accuracy and area under the curve (AUC) in the associated receiver operating characteristic (ROC) analysis. Based on the validation results, we picked the models with the highest classification accuracy. If ties occurred, we chose Fig. 3 . Validation accuracies for synthetic studies. The top row of 5 panels (from left to right) respectively correspond to the validation accuracy matrices of EN-LR, GN-LR, SSVM, SMAC-I and SMAC-II for the binary synthetic data. The bottom row of 4 panels (from left to right) respectively correspond to the validation accuracy matrices of EN-LR, GN-LR, SMAC-I and SMAC-II for the multi-category synthetic data. Each entry of the matrix is the tuning accuracy for the corresponding combination of \u03bb 1 and \u03bb 2 . The vertical direction of the matrix represents the value of \u03bb 1 , from top to bottom being f0; 2 \u00c014 ; 2 \u00c013 ; \u2026; 2 5 g, and the horizontal direction represents \u03bb 2 , from left to right being f0; 2 \u00c014 ; 2 \u00c013 ; \u2026; 2 5 g.\nthe models with highest AUC among them. If we still obtained multiple models, the one with a larger spatial penalty (\u03bb 2 ) was selected as our final model. We applied the final model to the test samples to evaluate the classification performance. To validate the stability of the methods, we repeated the experiments for 50 iterations, and reported the means and standard deviations of the results. For the real data analysis, we applied a stratified sampling on the whole dataset and split it into training (60%), validation (20%) and test (20%) sets, so that the proportions of NC, MCI and AD subjects were similar across the different sets. We used a validation and evaluation procedure that was similar to what we used in the simulation study. We repeated the above random split 30 times and recorded the means and standard deviations of the results."}, {"section_title": "Results from synthetic data analysis", "text": ""}, {"section_title": "Cross-validation and tuning results", "text": "The mean validation accuracy matrices from 50 iterations of the simulation studies are given in Fig. 3 . In Simulation I (binary case), EN-LR yielded lower validation accuracy for most of the sparse estimation, i.e., \u03bb 1 2 f2 1 ; \u2026; 2 5 g. SSVM yielded higher tuning accuracies for the sparse and patched estimation, i.e., \u03bb 1 \u03bb 2 2 f0;2 \u00c014 ;\u2026;2 \u00c08 g f2 \u00c05 ;\u2026; 2 \u00c03 g. GN-LR achieved very good validation accuracy when the sparsity and smoothness levels were relatively high, but yielded low accuracy when the sparsity level was too high, i.e., \u03bb 1 2 f2 4 ; 2 5 g. SMAC-I and SMAC-II achieved overall higher validation accuracy and were more sensitive to the change in tuning parameters. In particular, the SMAC methods were more sensitive to the penalty level of the total variation than the sparse term. This is mainly explained by the spatial smoothness assumption of the imaging data.\nThe results of Simulation II are similar to those of Simulation I. The sparse method EN-LR yielded low validation accuracy for most combinations of the tuning parameters. GN-LR and SMAC achieved high accuracy under a relatively high sparsity level and a moderate smoothness penalty level, i.e., \u03bb 1 \u03bb 2 2 f2 \u00c05 ; 2 \u00c04 ; 2 \u00c03 g 2 ."}, {"section_title": "Receiver operating characteristic (ROC) analysis and classification accuracy", "text": "The ROC analysis can simultaneously evaluate the true positive rate and the false positive rate for a binary classifier under different thresholds. The AUC numerically measures the performance of a classifier in the ROC analysis. When dealing with the multi-category cases, the ROC analysis can be implemented using the \"one vs. the rest\" strategy, i.e., transforming it into multiple binary problems. We conducted the ROC analysis for both binary and multi-category problems, randomly picked one result from the 50 iterations, and plotted the associated ROC curves; see Figs. 4 and 5. The numerical results for all iterations are summarized in Tables 3 and 4. In the binary classification example, SMAC-I achieved the highest classification accuracy of 96.52% and the largest AUC of 99.58%, followed by an accuracy of 96.17% and an AUC of 99.39% from SMAC-II. GN-LR and SSVM yielded accuracies of 93.04% and 92.23%, and AUC . Receiver operating characteristic (ROC) analysis for the multi-category synthetic data based on 900 test samples. Each panel represents the ROC curves evaluated using the \"one-versus-the-rest\" strategy. In both simulation studies, the spatial methods were more stable in terms of the classification results and yielded smaller standard deviations among the 50 iterations. The sparse method EN-LR delivered sparse estimation consisting of isolated voxels, and thus yielded unstable models. In particular, its variable selection results varied a lot in different iterations."}, {"section_title": "Visualization and interpretation of coefficient images", "text": "We plotted all the coefficient images to illustrate the estimation and identification of those critical regions for classifying the samples. The plot of the coefficient images in Simulation I (see Fig. 6 ) reveals that EN-LR yielded a sparse coefficient image, consisting of isolated voxels; whereas all the other spatial penalized methods produced smooth coefficient images, clearly indicating the triangular discriminating region in the center. SSVM and SMAC-I both yielded clear boundaries between the predictive and irrelevant regions. SSVM contained many false positive voxels in the background; whereas SMAC-I had a \"clean\" background. GN-LR yielded smooth coefficient images with blurred boundaries around the triangular region and also contained some false positives in the background. SMAC-II yielded a similarly smooth coefficient image with many fewer false positives.\nIn the multi-category example, we illustrated the reconstructed coefficient images (defined in Equation (6)) from SMAC-I/II and compared them with the penalized logistic regression methods (EN-LR and GN-LR). Since the three coefficients for each method summed to zero, we only displayed first two of them, i.e. b \u03b2 1 and b \u03b2 2 (see Fig. 7 ). The estimated coefficient images obtained from EN-LR consist of isolated voxels. GN-LR and SMAC-II yielded smooth patched estimations, but with a blurred boundary. The coefficient images from SMAC-I clearly captured the first and second diagonal block regions of the checkerboard image, which are the most critical regions for discriminating the three classes.\nAccurately capturing the key discriminating regions is a requirement of a good image classifier. In both simulation studies, the sparsity-only classifier EN-LR underperformed due to the ignorance of the spatial structure. GN-LR and SMAC-II tended to yield smooth critical regions in which the imaging intensities continuously varied across voxels. SSVM and SMAC-I were able to capture the critical regions with clear boundaries. SMAC-I and SMAC-II achieved fewer false positives in the irrelevant regions, while the other methods contained either isolated or patchy false positives in the background. For these particular synthetic data, SMAC-I delivered the most competitive performance. This was mainly due to the assumption of patchy constant patterns in the discriminating regions. SMAC-II may have potential advantages when those regions have continuously varying intensities."}, {"section_title": "Model sensitivity on training sample size and noise level", "text": "To further analyze the stability of the proposed methods, we conducted a comprehensive sensitivity analysis on the sample size and noise level. In particular, the sample size analysis was done by repeating the experiment in Simulation I with the training sample size ranging from 10 to 100. The validation and test sample sizes were not changed, and the noise level remained the same for different sample sizes, i.e., \u03b5 i \u00f0t\u00de e iid N\u00f00; 4\u00de. A similar model selection procedure as that used in Simulation I was used, and we report the test results in Table 5 and Fig. 8 . The noise level sensitivity analysis was done by fixing the training sample size (n \u00bc 30) and varying the standard deviation of the noise added to each voxel from \u03c3 \u00bc 1 to 4. The test results are summarized in Table 6 and Fig. 9 .\nFrom the sensitivity analysis, we conclude that the proposed SMAC methods can achieve high accuracies and AUCs with very limited training samples, e.g., n 50, and yield very competitive performance in the cases of mid-noise levels, e.g., \u03c3 2 \u00f02; 3\u00de."}, {"section_title": "Results from ADNI data", "text": "We conducted both binary and multi-category classification experiments using the ADNI data. In particular, we classified all possible pairs of the three classes as binary problems (NC vs AD, NC vs MCI and MCI vs AD) and identified AD, MCI and NC simultaneously as a three-category problem. The classification accuracies are presented in Tables 7 and 8 . After we obtained the best tuning parameters from the 30 iterations of the three-way split, we refitted the model using all the data with the selected parameters and registered the coefficient images to the Montreal Neurological Institute (MNI)-152 template (Fonov et al., 2011) . A plot of these coefficients in the orthogonal views is provided in Figs. 10 and 11 ."}, {"section_title": "ROC analysis and classification accuracy", "text": "In the classification problem of NC vs AD, SMAC-I and SMAC-II achieved the highest two accuracies of 89.12% and 88.33% respectively. The other three methods yielded similar accuracies between 86% and 87%. In the classification of MCI vs AD and NC vs MCI, the overall accuracies were lower. This may be partially explained by the uncertainty involved in the cognitive test for identifying MCI and the heterogeneity within the MCI group. EN-LR and SMAC-I/II yielded accuracy values that were very close in these tasks. SSVM was outperformed by the other methods, and could not capture informative signals in the classification of NC vs MCI. Notice that GN-LR achieved the highest values of AUC in all three binary classification problems. This is explained by the merit of the logistic loss in terms of estimating the \"soft\" class label, i.e. the associated probability . SMAC-I/II also yielded very competitive AUC values (second best in all three problems).\nFor the simultaneous classification of NC, MCI and AD, the classification accuracies are lower than those for the binary cases. SMAC-I/II yielded higher accuracies (53.22% and 52.68%) compared to those achieved by EN-LR and GN-LR (49.32% and 49.75%). The AUC values for MCI (AUC2) were lower than the ones for NC and AD, which was consistent with the results in the binary cases. SMAC-II achieved the best and second best values for AUC1 and AUC3, indicating a better detection rate for NC and AD."}, {"section_title": "Clinically meaningful coefficient images", "text": "Different from our synthetic imaging data, the MRI images of human brains are much more complex. Due to heterogeneity across subjects and the potential bias in the registration process, the boundaries between the discriminating regions and the background may not be as sharp as they are in the synthetic data. The patchy patterns may not be a perfect assumption for this case, but still help the classifiers to recover the predictive regional signals. From the plots in Figs. 10 and 11, we can clearly see consistent patterns across the coefficient images from different spatial methods. The sparse method EN-LR delivers ultra-sparse estimation that is difficult to interpret biologically. Notice that, among all the spatial methods, SMAC-II can recover more smooth and patchy signals, while screening out the irreverent regions in the brain. This will make it easier to identify ROIs in the coefficient images of SMAC-II.\nComparing Figs. 10 and 11, we can see that for each spatial method, the effective regions of \u03b2 in Fig. 10 and the first coefficient \u03b2 1 in Fig. 11 are relatively consistent, but the intensity values have the opposite signs, i.e., the regional effects are opposite. This is mainly because the positive class label in the binary problem is AD while in the multi-category problem, class label 1 is associated with NC.\nBy overlaying the coefficient images from SMAC-I/II on the MNI-152 ROI template, we are able to identify several significant discriminating regions, such as the frontal gyrus, hippocampus, and right fornix. Many papers in the existing literature have shown that these regions are potentially related to the development of MCI and AD. For instance, the hippocampal region is involved in memory processes that deteriorate Table 6 Noise Level Sensitivity Analysis. Columns are different standard deviations of noise; classification accuracy (ACC); area under the ROC curve (AUC); values are reported as percentages; evaluation is based on 600 test samples. L. Yu-Feng Liu et al. NeuroImage 175 (2018) 230-245 with the development of AD. The structure of the hippocampus is altered by the degenerative processes associated with AD, and loss of the hippocampal volume occurs at a rate that is approximately two to four times faster in patients with AD than in age-matched healthy controls (West et al., 1994; Dubois et al., 2014) ."}, {"section_title": "Computational considerations", "text": "In the MATLAB implementation of our algorithms, most of the computation is realized through matrix operations. For moderate image sizes (e.g., total number of voxels less than 10 4 ), our methods converge very fast compared to the others. For ultra-high-dimensional imaging data (e.g., total number of voxels greater than 10 6 ), the matrix operations require more memory usage. Furthermore, for all the classifiers used in our comparison, the regularization parameters highly affect the convergence and computational cost of the algorithms. We ran all the programs on the same type of computer (Intel Xeon E5-2643 v3 @ 3.40 GHz) with the same random-access memory (8 GB DDR3 at 1600 MHz). All algorithms were set with the same maximum number of iterations (t max \u00bc 1500) and convergence threshold (\u03b5 \u00bc 5 \u00c2 10 \u00c05 ) as defined in (20). We plotted the mean computational time from all 5 classifiers among 50 iterations in Simulation I (see Fig. 12 ). EN-LR required the shortest time for this classification problem. The variation in the computational time was very small. This was mainly due to the simplicity of the EN-LR model. SMAC-I required the second shortest computational time, followed by SMAC-II. This was because the second-order total variation involved computation of the discrete Hessian operators, which had larger sizes than the gradient operators in SMAC-I. GN-LR also yielded very competitive computational speed. SSVM was out-performed by the other classifiers in terms of the computational speed. This was mainly due to the splitting scheme in its ADMM algorithm and the heavy computational load in optimization involving the non-smoothing hinge loss."}, {"section_title": "Discussion", "text": "In this paper, we propose a SMAC for neuroimaging classification.\nOur method achieves the desired spatial sparsity and smoothness in the coefficient images via imposing the FL penalty. It improves the accuracy in both binary and multi-category classification problems. Both the simulation studies and the real data application demonstrate the usefulness of the proposed method. Numerous classification studies in the literature have used the ADNI data, but their data collection and evaluation procedures may vary significantly. A direct comparison of the results may not be a reasonable way to evaluate the methods. For example, Dukart et al. (2011) achieved 100% accuracy on the classification of NC vs AD, while we obtained 89.12% accuracy for the same problem. However, their study assessed only 13 NC and 21 AD subjects; whereas our study assessed the 749 participants in the ADNI study. Moreover, they used pre-computed ROI statistics from both MRI and fluorodeoxyglucose-PET images as predictors; whereas we directly classified the baseline MRI data and automatically extracted the regional information during the estimation procedure. An advantage of our proposed method is that we can handle imaging data with limited pre-processing, and still produce reasonably good results. This can be valuable when the prior knowledge of spatial segmentation is not available.\nWe introduce an efficient algorithm using ADMM to solve the corresponding large-scale optimization problem in our method. Specifically, we propose a novel splitting scheme in ADMM and reduce the complexity of optimization. As a result, our algorithm performs more efficiently than the ADMM algorithms in the existing literature, such as Ye and Xie (2011) and Watanabe et al. (2014) . Moreover, the proposed algorithm is very flexible and can be applied to solve various other prediction problems within the loss \u00fe penalty framework. We have included the implementation of the squared error loss in our package, which allows users to perform spatial regularized high-dimensional regression analysis. Details about this extension are included in Appendix A3.\nOne potential limitation of the proposed method is the underlying assumption of the spatially clustered patterns in the true coefficient images. This is a reasonable assumption in most neuroimaging applications. However, if the overall predictive effect is scattered around most of the imaging space, this method can be inefficient due to the complexity of the There are several possible interesting extensions of the proposed method for future exploration. For example, all linear classifiers are built based on the assumption that the images are perfectly aligned and the predictive regions are consistent across all the subjects within the same class. These assumptions can be violated in practice, both due to the nonnegligible registration error and the heterogeneous structures within the population. The estimation and predictive performance can be highly affected by this issue. One possible future research direction is to handle this heterogeneity problem."}, {"section_title": "Acknowledgment", "text": "Data collection and sharing for this project was funded by the Alzheimer's Disease Neuroimaging Initiative (ADNI) (National Institutes of Health Grant U01 AG024904) and DOD ADNI (Department of Defense award number W81XWH-12-2-0012). ADNI is funded by the National Institute on Aging, the National Institute of Biomedical Imaging and Bioengineering, and through generous contributions from the following: Alzheimers Association; Alzheimers Drug Discovery Foundation; Araclon Biotech; BioClinica, Inc.; Biogen Idec Inc.; Bristol-Myers Squibb Company; Eisai Inc.; Elan Pharmaceuticals, Inc.; Eli Lilly and Company; EuroImmun; F. Hoffmann-La Roche Ltd and its affiliated company Genentech, Inc.; Fujirebio; GE Healthcare;; IXICO Ltd.; Janssen Alzheimer Fig. 12 . Mean computational time for each method in Simulation I. In each plot, the vertical direction represents the value of \u03bb 1 , from top to bottom being f0; 2 \u00c014 ; 2 \u00c013 ; \u2026; 2 5 g, and the horizontal direction represents \u03bb 2 , from left to right being f0; 2 \u00c014 ; 2 \u00c013 ; \u2026; 2 5 g. "}, {"section_title": "Appendix A1. Alternative Direction Method of Multipliers", "text": "The ADMM algorithm (Boyd et al., 2011; Mota et al., 2011) was developed to handle large-scale convex optimization problems with the following separable and constrained structure: min X;Y g 1 \u00f0X\u00de \u00fe g 2 \u00f0Y\u00de subject to A 1 X \u00fe A 2 Y \u00bc 0;\nwhere X 2 \u211d p and Y 2 \u211d q are unknown parameters, g 1 \u00f0X\u00de and g 2 \u00f0Y\u00de are two closed convex functions, and A 1 2 \u211d m\u00c2p and A 2 2 \u211d m\u00c2q represent m linear constraints on X and Y, respectively. ADMM solves (22) by breaking them into smaller and simpler subproblems and solving them alternatively. Specifically, for the t \u00fe 1 iteration,\no ;\nwhere \u03c1 is the augmented Lagrangian parameter, u is a vector of dual variables, and \u22c5 j 2 denotes the L 2 Euclidean norm. The choice of \u03c1 affects the convergence rate of the algorithm (Boyd et al., 2011) , and remains an open question in the literature. We implement our algorithm with \u03c1 \u00bc 1, but it can be tuned in practice."}, {"section_title": "A2. The construction of matrix A", "text": "To simplify the inner product in the loss function, we need to construct a big matrix A to summarize all the linear operations. where W Y;l \u00bc diagfW y1;l ; \u2026; W yn;l g for l \u00bc 1; \u2026; K \u00c0 1. Moreover, we denoteX \u00bc diagfX; \u22ef; Xg as a matrix consisting of K \u00c0 1 copies of the original covariate matrix on the diagonal. In particular, the columns of 1's are added at the first column of the covariate matrix to include the intercepts in the computation. Then, we define A \u00bcW YX , and it can be verified that "}, {"section_title": "A3. Spatial regularized regression", "text": "The ADMM algorithm proposed in this paper is quite flexible and can be extended to solve other problems. In this section, we introduce the extension of our algorithm to solve a spatial regularized regression problem.\nFor the regression problem, the response variable y i can be a continuous measure of a certain clinical index. Denote the covariate image as X i . The regularized regression problem is given by b \u03b2 \u00bc arg min This is analogous to equation (9), by letting K \u00bc 2 and applying the square loss, i.e., l\u00f0u\u00de \u00bc u 2 . Both the first-and second-order total variations can be applied here.\nWe adopt the reformulation of equation (9) and construct a similarly constrained optimization to problem (11), i.e., Here, all the variable are the same as those in the algorithm for SMAC, but with fixed K \u00bc 2. The only change is that the loss function part becomes the squared error loss and A in problem (11) becomes X. Thus, the solutions for \u03b2, v 2 and v 3 remain the same by setting A \u00bc X in (14).\nThe subproblem involving v 1 becomes the following:\nv"}]