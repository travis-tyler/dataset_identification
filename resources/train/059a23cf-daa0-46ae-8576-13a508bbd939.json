[{"section_title": "Abstract", "text": "Recent studies on brain imaging analysis witnessed the core roles of machine learning techniques in computer-assisted intervention for brain disease diagnosis. Of various machine-learning techniques, sparse regression models have proved their effectiveness in handling high-dimensional data but with a small number of training samples, especially in medical problems. In the meantime, deep learning methods have been making great successes by outperforming the state-of-the-art performances in various applications. In this paper, we propose a novel framework that combines the two conceptually different methods of sparse regression and deep learning for Alzheimer's disease/mild cognitive impairment diagnosis and prognosis. Specifically, we first train multiple sparse regression models, each of which is trained with different values of a regularization control parameter. Thus, our multiple sparse regression models potentially select different feature subsets from the original feature set; thereby they have different powers to predict the response values, i.e. , clinical label and clinical scores in our work. By regarding the response values from our sparse regression models as target-level representations , we then build a deep convolutional neural network for clinical decision making, which thus we call ' Deep Ensemble Sparse Regression Network .' To our best knowledge, this is the first work that combines sparse regression models with deep neural network. In our experiments with the ADNI cohort, we validated the effectiveness of the proposed method by achieving the highest diagnostic accuracies in three classification tasks. We also rigorously analyzed our results and compared with the previous studies on the ADNI cohort in the literature."}, {"section_title": "Introduction", "text": "With the advent and advance of brain imaging techniques such as Magnetic Resonance Imaging (MRI), Positron Emission Tomography (PET), Diffusion Tensor Imaging (DTI), functional MRI (fMRI), imaging-based brain disorder diagnosis or prognosis has always been of great interest in computer-assisted interventions Fan et al., 2008; Cuingnet et al., 2011 ) . However, it was limited to analyze the high dimensional neuroimaging data until the application of machine learning techniques, which are now playing core roles in the field .\nGiven a brain image, to identify whether a subject has a certain brain disorder can be regarded as a classification task.\npenalization is considered as one of the key techniques in machine learning. In light of these, sparse regression methods with different forms of regularization terms ( Tibshirani, 1996; Zou and Hastie, 2005; Yuan and Lin, 2006 ) , and their variants ( Liu et al., 2009; Wang et al., 2011; Zhang and Shen, 2012; Zhou et al., 2012; Zhu et al., 2014; Suk et al., 2015b ) have been proposed and demonstrated their validity for feature selection in medical problems.\nMeanwhile, deep representation learning has recently been showing state-of-the-art performances in various fields of computer vision, speech recognition, natural language processing, and medical image analysis. To this end, it has also been considered as one of the major tools in brain imaging data analysis ( Li et al., 2014b; Plis et al., 2014; Suk et al., 2015a; 2016b; Pereira et al., 2016; Brosch et al., 2016; Dou et al., 2016 ) by achieving promising performances. In deep learning, a Convolutional Neural Network (CNN) is of main stream for image analysis thanks to its modeling characteristic that helps discover local structural or configural relations in observations. While it is desirable to apply CNNs to learn feature representations from a whole-brain MRI for brain disease diagnosis, it is still limited because of its huge number of network parameters, e.g. , millions number of parameters, that should be learned from a small number data, e.g. , less than 10 0 0 samples. In this regard, Brosch and Tam (2013) downsampled images before training a convolutional restricted Boltzmann machine for manifold learning of brain MRIs. However, image downsampling inevitably causes information loss of subtle structural changes especially in Mild Cognitive Impairment (MCI). Unlike the conventional methods that were mostly used for feature representation learning, in this work, we utilize a CNN for ensemble modeling by finding a non-linear mapping function from matrix-formed predictions, whose dimension is considerably lower than the original dimension of imaging features, to make a clinical decision.\nOne prevalent step of the sparsity-inducing regularization methods is to choose the optimal value of a regularization control parameter, mostly via cross-validation with a grid search strategy. It is, however, possible that for different validation sets, it can be different for the optimal value of a regularization control parameter. In this work, instead of choosing a single value for the regularization control parameter, we propose to build a set of sparse regression models, each of which is trained with different values of the regularization control parameter. We regard outputs of the sparse regression models, e.g. , clinical label and clinical scores in our work, as target-level representations. This is comparable to the previous work that mostly used the sparse regression method for feature selection and then trained a classifier such as support vector machine based on the selected features only. In our work, the sparse regression model plays the role of predicting target outputs, which we consider as abstract feature representation, along with informative features selection. It is noteworthy that the predicted values from multiple sparse regression models are stacked in an ascending or descending 1 order based on the regularization control parameter values. In this way, we can exploit the prediction values of \"neighboring\" sparse regression models, which are trained with relatively similar regularization control parameter values, as additional information. We then build a CNN that hierarchically combines the prediction values from sparse regression models, i.e. , target-level representations, for MRI-based brain disease diagnosis, especially, Alzheimer's Disease (AD) and its prodromal stage, MCI.\nOur deep network discovers the optimal weights to ensemble multiple sparse regression models in a hierarchical and non-linear way, which thus we call ' Deep Ensemble Sparse Regression Network ' ( DeepESRNet ). The proposed method can be understood as ensemble of expert systems. That is, sparse regression models with different regularization control values can be considered as experts that output their own prediction values. The prediction values of different experts are then combined by CNN that finds non-linear weighting coefficients among them.\nTo our knowledge, one of the beauties of CNN is to hierarchically integrate information distributed in the input by means of convolution and pooling operations. We utilize this feature to integrate the outputs from multiple sparse regression models, thus to build a strong classifier. In a convolution layer, the learnable kernels find relations among outputs, i.e. , predicted clinical label and clinical scores, from different sparse regression models. In a pooling layer, the max operation plays the role of drawing a mid-level decision among neighboring regression models. By repeating these operations over layers, our CNN finally make a decision by integrating all the information from multiple sparse regression models.\nThe rationale of using a CNN is two aspects: (1) In machine learning, it is generally known that combining multiple classifiers is helpful for the improvement of the performance of individual classifiers ( Kittler et al., 1998 ) . In this work, we use a CNN with a target-level representation as input to combine the outputs of multiple sparse regression models. Due to the use of non-linear activation functions, our CNN finds non-linear weight coefficients in combining the outputs from multiple sparse regression models. (2) In our target-level representation, element values ( i.e. , predicted clinical label and clinical scores) in the same row are obtained from the same sparse regression model, thus they are naturally related to each other. In the meantime, element values of neighboring rows are from different sparse regression models trained with different values of the regularization control parameter. Note that our target-level representation is obtained by stacking the outputs of multiple sparse regression models in an ordered way based on their regularization control parameter values. Sparse regression models trained with slightly different regularization control parameter values are likely to produce similar outputs. Thus, it is expected that values of the neighboring rows are more related to each other than those of the rows apart in the target-level representation. A CNN is suitable to well discover such local configural features and to combine the overall information hierarchically.\nThe main contributions of our work can be two-fold: 1) The different values of the regularization control parameter are used to select different f eature subsets with different weight coefficients. Hence, different regression models can predict both clinical status and clinical scores in different feature spaces. Also, the use of target-level representations from multiple sparse regression models has the effect of reducing dimensionality of an observation, allowing us to use CNN with less concern of data insufficiency. 2) Our DeepESRNet built on the outputs of the sparse regression models finds a (sub)optimal way of combining the regression models in a non-linear manner with the following rationales. First, the target-level representation values ( i.e. , response values of clinical label and clinical scores in our work) of a sparse regression model are highly related to each other ( intra-model relation ). Second, sparse regression models trained with similar regularization control parameter values tend to find similar weight coefficients, thus similar target-representations ( inter-model relation ). In these regards, we couple the target-level representation of the same sparse response model(s) and of the neighboring sparse response models via local learnable kernels. The local combination allows us to exploit complementary information and their hierarchical and non-linear integration over the whole target-level representation helps make a robust clinical decision. It is also noteworthy that since we treat the outputs from individual sparse regression models as target-level representation, we justify to re-use the training data for learning network parameters after training sparse regression models.\nMethodologically, our method can be considered as a cascading classifier, which is one case of ensemble learning. Our sparse regression models take a vector of features and output clinical label and clinical scores, which are usually used for making a decision. As a cascading classifier, our method further uses such outputs as inputs to another model, i.e. , CNN.\nThe rest of the paper is organized as follows: In Section 2 , we review the previous work on brain imaging-based AD disease diagnosis in the literature. We then describe the dataset used in this work and explain the steps involved in preprocessing for feature extraction in Section 3 . We elaborate upon the basics in sparse linear/logistic regression and propose a novel deep ensemble sparse regression network in Section 4 . The experimental results on the public ADNI dataset are presented by comparing with competing methods in Section 5 and the discussion on our experimental results and comparison with state-of-the-art results in the literature are detailed in Section 6 . We conclude this paper by summarizing the proposed method and suggesting future research directions in Section 7 ."}, {"section_title": "Related work", "text": "The small number of training samples compared to highdimension of imaging data has been one of the main challenges in brain imaging-based disease diagnosis. To circumvent the problem, various machine learning techniques were proposed in the literature. Depending on their strategies, techniques can be categorized into 1) feature embedding ( Roweis and Saul, 20 0 0; He et al., 2006; Liu et al., 2013 ) and 2) feature selection ( Wang et al., 2011; Zhu et al., 2014; Tohka et al., 2016 ) . Basically, the common goal of the methods of both categories is to learn dimension-reduced features or representations from a small number of training samples, while still pertaining useful information for target tasks. Specifically, the feature embedding methods find a latent low-dimensional space, where the original features can be efficiently represented without losing much information. Meanwhile, the feature selection methods try to find associations among features, based on which they select features informative to identify the incidence of a brain disease. From a clinical perspective, the interpretability of the features involved in diagnosis is of great importance. In this regard, the feature selection methods are generally preferred to the feature embedding methods, and thus we consider the feature selection methods in this paper.\nAmong various feature selection methods, sparse regression models have shown good promises in the small sample size problem with different forms of regularization. The Least Absolute Shrinkage and Selection Operator (LASSO) regression model ( Tibshirani, 1996 ) uses an 1 -norm to induce sparsity in the regression coefficients for each target response variable independently. To circumvent the limitation of LASSO, i.e. , independence in sparsity of coefficients, Zou and Hastie (2005) proposed the elastic net penalty which is capable of retaining the sparse property of LASSO and utilizing correlation among predictors simultaneously. Yuan and Lin (2006) proposed the group LASSO penalty that leads a group sparse property by imposing penalties in a group-wise manner via an 2, 1 -norm, and thus select features whose weights are non-zero to all predictors within the selected groups. This group LASSO has been successfully applied in brain imagingbased AD/MCI diagnosis ( Wang et al., 2011; Zhang and Shen, 2012; Wee et al., 2012; Suk et al., 2015b ) . For example, Zhang and Shen (2012) designed a multi-task sparse regression model with an 2, 1 -norm for AD diagnosis. Wang et al. (2011) proposed sparse joint classification and regression with logistic regression function for classification and linear regression function for regression. Zhou et al., introduced a smoothness constraint along with 1 -and 2, 1 -norm penalties for predicting disease progression. Suk et al. (2015b ) devised a discriminative group sparse representation method by penalizing a large within-class variance and a small between-class variance in estimating functional connectivities .\nIn the meantime, inspired by great successes in the fields of computer vision and speech recognition, deep learning methods have been applied to discover hierarchical features in brain images, too. For example, Suk et al. (2015a ) used a stacked auto-encoder to find non-linear relations among gray matter volumes of brain regions. Suk et al. (2014) also proposed a generative deep learning to integrate structural and functional patterns inherent in MRI and PET, respectively, by learning shared representations. Similarly, Ithapu et al. (2015) also devised a deep learning algorithm called a randomized denoising auto-encoder marker to integrate multimodal data of PET and MRI. However, due to complex composition of non-linear patterns in deep learning, it still remains challenging to interpret the learned representations. Hence, unlike other fields such as computer vision and speech recognition, it is still popular to use hand-crafted features for neuroscientific interpretations in the field of brain disease diagnosis. In this paper, we propose a novel brain disease diagnosis system based on sparse regression models with interpretable volumetric features, and further use a deep learning method to combine the regression models to make a clinical decision."}, {"section_title": "Materials and image processing", "text": ""}, {"section_title": "Dataset", "text": "We analyzed a baseline MRI dataset from the ADNI database ( http://www.loni.ucla.edu/ADNI ). The dataset included 805 subjects of 186 (AD), 393 (MCI), and 226 (Normal Control, NC). For the MCI subjects, they were clinically further subdivided into 167 progressive MCI (pMCI), who progressed to AD in 18 months, and 226 stable MCI (sMCI), who did not progress to AD in 18 months. Each subject had both Mini-Mental State Examination (MMSE) and Alzheimer's Disease Assessment Scale -Cognition (ADAS-Cog) scores recorded. The subjects were in the age between 55 and 90, with a study partner, who provided an independent evaluation of functioning. All of 805 subjects met the following general inclusion criteria: (a) NC subjects: an MMSE between 25 and 30 (inclusive), a clinical dementia rating (CDR) of 0, non-depressed, non-MCI, and non-demented; (b) mild AD subjects: an MMSE score between 18 and 27 (inclusive), a CDR of 0.5 or 1.0, and met the National Institute of Neurological and Communicative Disorders and Stroke and the Alzheimer's Disease and Related Disorders Association (NINCDS/ADRDA) criteria for probable AD. Demographic and clinical information of subjects is provided in Table 1 ."}, {"section_title": "Preprocessing", "text": "All structural MRI data in this study were acquired using 1.5T scanners. The baseline MRI data were downloaded from ADNI in the Neuroimaging Informatics Technology Initiative (NIfTI) format, which had already been processed for spatial distortion correction caused by gradient nonlinearity and B1 field inhomogeneity. We further processed the MR images by applying the typical procedures of Anterior Commissure (AC)-Posterior Commissure (PC) correction, skull-stripping, and cerebellum removal. Specifically, we used MIPAV software 2 for AC-PC correction, resampled images to 256 \u00d7 256 \u00d7 256, and applied N3 algorithm ( Sled et al., 1998 ) to correct intensity inhomogeneity. An accurate and robust skull stripping was performed along with cerebellum removal. To ensure the clean and dura removal, we manually 0 .75 \u00b1 0.25 0 .50 \u00b1 0.00 0 .50 \u00b1 0.03 0 .00 \u00b1 0.00 reviewed the skull-stripped images. Then, FAST in FSL package 3 was used for structural MRI image segmentation into three tissue types of Gray Matter (GM), White Matter (WM), and CerebroSpinal Fluid (CSF). 4 We finally parcellated them into 93 Regions Of Interest (ROIs), whose list is provided in Table B1 , by warping the atlas of Kabani et al. (1998) , which has been widely used for AD/MCI diagnosis studies ( Davatzikos et al., 2011; Negash et al., 2013; Suk et al., 2015a ) to each subject's space via HAMMER ( Shen and Davatzikos, 2002 ) , although many other advanced registration methods could be also used ( Avants and Gee, 2004 ; Zacharaki et al., 2009 ; Xue et al., 2006 ; Shen et al., 1999 ) . Next, we generated the regional volumetric maps, called RAVENS maps, using a tissue preserving image warping method ( Davatzikos et al., 2001 ) . In this work, we considered only the spatially normalized GM densities, due to its relatively high relevance to AD compared to WM and CSF . For each of the 93 ROIs, we computed the GM tissue volumes, which is widely used in the field for AD/MCI diagnosis ( Davatzikos et al., 2011; Hinrichs et al., 2011; Zhang and Shen, 2012; Suk et al., 2015a ) , as features, i.e. , 93-dimensional features from an MR image. 5"}, {"section_title": "Deep ensemble sparse regression network", "text": "\nUnlike the conventional approach that finds the optimal control parameter \u03bb in Eq. (1) via cross-validation from a predefined parameter space, in this work, we build multiple sparse regression models, as many as the size M of the predefined parameter space . 7 It is noteworthy that we use the predicted vector obtained by Eq. (6) as a target-level representation of the original input vector. Specifically, we exploit the M learned sparse regression models with different values of the control parameter \u03bb as ' target-level representation learners ' that transform an input vector x i into a matrix form\nwhere t \u03bb= (m ) denotes the predicted vector by a regression model trained with \u03bb equal to the m -th value in the parameter set . Fig. 1 illustrates the construction of a target-level representation matrix from M sparse regression models, each of which was trained with different value of a regularization control parameter. The target-level representation matrix is then fed into our CNN for clinical decision making as described below.\nNote that different values of a regularization control parameter \u03bb cause to select different feature subsets in learning sparse regression models. Therefore, our M sparse regression models produce different target-level representations, estimated from possibly different feature subsets. However, it is likely that sparse regression models trained with similar regularization control parameter values tend to have similar weight coefficients and thus, to select similar feature subsets. There can be high relations among neighboring rows of a target-level representation in Fig. 1 . In the meantime, since the target-level representations 7 In our implementation, we used a SLEP toolbox for sparse model learning, which requires a regularization control parameter, i.e., \u03bb, to be in the range of [0, 1] , and rescales the value internally. Based on our earlier work ( Suk et al., 2015b; 2016a ) , where we observed that parameter values of higher than 0.3 were not useful and never chosen in cross-validation, we thus defined the parameter space with 10 values equally spaced between 0.01 and 0.3. As for the size of parameter space ( M = 10), it is determined empirically.\nare basically related to clinical status and clinical scores jointly estimated from the original brain imaging features, the values are highly related to each other. Thus, there can be high relations among elements of the same row in a target-level representation. In these regards, we couple elements of the same row ( intra-model relation ) and elements of neighboring rows ( inter-model relation ) in a target-level representation T i together via learnable kernels that find configural relations locally. For hierarchical integration of the input representation T i , we employ a CNN that can discover configural relations inherent in inputs. It should be emphasized that to our best knowledge, this is the first work that systematically combines multiple regression models via CNN for classification. Fig. 2 illustrates our CNN that takes target-level representations obtained from multiple sparse regression models as input and discovers non-linear relations among them in a hierarchical manner for brain disease diagnosis. From a pattern classification standpoint, our CNN is an ensemble classifier that systematically finds the relations of different sparse regression models. Thus, we call our network as ' Deep Ensemble Sparse Regression Network ' (DeepESRNet).\nIn our DeepESRNet, we have three types of layers, namely, convolution layer, pooling layer, and fully connected layer. At a convolution layer, the previous layer's outputs (called feature maps) are convolved with learnable kernels and go through a non-linear activation function 8 to form the feature maps of the current layer as follows:\nwhere * is a convolution operator, a superscript ( ) denotes a layer index, V is a bias term for a feature map j , and f ( \u00b7 ) is a non-linear activation function. A pooling layer is interspersed with the convolution layer for reducing the resolution of feature maps. In our DeepESRNet, we assign a max-pooling layer that partitions an input feature map into a set of non-overlapping regions and outputs the maximum value for each region. Lastly, the fully connected layer is the same as the conventional multilayer neural network such that the inter-layer units are fully connected but with no units within the same layer connected. With this fully connected layer, we finally integrate all the information from the outputs from multiple sparse regression models, i.e. , predicted clinical status and clinical scores, for making a clinical decision at the top output layer of our DeepESRNet. . A second convolution layer with 30 feature maps follows to find associations among the values within the same feature maps and also across different feature maps simultaneously via a kernel k (2) jk \u2208 R 3 \u00d71 followed by a non-linear transformation, producing { V\n. We then apply a max-pooling operation to each feature map in the second layer, which downsamples the features maps into { V\nwith a non-overlapping sliding window of 2 \u00d7 1 in size. Beyond the max-pooling layer, the network corresponds to a conventional multi-layer neural network with two hidden layers (100 units and 50 units, respectively) and one output layer by taking vectorized values of the 30 feature maps in the max-pooling layer as input. For the output layer, we use a softmax function for classification.\nIn our DeepESRNet, we have network parameters, i.e. , kernels k in convolutional layers and also connection weights and biases in the top three multi-layer neural network, that should be learned from data. To train our DeepESRNet, we use a backpropagation algorithm ( Rumelhart et al., 1986 ) with a mini-batch gradient descent method ( Cotter et al., 2011 ) ."}, {"section_title": "Notations", "text": "Throughout this paper, we denote matrices as boldface uppercase letters, vectors as boldface lowercase letters, and scalars as normal italic letters, respectively. For a matrix X = [ x i j ] , its i -th row and j -th column are denoted as x i and x j , respectively. Also, we denote the Frobenius norm and 2, 1 -\nand\n, respectively. We use a superscript for transpose of a vector or a matrix."}, {"section_title": "Sparse linear/logistic regression", "text": "Assume that we are given N samples of a training set\nD -dimensional brain imaging features and the corresponding L -dimensional target values. Sparse regression models are formu-3 Available at ' http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/ ' 4 Note that when normalization is conducted with the whole-brain images, it can introduce unexpected structural differences for tissues. That is, there is no any difference but it can be caused for the difference by normalization due to the effect of the neighboring tissue that does show structural difference. One common way of minimizing such unexpected error is to normalize with the tissue-segmented images, instead of the whole-brain images ( Mechelli et al., 2005 ) . 5 In this paper, we exploit regional gray matter tissue volumes based on the fact that brain atrophy is one of the main neuropathological changes with AD. However, visual features with Scale-Invariant Feature Transform (SIFT) ( Lowe, 1999 ) or Histogram of Oriented Gradients (HOG) ( Dalal and Triggs, 2005 ) can also be good alternatives to the ROI-based regional features. lated in the form of an optimization problem as follows:\nwhere L (D; ) denotes a loss function and ( ) denotes a regularization term over a parameter set , and \u03bb is a regularization control parameter.\nIn terms of brain disease diagnosis, x i can include brain imaging features, e.g. , GM tissue volumes of 93 ROIs x i \u2208 R 93 in our work, and T can be defined with clinical outputs, e.g. , clinical label 6 and two clinical scores of MMSE and ADAS-Cog t i \u2208 R 4 in our work. Earlier, Zhang and Shen (2012) and Wang et al. (2011) independently designed a sparse multi-task learning model with the rationale that since the prediction of clinical label and clinical scores are inter-related it is reasonable to learn the models jointly rather than each prediction task, separately. The main difference between these two methods lies in the way of defining a loss function L . Specifically, Zhang and Shen used a single least square error function for both clinical label prediction (classification task) and clinical scores prediction (regression task) as follows\nwhere = W \u2208 R D \u00d7L . In the meantime, Wang et al. used different error functions for classification and regression tasks, namely, a cross-entropy function for classification and a least square error function for regression as follows\nwhere C denotes the number of classes,\nnumber of clinical scores, and ls = P \u2208 R D \u00d7R . However, these loss functions themselves do not enforce sparsity. The regularization term ( ) plays the role of selecting informative features for target tasks and different forms of the regularization term produce different sets of selected features. Among different forms of regularization in the literature, in this paper, we consider an 2, 1 -norm regularizer that induces sparsity in a group-wise manner by following Wang et al. (2011) and Zhang and Shen (2012) . Let denote a weight coefficient matrix, i.e. , = W for Eq. (2) and = [ Z P ] for Eq. (3) . Note that each element in a column \u03b8 j of assigns a weight to each of the observed features in predicting the j -th response \u02c6 t i j for x i . The regularizer of ( ) = 2 , 1 penalizes all coefficients in the same row of and thus guides to select features that are informative to predict all the response variables jointly ( Liu et al., 2009 ) . After finding the optimal weight coefficients \u02c6 with respect to a certain value of the control parameter \u03bb in Eq.\n(1) , we can then predict the response values for an input vector x * as follows:\nWe consider the predicted vector \u02c6 t as target-level representations obtained from a sparse regression model and utilize it as input to our CNN as described below for clinical decision making."}, {"section_title": "Experimental results", "text": "In this section, we validate the effectiveness of the proposed method for AD/MCI diagnosis or prognosis with MRI by comparing with competing methods. We consider three binary classification problems: AD vs. NC, MCI vs. NC, pMCI vs. sMCI. In MCI vs. NC classification, the samples of both pMCI and sMCI subjects were used for MCI class. Due to the limited number of samples, we applied a 10-fold cross validation technique. Specifically, we randomly partitioned the dataset into 10 subsets, each of which included 10% of the samples per class. We repeated experiments for each classification problem 10 times, by using 9 out of 10 subsets for training and the remaining one for testing at each time."}, {"section_title": "Experimental settings", "text": "With regard to the structure of deep neural networks, i.e. , the number of layers and the number of feature maps in each layer, there is no golden rule for those. In this work, we empirically designed our DeepESRNet with two convolutional layers followed by one max-pooling layer, two fully connected layers, and one output layer as shown in Fig. 2 . The kernels for two convolution layers were 3 \u00d7 4 and 3 \u00d7 1 in size, respectively, with a stride of 1. In the max-pooling layer, a kernel of 2 \u00d7 1 in size was used with a stride of 2. For two fully connected layers, we set 100 hidden units and 50 hidden units sequentially. We also applied a batch normalization ( Ioffe and Szegedy, 2015 ) to convolution and fully-connected layers except for the last output layer for fast training. No dropout ( Srivastava et al., 2014 ) was involved based on the work of Ioffe and Szegedy (2015) , where they empirically presented that dropout could be removed in a batch-normalized network. The network parameters were trained with a stochastic gradient descent approach ( Li et al., 2014a ) with a mini-batch size of 50, a learning rate of 0.001, a weight decay of 0.005, and a momentum factor of 0.9. We used a MatConvNet toolbox 9 ( Vedaldi and Lenc, 2015 ) to train our DeepESRNet. In regard to 9 Available at ' http://www.vlfeat.org/matconvnet/ ' computational time, for training our DeepESRNet, it took less than 1 minute in a computer with 3.4 GHz Intel(R) Core i7 CPU and 16GB 1333 MHz DDR3 RAM. All computations were conducted with CPU only without involving GPU computation. The short training time of our CNN was resulted from the greatly reduced input size after applying sparse regression models.\nWe considered two sparse regression models, namely, 1) MultiOutput Linear Regression with 2, 1 -norm regularization (MOLR) ( Yuan and Lin, 2006; Zhang and Shen, 2012 ) and 2) Joint Linear and Logistic Regression with 2, 1 -norm regularization (JLLR) ( Wang et al., 2011 ) with the loss function defined by Eqs. (2) and (3) , respectively. We set the space of the sparsity control parameter \u03bb with M = 10 values equally spaced between 0.01 and 0.3. 10 By taking the outputs of 10 regression models for each of MOLR and JLLR, we trained MOLR+DeepESRNet and JLLR+DeepESRNet, separately.\nTo validate the effectiveness of the proposed method, we compared our method with the two baseline sparse regression models and their variants of the following methods\n\u2022 MOLR+SVM: This method first finds the optimal weight coefficients \u02c6 W in Eq. (2) and then selects the informative features based on the learned weight coefficients. Specifically, after optimizing Eq. (2) , we had some zero row vectors in \u02c6 W and discarded the corresponding features. With the selected features only, we then trained a linear Support Vector Machine (SVM) for classification.\n\u2022 JLLR+SVM: This method jointly finds the optimal weight coefficients \u02c6 P and \u02c6 Z in Eq. (3) and then allows to select the informative features based on the learned weight coefficients. Specifically, after optimizing Eq. (3) , we had some zero row vectors in [ \u02c6 Z \u02c6 P ] and discarded the corresponding features. With the selected features only, we then trained a linear SVM for classification.\nFor a linear SVM in the competing methods of MOLR+SVM and JLLR+SVM, we determined the model parameter C via 5-fold nested cross-validation with the space of C defined as { 10 \u22125 , 10 \u22124 , . . . , 10 5 } and trained by using the LIBSVM toolbox. 11 Value (NPV) = TN/(TN + FN). We also considered Area Under the receiver operating characteristics Curve (AUC), which is widely used to evaluate the performance of diagnostic tests in brain disease diagnosis as well as other medical areas."}, {"section_title": "Performance evaluation and comparison", "text": ""}, {"section_title": "MOLR as a baseline regression model", "text": "The performance comparison among the competing methods with MOLR involved in different ways is presented in Table 2 . The proposed method of MOLR+DeepESRNet achieved mean classification accuracies of 90.28% (AD vs. NC), 74.20% (MCI vs. NC) and 73.28% (pMCI vs. sMCI). Our MORL+DeepESRNet improved the mean accuracies by 5.35% (AD vs. NC), 9.54% (MCI vs. NC), and 9.93% (pMCI vs. sMCI) in comparison with MOLR and by 3.41% (AD vs. NC), 7.58% (MCI vs. NC), and 6.62% (pMCI vs. sMCI) in comparison with MOLR+SVM.\nFor the metrics of sensitivity and specificity, our MOLR+DeepESRNet also outperformed the competing methods for the classification tasks of AD vs. NC and pMCI vs. sMCI. It is remarkable that our method enhanced the sensitivity by 14.51% (vs. MOLR) and 8.55% (vs. MOLR+SVM) for the most challenging task of pMCI vs. sMCI. For MCI vs. NC classification, MOLR achieved the highest sensitivity of 79.40%. However, in terms of the balanced accuracy that avoids inflated performance estimates on imbalanced dataset, e.g. , MCI vs. NC classification in our case, compared to the competing methods (MOLR/MOLR+SVM), our MOLR+DeepESRNet improved by 5.39%/3.47% (AD vs. NC), 6.99%/8.49% (MCI vs. NC), and 9.18%/6.91% (pMCI vs. sMCI).\nRegarding PPV and NPV, our MOLR+DeepESRNet achieved the highest PPVs of 85.50% in AD vs. NC and 81.92% in MCI vs. NC, and the highest NPVs of 94.25% in AD vs. NC and 80.12% in pMCI vs. sMCI. In the meantime, MOLR showed the highest PPV of 64.63% in pMCI vs. sMCI and the highest NPV of 73.08% in MCI vs. NC.\nIt is noteworthy that in terms of the AUC, which can be thought as a measure of the overall performance of a diagnostic test, the MOLR+DeepESRNet showed the best AUCs of 0. Table 3 shows the performance of our JLLR+DeepESRNet as well as the performance of the competing methods. Our JLLR+DeepESRNet achieved the mean accuracies of 91.02% (AD vs. NC), 73.02% (MCI vs. NC), and 74.82% (pMCI vs. sMCI). Compared to the competing methods, i.e. , JLLR/JLLR+SVM, our method improved the mean accuracies by 6.33%/4.63% (AD vs. NC), 4.47%/6.24% (MCI vs. NC), and 7.14%/8.43% (pMCI vs. sMCI)."}, {"section_title": "JLLR as a baseline regression model", "text": "In regard to the fact that the higher the sensitivity, the lower the chance of mis-diagnosing patients, which is of great importance in the clinic, it is promising that our JLLR+DeepESRNet overwhelmed the competing methods in sensitivity. Specifically, our method improved the sensitivity, compared to JLLR/JLLR+SVM, by 7.77%/5.1% (AD vs. NC), 4.36%/4.73% (MCI vs. NC), and 6.8%/8.99% (pMCI vs. sMCI). It was also observed for high improvements in specificity across the three classification tasks, i.e. , 4.99%/3.76% (AD vs. NC), 8.8%/12.53% (MCI vs. NC), and 8.58%/9.43% (pMCI vs. sMCI) in comparison with JLLR/JLLR+SVM.\nIn PPV and NPV, our JLLR+DeepESRNet showed the highest PPVs of 87.08% (AD vs. NC), 82.96% (MCI vs. NC), and 71.43% (pMCI vs. sMCI) and the highest NPVs of 94.23% (AD vs. NC), 55.77% (MCI vs. NC), and 77.47% (pMCI vs. sMCI). It is remarkable that in the task of pMCI vs. sMCI, the improvements for PPV by our JLLR+DeepESRNet were 15.77% (vs. JLLR) and 16.36% (vs. JLLR+SVM).\nRegarding the AUC metric, our JLLR+DeepESRNet showed the best AUCs of 0.9272 in AD vs. NC, 0.7361 in MCI vs. NC, and 0.7539 in pMCI vs. sMCI. Compared to JLLR+SVM, our method increased the AUCs by 0.0052 (AD vs. NC), 0.0155 (MCI vs. NC), and 0.0415 (pMCI vs. sMCI)."}, {"section_title": "Discussion", "text": ""}, {"section_title": "Visual inspection of target-level representation", "text": "To validate our rationale of using CNN, which is designed to extract local relationship in our target-level representation and to hierarchically integrate information, we first computed correlation coefficients among rows or columns of the target-level representations. Fig. 3 presents samples of the target-level representations and the correlation matrix estimated from our dataset, for which a sliding window of 4 \u00d7 4 in size, i.e. , 4 consecutive sparse regression models, was considered with a stride of 1. Specifically, for the number Q of target-level representations of 10 \u00d7 4 in size, we shaped them into a 3-dimensional tensor of 4 \u00d7 4 \u00d7 (7 \u00d7 Q ), where 7 comes from the use of a sliding window of 4 \u00d7 4 in size.\nThe large tensor was then used to compute the 4 \u00d7 4 correlation matrix. Clearly, there exists the correlations among target-level representations predicted from sparse regression models with similar control parameter values."}, {"section_title": "Performance comparison", "text": "To better justify the effectiveness of the proposed method, we further conducted statistical significance testing. The null hypothesis was that the combination of sparse regression models with the proposed DeepESRNet, i.e. , MOLR+DeepESRNet and JLLR+DeepESRNet, produces the same mean accuracies with the competing methods, i.e. , MOLR, MOLR+SVM, JLLR, and JLLR+SVM. We used the Wilcoxon signed rank test ( Wilcoxon, 1945 ) to assess whether the differences in classification accuracies between two methods are at a significant level. The resulting p -values are presented in Table 4 , where it is noticeable that all the null hypothesis can be rejected beyond the 95 percent confidence level ( i.e., p -value < 0.05). Hence, we can say that the proposed method outperformed the competing methods in terms of statistical significance by rejecting the null hypothesis beyond the 95 percent confidence level.\nAlthough it is not clear why some people with MCI progress to AD and some do not, MCI is considered as an early stage of dementia in the particular form and it is estimated that approximately 10-15% of individuals with MCI progress to AD in one year ( Alzheimer's Association, 2012 ) . In this perspective, it is momentous to correctly discriminate pMCI from sMCI so that pMCI subjects can take benefit from a proper treatment for possible delay of progressing to AD. In our experiments, our MOLR+DeepESRNet and JLLR+DeepESRNet improved, respectively, by 6.62% (vs. MOLR+SVM) and 7.14% (vs. JLLR) compared to the maximal accuracies of their counterpart methods. It is also noteworthy that our JLLR+DeepESRNet achieved the best performance across seven metrics considered in our work.\nFrom a clinical standpoint, the PPV is also of great importance, which measures the proportion of correctly diagnosed subjects belonging to AD, MCI, or pMCI in the tasks of AD vs. NC, MCI vs. NC, and pMCI vs. sMCI, respectively. Based on a recent report by Alzheimer's Association (2012) , the AD prevalence is projected to be 11 million to 16 million by 2050. For MCI and pMCI, although there is high variation among reports depending on definitions, the median of the prevalence estimates of MCI or pMCI in the literature is 26.4% (MCI) and 4.9% (amnestic MCI) ( Ward et al., 2012 ) . Regarding the AD prevalence by 2050, our JLLR+DeepESRNet, which maximally achieved the PPV of 87.08% in the classification of AD and NC, can correctly identify 9.5788 million to 13.9328 million of subjects with AD, while JLLR+SVM, whose respective PPV was 82.25%, can identify 9.0475 million to 13.16 million of subjects with AD. Accordingly, our method can correctly identify as many as 0.5313 million to 0.7728 million of subjects more than JLLR+SVM.\nWe also compared our two methods, each of which involved different baseline regression models but with the same DeepESRNet architecture, and summarized results in Fig. 4 . From the figure, there is no significant difference between them across all three tasks, i.e. , AD vs. NC, MCI vs. NC, and pMCI vs. sMCI. In our statistical significance testing with the Wilcoxon signed rank test ( Wilcoxon, 1945 ) , the p -values were 0.25 (AD vs. NC), 0.4570 (MCI vs. NC), and 0.2109 (pMCI vs. sMCI), for which we cannot reject the null hypothesis that their mean accuracies are the same in the different tasks."}, {"section_title": "Comparison with (deep) neural networks", "text": "It may be possible to think of mapping the ensemble of sparse regression models into a conventional multi-layer perceptron or a deep neural network by regarding a subset of hidden units being one sparse-model and other subsets of hidden units as other sparse-models, etc. In this regard, we conducted experiments with (deep) neural networks, into which the 93 MR features were fed, by varying the number of hidden layers and their respective units. For all the networks, we initialized the parameters, i.e. , connection weights and biases, via greedy layer-wise pretraining ( Hinton and Salakhutdinov, 2006 ) by using a Stacked Auto-Encoder (SAE) ( Bengio et al., 2007 ) , 12 and trained with a stochastic gradient descent approach ( Li et al., 2014a ) with a learning rate of 0.01, a weight decay of 0.0 0 01, and a momentum factor of 0.9. We summarized the results in Table 5 . Overall, for the classification of AD vs. NC, there were no significant differences in performance among the neural networks with different architectures considered in our experiments. However, for the task of pMCI vs. sMCI, the 3-layer neural network, i.e. , 93(input)-50(hidden)-30(hidden)-2(output), "}, {"section_title": "Table 5", "text": "Performance of (deep) neural networks, pretrained with Stacked Auto-Encoder (SAE), with 93 regional features. The boldface denotes the best performance for each metric in each classification task.\nshowed the superiority to the other networks. When comparing with the performances of our method in Tables 2 and 3 , the proposed method outperformed the (deep) neural network-based methods.\nIn the meantime, in order to validate the use of a CNN in our method, we also performed experiments with (deep) neural networks by taking the vectorized target-level representations as input. We considered the same network architectures in Table 5 and trained networks with the same parameter settings. The results are summarized in Table 6 . In comparison of the results in Table 6 with the performances in Tables 2 and 3 , the proposed method again outperformed (deep) neural networks that took the vectorized target-level representation as input."}, {"section_title": "Comparison with previous studies on ADNI dataset", "text": "We compared the maximal accuracies achieved by our JLLR+DeepESRNet with the accuracies of the previous studies of MRI-based AD/MCI diagnosis on the ADNI cohort in the literature. Note that, due to the difference in dataset size and different approaches for extracting features (they all belong to the volumetric methods, though), it is not fair to directly compare the performances among the methods. However, since those performances were obtained with the same ADNI cohort, it still deserves to compare their performances. Since previous work mostly focused on classification tasks of AD vs. NC and pMCI vs. sMCI, we summarize here only for these two tasks in Tables 7  and 8 , respectively. First, in the AD vs. NC task, our method of JLLR+DeepESRNet achieved the highest accuracy and sensitivity. When comparing with Liu et al.'s results, the results are competitive. However, we would like to emphasize the improvements of 6.4% in sensitivity, which is clinically regarded more important than other metrics. In the meantime, for the task of pMCI vs. sMCI, Moradi et al. 's (2015) method that combined MRI features with age and cognitive measures for classification showed the highest accuracy and sensitivity. However, they considered a smaller-sized dataset than ours and their very low sensitivity raises doubts about an overfitting problem in their classifier, possibly due to a much smaller number of sMCI samples than the number of pMCI samples. Except for Moradi et al.'s method, our JLLR+DeepESRNet achieved the best accuracy, sensitivity, and specificity on the largest dataset, i.e. , 167 pMCI subjects and 226 sMCI subjects."}, {"section_title": "Potential imaging biomarkers", "text": "It is worthy to understand and visualize ROIs selected in sparse regression models that provide useful information to extract target-representations, which are finally used by our deep model. Note that it doesn't mean those selected ROIs used by deep learning directly. Fig. 5 shows the frequency distribution of the selected ROIs over 10-fold cross validation for three different classification tasks by our multiple JLLR. To identify brain regions that can be regarded as potential imaging biomarkers, we first identified the most selected features. We defined the most selected features based on their frequency, which should be higher than 95, 13 and then found the commonly selected ones across three tasks. The brain regions corresponding to the commonly selected features are as follows: insula right, precentral gyrus right, lateral front-orbital gyrus right, frontal lobe WM left, cingulate region left, hippocampal formation right, superior parietal lobule left, middle temporal gyrus left, temporal lobe WM left, superior parietal lobule right, lateral front-orbital gyrus left, inferior temporal gyrus left, lateral occipitotemporal gyrus right, hippocampal formation left, medial occipitotemporal gyrus left, middle temporal gyrus right, and lateral occipitotemporal gyrus left."}, {"section_title": "Conclusions", "text": "In this paper, we proposed a novel method that combines two conceptually different models of sparse regression and deep CNN. Specifically, we proposed to build multiple sparse regression models with different values of a regularization control parameter. Next, we devised a CNN by taking the predictions from the multiple regression models as input for final clinical decision making. With an MRI dataset of 805 subjects from the ADNI cohort, our methods outperformed the competing methods in terms of statistical significance, rejecting the null hypothesis beyond the 95 percent confidence level. One of the limitations in our current work is related to the predefined number of regularization control parameter values. From a machine learning perspective, it is necessary to find the optimal number of regularization control parameter values from training data solely, which should be our future research issue. In the meantime, as end-to-end learning has verified its effectiveness, especially in deep learning ( Long et al., 2015; Yang et al., 2016 ) , we believe that there is a way to 13 The maximal frequency in our work is 100.\nfurther improve the proposed method in that direction. That is, it is desirable to train parameters of both sparse regression models and a CNN jointly in a systematic manner.\nAs deep learning has achieved the state-of-the-art performance over different artificial intelligence applications, its use for performance enhancement is also one of the major steps in medical imaging. However, performance improvement in brain disease diagnosis is still minor. In order to foster the use of deep learning for imaging-based brain disease diagnosis, we suggest some directions. First, as witnessed in computer vision, where breakthrough improvements could be achieved by exploiting large amounts of training data, e.g. , more than 1 million annotated images in ImageNet ( Russakovsky et al., 2015 ) , it would be one direction to build such big publicly available brain imaging datasets. These will help deep models to find more generalized features for brain disease diagnosis, thus allowing making a leap in performance. Second, it is necessary to develop algorithmic techniques to efficiently handle images acquired with different scanning protocols, by which there is no need to train scanning protocol-specific deep models. Third, it is desirable to develop a systematic framework for constructing an optimal network architecture, instead of empirical design. The performances are generally sensitive to the varying number of layers or units per layer ( e.g. , Tables 5 and 6 ). Last but not least, it is important to develop a method for identifying or interpreting deep learned features that mostly devoted to the predicted outputs, thus allowing for practical use in clinic."}, {"section_title": "Acknowledgment", "text": "Data used in preparation of this article were obtained from the Alzheimer's Disease Neuroimaging Initiative (ADNI) database ( http://www.loni.ucla.edu/ADNI ). As such, the investigators within the ADNI contributed to the design and implementation of ADNI and/or provided data but did not participate in analysis or writing of this report.\nThis Table A1 Performance of (deep) neural networks, pretrained with Deep Belief Network (DBN), with 93 regional volume features. The boldface denotes the best performance for each metric in each classification task."}, {"section_title": "# of hidden units", "text": "Tasks Accuracy (%) Sensitivity (%) Specificity (%) BA (%) PPV (%) NPV (%) AUC"}]