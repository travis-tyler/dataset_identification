[{"section_title": "Abstract", "text": "The Southeastern Universities Research Association (SURA) has advanced the SURA Coastal Ocean Observing and Prediction (SCOOP) program as a multi-institution collaboration to design and prototype a modular, distributed system for real-time prediction and visualization of the coastal impacts from extreme atmospheric events, including hurricane inundation and waves. The SCOOP program vision is a community \"cyberinfrastructure\" that enables advances in the science of environmental prediction and coastal hazard planning. The system architecture is a coordinated and distributed network of interoperable, modularized components that include numerical models, information catalogs, distributed archives, computing resources, and network infrastructure. The components are linked over the Internet by standardized web-service interfaces in a service-oriented architecture (SOA). The design philosophy allows geographically disparate partnering institutions to provide complementary data-provider and integration services. The overall system enables coordinated sharing of resources, tools, and ideas among a virtual community of coastal and computer scientists. The distributed design builds on the notion that standards enable innovation, and seeks to leverage successes of the World Wide Web by creating an environment that nurtures interaction between the research community, the private sector, and government agencies working together on behalf of the nation."}, {"section_title": "", "text": "head, 2000)-against the potential loss of life and property due to inadequate preparation. This manuscript describes the design of an information architecture for a community science initiative aimed at enhancing our nation's capacity for coastal hazard prediction and disaster mitigation.\nWith funding provided by the National Atmospheric and Oceanic Administration (NOAA) and the Office of Naval Research (ONR), the Coastal Research Committee of the Southeastern Universities Research Association (SURA) has advanced the SURA Coastal Ocean Observing and Prediction (SCOOP) program (http://scoop.sura.org/). SCOOP is a multi-institution (http:// scoop.sura.org/partners.html) collaboration to prototype a distributed information network of shared resources focused on the challenges of predicting coastal hazards. The prototype network will broaden access to the requisite data, models, computational resources, and other key components of a comprehensive realtime environmental prediction system. Many of the primary data sources and modeling ca-T 1. Introduction he 2005 Atlantic hurricane season was remarkable for its early beginning, the number of named storms (27) , and for having the most intense hurricane on record in the Atlantic (NCDC, 2006) . Undoubtedly the season will be most remembered for Hurricane Katrina, and its devastation of southern Mississippi and Louisiana. Hurricane Katrina alone is estimated to have caused more than 1,800 deaths and record damages of over $81 billion (Knabb et al., 2006) . Even more sobering is the conclusion that the destructive potential of these storms is increasing as an effect of climate change (Emanuel, 2005) . With hurricane impacts so devastating and costly, the potential benefits of timely hazard predictions are correspondingly high. One obstacle to realizing these benefits involves getting relevant information to emergency responders well in advance of hurricane landfall (Malone and Hemsley, 2007) . Responders need time to weigh the costs of unnecessary evacuationoften estimated at one million dollars per mile of coastline evacuated (Smith, 1999; White- pabilities are already used by operational agencies, private enterprise, and research institutions. Data from these systems are increasingly available due to the adoption of community standards from organizations such as the World Wide Web Consortium (W3C; http:/ /www.w3.org) and the Open Geospatial Consortium (OGC; http://www.open geospatial.org). The SCOOP vision is to leverage and integrate the disparate data sources in an information architecture that enables transformational science and provides innovative science products.\nThe SCOOP system design uses a service-oriented architecture (SOA). SOA is increasingly common in science (Foster, 2005) , and comprises a design philosophy as opposed to an information technology. The architecture has been variously referred to as \"cyberinfrastructure\" (Atkins et al., 2003) and \"e-Infrastructure\" (Foster, 2005) . The \"Grid\" is a closely related term coined in the mid 1990s to describe the application-neutral concept of a distributed computing infrastructure (Foster et al., 2001) . Examples include the NSF TeraGrid (http:// www.teragrid.org), the Open Science Grid (http://www.openscience grid.org), and the relatively new SURAgrid (http:// www.sura.org/programs/sura_grid.html). The SCOOP program focuses on coastal science applications that use distributed computational and storage resources.\nThe premise is that a shared, community cyberinfrastructure can engage the intellect and resources of some of the nation's top research universities, and invite involvement of the private sector and operational agencies, as appropriate. The approach to creating a coordinated system of networked components builds from lessons learned in creating the World Wide Web. The underlying technologies are common in computer science but relatively new in the coastal sciences. As a design philosophy, SOA underlies the \"system of systems\" concept for observing the earth (http:// www.epa.gov/geoss), and is found in two recently proposed conceptual architectures ( h t t p : / / w w w. o c e a n . u s / I O O S _ Arch_Proposals) for the Integrated Ocean Observing System (IOOS). SOA is arguably the only cost-effective approach to integration of legacy systems because the design involves standards-based service interfaces to connect heterogeneous components, but does not require standardizing the underlying components themselves.\nHere, we provide a scientific rationale and requirements for the SCOOP architecture (including a description of the specific SCOOP applications for coastal inundation), describe design requirements and a generalized work process used to design the architecture, present two different views of the architecture itself, discuss the present status of the prototype implementation, and relate the SCOOP SOA to other types of modeling frameworks and parallel-computing paradigms. We conclude with some thoughts relevant to turning the SCOOP program prototype into an operational system."}, {"section_title": "Scientific Rationale and Requirements", "text": ""}, {"section_title": "Ensemble Modeling", "text": "Researchers continue to make substantial progress in predicting storm tracks and intensities, but significant challenges remain. Consider, for example, Figure 1 ; the sequence of images shows predicted trajectories for Hurricane Katrina from eleven different numerical weather-prediction models over the five days before landfall in New Orleans. The actual trajectory appears in black with open circles. There was large disagreement among the models when Katrina was five days from landfall. Four days before landfall, most models agreed, but incorrectly put the storm on track for the Florida Panhandle. Not until two days before landfall did all models agree that Katrina would hit near New Orleans.\nThe sequence illustrates that environmental prediction is a problem in probability and statistics. Emergency planners and responders need estimates of forecast probability, such as the likelihood that a specific region will flood and for how long. Predicting the single best storm track and its coastal impacts is a challenge in itself, but predicting probability distributions is much more difficult. The associated ensemble-modeling techniques require that computer simulations of an event be run many tens or hundreds of times-once for each plausible realization-thereby creating huge computational demands on any nearreal-time, event-driven system.\nAdditional challenges arise from observational requirements for real-time prediction. The requisite observational data collectively determine the reliability of the information products they are used to produce. However, a wide variety of organizations collect and (sometimes) disseminate relevant data in a correspondingly wide variety of non-standard formats. The lack of standards makes data flow into any prediction system extremely complex.\nFrom environmental sensors to super-computers to decision-makers, observations and predictions must be turned around and disseminated in a matter of hours to have their most critical societal benefits. The U.S. Commission on Ocean Policy has articulated the rationale for a national Integrated Ocean Observing System (IOOS) that would enable the scientific community to take on such challenges:\nCoastal The first step in building the system involves integrating diverse data flows from a variety of ocean observing initiatives around the country (Ocean. US, 2006) . Utilizing some of the first Web-service specifications from the OGC, SURA supported a community effort that made substantial progress toward demonstrating interoperability of data and data products using web-based Geographical Information Systems (GIS). The effort resulted in a technical proof of concept for serviceoriented aggregation with a portal at http:// www.openioos.org. This paper describes the relatively complex next step in a system design where integrated data flows support an open-access, scalable, modular, and distributed real-time environmental prediction system."}, {"section_title": "The SCOOP Use-Case Scenarios", "text": "The SCOOP architecture is designed to support an application set that includes three distinct use-case scenarios. An \"event-driven, ensemble-prediction\" scenario uses warnings of extreme events (e.g., as issued by the National Hurricane Center [NHC] during an active hurricane) to trigger automated, on-demand, ensemble-model calculations of inundation and waves. These calculations are designed to run quickly so they can support the urgent and immediate needs of real-time hazard planning and response. A \"24/7\" scenario runs constantly, and provides continually updated day-to-day forecasts of waves and water level. This scenario could serve a variety of practical purposes. In SCOOP applications, the 24/7 scenario provides initialization and boundary conditions for other models in the infrastructure. A third \"retrospective\" scenario supports research and analysis of past events.\nThe SCOOP architecture is designed to support all three scenarios without reconfiguration of the underlying components. The extent to which a single architecture can support all three scenarios determines the extent to which a production version of the system could blur the distinction between research and operations, to the benefit of both.\nThe process chain for all scenarios starts with data sources that \"drive\" the system. These include NHC warnings, wind-field predictions from operational service providers, and in situ sensor observations of variables such as water level and wave height. The end of the process chain includes predictions of coastal impacts that yield value-added and qualitycontrolled information products. The products are visualized on a Web browser and disseminated in data formats that support GIS-compatible decision-support tools.\nWorkflow for any specific use-case scenario will involve a unique set of data sources selected from a broad range of possible inputs. For example, the SCOOP system ingests hurricane wind predictions and daily wind forecasts from meteorological models coming from a variety of NOAA and Navy programs. These winds drive the 24/7 coastal surge and wave models. Observational data sources used for verification and quality control come from the NOAA National Water Level Observation Network (NWLON), and wave measurements come from the National Data Buoy Center (NDBC), as well as various universitybased regional ocean-observing systems along the U.S. coastal zone. Since the objective is to build and maintain a community resource, SCOOP places strong emphasis on system requirements that enable reusability of any of these data sources for multiple purposes. Consequently, results must be archived and registered to enable data discovery. This includes a catalog that documents provenance and quality assurance and supports discovery and access, especially by those who were not responsible for generating the data."}, {"section_title": "Community Modeling and Community Models", "text": "The SCOOP program goal is to create a collaborative environment for community modeling that engages scientists from different disciplines and organizations. The associated design requirements recognize that the coastal modeling community has not settled on any single community model, nor should it. Different models often have different strengths, and the best models will likely evolve from healthy competition and peer review by a community that has a variety of model-development efforts. Rather than advocate one model over another, the design goal is to provide a collaborative environment that facilitates controlled inter-comparisons that might ultimately give rise to better models and model products. Therefore, numerical models are considered interchangeable components in the SCOOP system infrastructure. Figure 2 shows a variety of numerical modeling grids and the acronyms used by the various models that are being integrated into the SCOOP infrastructure. The collection includes regular grids associated with surface-wave models: Simulating Waves Nearshore (SWAN), WAVEWATCH III (WW3), and Wave Analysis Model (WAM), plus finite-element and curvilinear grids associated with storm-surge models: Advanced Circulation Model (ADCIRC), Eulerian-Lagrangian CIRCulation (ELCIRC), and Curvilinear-grid Hydrodynamics 3D (CH3D; http://ch3d.coastal.ufl.edu). Model \"integration\" into the SCOOP infrastructure involves a range of activities including translation and interpolation interfaces that allow these grids, the associated model inputs and outputs, and the models themselves to be combined and run in a variety of ways."}, {"section_title": "The SCOOP Work Process", "text": ""}, {"section_title": "Generalized Work Process", "text": "Figure 3 provides a high-level view of the general, end-to-end work process that describes the entire SCOOP application set. The process begins at the top of the diagram with a definition of the specific scenario configuration. All three use-case scenarios involve some type of wind ensemble (represented by the oval labeled \"winds\"). The 24/7 scenario includes the degenerate case where the wind ensemble has only one member. A working prototype of the event-driven ensemble-prediction scenario-computationally the most challenging of the supported scenarios-uses a 40-member wind ensemble derived from NHC warnings. The parameters for hurricanetrajectory uncertainties (the probability cone) are used to create an ensemble of five-day wind field predictions from a well-known hurricanewind formulation (Holland, 1980) . The next step in the work process involves coupling individual wind-ensemble members with one or more numerical models for storm surge or wind waves. The SCOOP team is integrating a hierarchy of increasingly complex models and model combinations, as indicated by the three rectangles in the third row of Figure 3 . The simplest members of the hierarchy include two large-scale models for the entire North Atlantic and Gulf of Mexico: ADCIRC (Luettich et al., 1992) provides tidal water levels and wind-driven storm surge, and WW3 (Tolman, 2002; Tolman et al., 2002) provides ocean surface waves. The large-scale models are uncoupled; that is, they run independently of one another.\nThe next level of complexity in the model hierarchy involves regional, high-resolution models of coastal regions and estuaries along the Gulf of Mexico and the east coast of North America-the box labeled \"Regional Waves and Surge\" in Figure 3 . In some cases, these regional models use open-ocean boundary conditions derived from the output of the large-scale models, as indicated by the arrows connecting the adjacent boxes in row 3 of Figure 3 . For example, ELCIRC (Zhang et al., 2004a; Wang et al., 2004; Shen et al., 2006 ) supports a high-resolution forecast of street-level products in the Chesapeake Bay region, with boundary conditions coming"}, {"section_title": "FIGURE 2", "text": "The numerical modeling grids employed by the SCOOP Program and the regions over which they are deployed."}, {"section_title": "FIGURE 3", "text": "Generalized work process in SCOOP.\nfrom large-scale ADCIRC. Other regional formulations include CH3D (Sheng, 1987 (Sheng, , 1990 , which is configured for Charlotte Harbor, Tampa Bay, and eastern Florida, as well as the entire Northern Gulf. For waves in regions of shoaling bathymetry, SWAN (Booij et al., 1999 ) is embedded at a high-resolution with boundary conditions coming from the large-scale wave model. The most sophisticated model suites involve greater coupling between the wave and surge models. A model suite in development for the North Carolina coast will use a highresolution, regional wave model (SWAN) to provide momentum flux from breaking waves to a high-resolution storm-surge model (ADCIRC) along the North Carolina coast, and the surge calculation will provide water levels for SWAN.\nIn general, a numerical model or model suite is combined with each member of the wind-ensemble. For an N-element ensemble, there are N numerical calculations run as N independent jobs on any of a variety of supercomputers available in a \"Grid-enabled\" network such as SURAgrid. This part of the work process is implicit in Figure 3 .\nSCOOP architecture requirements extend well beyond the need to run multiple jobs on distributed computers. Once the jobs are run, output from each job is transported to a distributed archive for analysis and visualization. The lowest row in the work-process diagram indicates that observations from environmental sensors for example, coastal water levels from NOAA/NWLON, wave measurements from NOAA/NDBC and coastal observing systems including the Gulf Coast Ocean Observing System (GCOOS), the SouthEast U.S. Atlantic Coastal Ocean Observing System (SEACOOS) and the Gulf of Maine Ocean Observing System (GoMOOS), support various analysis and verification steps. Results are then made available for visualization and dissemination by a variety of web-accessible service and portal interfaces."}, {"section_title": "A Specific Workflow Example", "text": "Figure 4 provides a relatively detailed view of workflow for the event-triggered, ensemblemodeling scenario. The figure shows various system components organized so that time proceeds from left to right. Data flow proceeds vertically in the figure from networked resources along the bottom to application-specific components higher in the diagram. Arrows in the conceptual diagram reflect a combination of service messaging (dashed), data transport (solid) and process flow (thick solid).\nThe sequence is triggered by an automated warning from the NHC. Wind fields are created at one site, and the data enter the workflow through the resource-access layer that connects to the Internet. The winds are then archived and registered in the catalog.\nThe arrival of the forecast-wind ensemble also triggers a sequence of events that spawn the collection of model runs. The sequence includes translation filters that assure the models can ingest the data. The resource selection service (i.e., resource management) identifies and selects the available computational resources, and launches the model runs across the network of distributed computing resources. Meanwhile, observation data (including water levels, waves, streamflow and winds) are obtained from the appropriate source locations and/or archive.\nAs model results are generated, they are pushed to the archives, cataloged, and processed with various verification and analysis tools. Finally, visualization services are used to process the model results so that they can be displayed on web portals (e.g., http:// www.OpenIOOS.org) or integrated into an OGC-compliant GIS.\nMonitoring and workflow services (not explicit in Figure 4 ) facilitate automation of the complete sequence. Other scenarios involve workflows that combine the same components in appropriate configurations."}, {"section_title": "The SCOOP Architecture", "text": "This section provides two high-level views of the target SCOOP architecture-not all components are supported in the present implementation of the working prototype."}, {"section_title": "Layer-Stack Diagram", "text": "In general, layer-stack diagrams provide the hierarchical framework for functionality of an SOA. The layer diagram in Figure 5 is a highlevel overview of the SCOOP architecture. Each layer in the stack represents a collection of components with closely related functions. The various components within each layer provide functionality that supports information flow across adjacent layers. Connections between layers can be made in a variety of ways in order to support any number of different use scenarios. The color-scheme for the layers in the stack corresponds to the colors used for individual components in Figure 4 ."}, {"section_title": "FIGURE 4", "text": "Conceptual workflow diagram for the event-triggered ensemble-modeling scenario.\nThe uppermost \"user-interface layer\" interacts directly with end users and end-user tools, isolating them from the complexities of the underlying system architecture. Components in this layer may be tailored to the workflows of one or more specific scenarios. Examples include web portals that spawn user-customized workflows and decision-support tools that automatically ingest information products through an OGC-compliant, GIS-compatible interface.\nThe \"application and tools layer\" contains the various numerical models for predicting and analyzing environmental phenomena. This layer includes data translation and visualization service components, and workflow-configuration tools. Components within this layer generally interact with one another in a fashion that is coordinated by the workflow tools.\nThe \"management layer\" enables workflows by coordinating components in the applications and tools layer and assuring that they have the necessary resources. In this role, the management layer coordinates access to physical resources in the system. Management services generally vary from one scenario to another. Thus, management components need to be flexible and readily configurable to accommodate a range of possible workflows.\nThe \"resource-access layer\" provides standard protocols that connect the management layer to physical computing, storage, and network reThe \"resources layer\" includes all the physical resources for computing, storage, and network connectivity. For SCOOP, physical resources and system components are distributed at different institutions over the Internet. Distribution has advantages, but it also introduces special challenges that are overcome with crosscutting components. For example, resourcemanagement challenges arise in heterogeneous environments (e.g., different hardware platforms may require different operating systems). Virtualization interfaces within the resourceaccess layer provide one increasingly popular technique for dealing with such heterogeneities, but there is no panacea. Benefits to this distributed approach include an ability to access a large pool of resources, thereby significantly increasing the probability of having sufficient resources with very short notice. Also, geographically distributed resources are much less susceptible to localized severe storm events and associated power outages, ensuring access to required resources when most needed."}, {"section_title": "Node Connectivity Diagram", "text": "The node connectivity diagram ( Figure 6 ) provides yet another view of the SCOOP target architecture. Nodes in the figure indicate some of the main service components. Arrows"}, {"section_title": "FIGURE 5", "text": "Layer-stack diagram for the SCOOP SOA. The color scheme reflects the colors used for individual components in Figure 4 . Full color figure available at: http://www.mtsociety.org/publications/journal.cfm.\nsources. These protocols facilitate management and access to the distributed resources. Components include a combination of middleware protocols (e.g., Globus), web-service and data-transport protocols (e.g., Simple Object Access Protocol "}, {"section_title": "FIGURE 6", "text": "Node connectivity diagram.\nconnecting nodes show control and messaging interactions. This is a high-level conceptual diagram-actual software-engineering diagrams would describe specific and detailed interactions and messaging sequences that are represented only conceptually in Figure 6 .\nThe application manager provides a highlevel job-management service that knows about specific SCOOP applications. Such domain-specific knowledge makes this component different from a general workflow or resource manager (e.g., Condor, Pegasus). The application manager tells the workflow manager what needs to be done for the particular SCOOP application.\nThe quality assurance (QA) component reflects the fact that contributions to the archive must undergo quality assurance procedures to insure integrity of the data and transfers (check sums, etc.) and to document data provenance. The quality control (QC) component represents automated procedures and tools for quality control, including comparisons between model output and actual observations, which might trigger quality control flags or warnings when predicted values exceed threshold values.\nThe \"user portals and clients\" node represents a variety of interfaces into the system. These include limited-access portals for overall system administration and control, portals tailored to scientific researchers who want ready access to search and access all kinds of results in the archive, and end-user portals that provide customized and relatively limited access to end products of specific value to users."}, {"section_title": "Discussion", "text": ""}, {"section_title": "Present Status", "text": "The SCOOP architecture has been deployed at over a half dozen SURA institutions (Figure 7) , and there are working prototypes of the event-driven, ensemble prediction scenario and the 24/7 scenario. The retrospective scenario involves catalog discovery and access to the distributed archives, but as yet has no portal interface to automatically run models in a retrospective fashion. The intention is to leverage established Grid-enabled resources such as SURAgrid, TeraGrid, the Open Science Grid, and others, as appropriate. As of this writing, several components from the set of SCOOP model suites were either running or in various stages of deployment on SURAgrid resources.\nThe SCOOP architecture design and implementation will allow these resource capabilities to be added incrementally. The system and its capabilities evolve with time, as do the technologies that underlie the architecture design. But the scenarios and architecture evolve at a much slower rate and should therefore survive relatively rapid changes in technology.\nTo facilitate evolution of the system, the program is implementing a stable \"production\" environment, and companion \"development\" and \"testing\" environments that allow research and development to occur without affecting the production system. System innovation occurs by migrating new or updated components to production after testing.\nSURAgrid (Figure 8 ) is represented by the resource (lowest) layer in the layer-stack diagram ( Figure 5 ). SURAgrid includes a relatively large and rapidly growing number of SURA institutions. As one might expect in a service-oriented environment, new institutions can be added to SURAgrid on an ongoing basis that is ultimately transparent to the SCOOP application."}, {"section_title": "Community Modeling Frameworks-Loose and Tight Coupling", "text": "SOA is not a design requirement. Rather, it is a valuable feature that allows multiple institutions to contribute complementary components. SOA is a loosely coupled method to implement a SCOOP modeling \"framework,\" meaning that it requires little effort to modularize into a collection of computational tasks for which there is no interdependency. In contrast, some frameworks are tightly coupled because they involve highly coupled models or computational tasks that require constant communication and data exchange, often for computational problems involving highly non-linear phenomena.\nLoosely and tightly coupled frameworks should be complementary; however, loose coupling might be inappropriate for certain model suites that require a high degree of interaction between the various components in the suite. This type of application might best be implemented with a tightly coupled framework. "}, {"section_title": "Conclusions", "text": "The SCOOP architecture is being implemented incrementally. The objective is to freeze overall system upgrades on a 12-month cycle, and then revisit system requirements in light of operational achievements and system capabilities. Subsequent development and implementation is based on the most recent production system. Consistent with this approach, Version 2.0 of the SCOOP architecture was in place as of July 1, 2005. In that version, a proof-ofconcept SCOOP web portal based on OGCcompliant web services, http:// OpenIOOS.org., showed real-time predictions of the storm surge in New Orleans and Mississippi before Hurricane Katrina made landfall.\nThe process of extracting functional requirements and using them to implement the system is iterative, and involves an ongoing dialog between system designers (computer scientists) and system users (coastal scientists). Engaging the end-user community results from the application of adopted community standards, such as the OGCcompliant, GIS-compatible service interfaces. The SCOOP design team strives to develop a system architecture that provides functional value, yet withstands and outlives the underlying technologies used to implement the functions.\nAnother critical and overarching design principle involves adopting and implementing open community standards (Conover et al., 2006) . This can facilitate effective partnerships among the academic, governmental, and private sectors. The distinction between open standards and open source software is also important. The goal within SCOOP is neither to force partners to adopt open source software, nor to make their software open source, but rather, to achieve interoperability among heterogeneous systems through the adoption of open standards for information exchange that can be implemented with either open source or proprietary solutions.\nAs the system matures, the small number of universities involved in the initial stages of deployment can readily grow to accommodate new participants and new science scenarios. The goal is to nurture broad participation in a range of increasingly diverse activities that leverage and contribute to the underlying infrastructure."}]