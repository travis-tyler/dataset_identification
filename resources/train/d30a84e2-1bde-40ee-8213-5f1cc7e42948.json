[{"section_title": "Abstract", "text": "The aim of this paper is to develop a supervised dimension reduction framework, called Spatially Weighted Principal Component Analysis (SWPCA), for high dimensional imaging classification.\nTwo main challenges in imaging classification are the high dimensionality of the feature space and the complex spatial structure of imaging data. In SWPCA, we introduce two sets of * Address for correspondence and reprints: Hongtu Zhu, Ph.D., E-mail: hzhu@bios.unc.edu. We thank the Editor, the Associate Editor, and three anonymous referees for valuable suggestions, which greatly helped to improve our presentation. Data used in preparation of this article were obtained from the Alzheimer's Disease Neuroimaging Initiative (ADNI) database (adni.loni.usc.edu). As such, the investigators within the ADNI contributed to the design and implementation of ADNI and/or provided data but did not participate in analysis or writing of this report. A complete listing of ADNI investigators can be found at: http : //adni.loni.usc.edu/wp \u2212 content/uploads/how to apply/ADN I Acknowledgement List.pdf . 1 novel weights including global and local spatial weights, which enable a selective treatment of individual features and incorporation of the spatial structure of imaging data and class label information. We develop an efficient two-stage iterative SWPCA algorithm and its penalized version along with the associated weight determination. We use both simulation studies and real data analysis to evaluate the finite-sample performance of our SWPCA. The results show that SWPCA outperforms several competing principal component analysis (PCA) methods, such as supervised PCA (SPCA), and other competing methods, such as sparse discriminant analysis (SDA)."}, {"section_title": "Introduction", "text": "In various neuroimaging studies, imaging classification is to predict a set of response variables (class labels) Y by using a set of imaging data x = {x d : d \u2208 D} \u2208 R p measured on each of N subjects, where D is a 3-dimensional (3D) volume (or 2D surface) and d is a voxel (or pixel) of D. For instance, Y may include cognitive outcome, disease status, and the early onset of disease, among others, whereas x may include magnetic resonance imaging (MRI) and positron emission tomography (PET), among many others. Moreover, imaging data usually can be represented as data on a graph such that D is a graph with {d 1 , . . . , d p } as the set of vertexes and an edge set, denoted by D E . Two major challenges associated with imaging classification include (i) ultra-high dimension, but low sample size and (ii) correlated features with complex spatial structure including spatial smoothness and spatial correlation. For instance, the size of a typical T1 MRI is 256\u00d7256\u00d7256, and thus MRI contains 256 3 = 16, 777, 216 voxels. In contrast, the number of observations in most neuroimaging studies varies from several dozens to several hundreds. Thus, it is imperative to perform dimension reduction before classification. Moreover, imaging data has an inherent and strong spatial dimension due to the inherent biological structure of objects (Friston, 2007; Lazar, 2008; Ye et al., 2009; Wang et al., 2007; Meyer and Chinrungrueng, 2005) . The aim of this paper is to develop a Spatially Weighted Principal Component Analysis (SWPCA) to address the two challenges for high dimensional imaging classification.\nDespite of its efficacy and popularity in image applications, principal component analysis (PCA; Jolliffe, 2002) as a general non-supervised dimension reduction technique is known to suffer from major limitations. Firstly, each principal component (PC) is a linear combination of the original p features with nonzero loadings, which not only incorporates unnecessary noises but also makes it very difficult to interpret the derived PCs, especially when p >> N . Secondly, PCA treats all the features equally, and thus it may be not well-suited for some problems, in which some regions of interest are more important than others. Thirdly, PCA ignores the inherent spatial smoothness and spatial correlation of imaging data.\nMany PCA variants have been proposed to address some of these limitations discussed above (Jolliffe, 2002; Zou et al., 2006; Bair et al., 2006; Sko\u010daj et al., 2007; Shen and Huang, 2008; Leng and Wang, 2009; Pinto da Costa et al., 2011; Allen et al., 2011, etc.) . For instance, Bair et al. (2006) proposed a Supervised PCA (SPCA) by conducting standard PCA on marginally selected features.\nHowever, SPCA suffers from ignoring the inherent spatial structure of imaging data. Sko\u010daj et al. (2007) proposed a weighted PCA (WPCA) by introducing temporal and spatial weights in order to downweight individual images and individual components of x. However, they only focused on the temporal weights but failed to discuss how to choose the spatial weights which is more interesting in image analysis. Thomaz et al. (2010) introduced a supervised spatially weighted version of PCA (SSWPCA) by using a linear discriminant analysis (LDA) to determine spatial discriminant weights for x in a two-class classification setting and then applying PCA to the sample correlation matrix weighted by those spatial weights. SSWPCA is limited to binary responses and suffers from the \"p >> N \" problem, which requires further regularization. Recently, Pinto da Costa et al. (2011) proposed another weighted version of PCA based on a weighted rank correlation coefficient using rankings of original data, which is not appropriate for imaging data. Allen et al. (2011) proposed a generalized least squares matrix decomposition framework for two-way regularization PCA, while explicitly accounting for their structural relationship.\nThe aim of this paper is to develop a supervised dimension reduction method, called Spatially Weighted Principal Component Analysis (SWPCA), for imaging classification. In SWPCA, we introduce two sets of weights including global and local spatial weights, which enables the selection of individual features and the incorporation of both the spatial pattern of imaging data and class label information. We develop an efficient two-stage iterative SWPCA algorithm and its penalized version along with the associated weight determination. We evaluate the finite-sample performance of SWPCA by using two simulation studies and real data analysis, whose results strongly indicate that SWPCA outperforms several competing PCA variants and other competing methods, such as sparse discriminant analysis (SDA; Clemmensen et al., 2011) .\nThe rest of this paper is outlined as follows. In Section 2, we develop the general SWPCA framework and its two-stage algorithm. Section 3 discusses several strategies of determining global and local weights. In Section 4, two simulation studies and real data analysis are conducted to demonstrate the improvement of our SWPCA over other commonly used PCA methods. Concluding remarks and discussions are given in Section 5."}, {"section_title": "Spatially Weighted Principal Component Analysis", "text": ""}, {"section_title": "Principal Component Analysis", "text": "Principal Component Analysis (PCA) as a basic dimension reduction tool is to project highdimensional data to a lower dimensional space with a few uncorrelated features, called principal\nwhere N is the number of observations, p is the number of features, and x i = (x ij ) is a p \u00d7 1 vector of features from the i-th object. DenoteX = X \u2212 1 N \u00b5 T as the centered data matrix, where 1 N is an N \u00d7 1 vector of ones and \u00b5 = (\u00b5 1 , \u00b7 \u00b7 \u00b7 , \u00b5 p ) T is a p \u00d7 1 mean vector. Let I q be a q \u00d7 q identity matrix. PCA finds a lower-dimensional representation that maximizes the variance of projections.\nNumerically, PCA can be easily derived by Singular Value Decomposition (SVD) method as follows:\nwhere the columns of A = U D =XV are PCs, the columns of V = (v 1 , ..., v p ) T are principal component directions (principal axes), D is a q \u00d7 q diagonal matrix with singular values, and the columns of U and V are orthonormal such that U T U = V T V = I q . In image analysis, the data matrix X consists of N images as rows, and each row (i.e., x i ) represents a vectorized image of dimension p, where p is the number of pixels/voxels of the image and generally p >> N . When applying PCA to image data, the mean vector \u00b5 is the mean image and the columns of V are called eigenimages.\nAlternatively, PCA can be interpreted as approximating the original data in the high-dimensional space by using a low-rank factor model. Specifically, the rank-q factor model can be written as\nThe PCA is then taken to minimize the reconstruction error (RE) defined as the squared distance between the original data and its rank-q approximation as follows:\nwhere || \u00b7 || 2 is the L 2 norm of a vector andx ij = x ij \u2212 \u00b5 j . As seen from (3), E pca can be represented as a summation of individual squared distance for each image at each location (feature), where all the features are treated equally and \"independently\". In this sense, standard PCA ignores the underlying spatial pattern of image data, since E pca remains the same no matter where each feature is located. Although the standard PCA loses the spatial information, this is not the case for SWPCA developed below, since we can explicitly incorporate such spatial information by introducing locally spatial weights, which depend on both the edge set D E and the spatial smoothness of imaging data."}, {"section_title": "Spatially Weighted PCA (SWPCA)", "text": "In this subsection, we develop a SWPCA to find a lower dimensional representation of imaging data by explicitly accounting for their spatial feature. Since each image x i consists of p correlated features with clustered spatial structure, PCA may not be well suitable for correlated imaging data. However, SWPCA explicitly incorporates spatial information by introducing two sets of spatial weights to the reconstruction error. Such spatial weights include (i) global weights for the selective treatment of individual features and (ii) local spatial weights for the incorporation of the spatial smoothness and correlation of imaging data.\nLet w j be the global spatial weight for the j-th feature of x i with p j=1 w j = p. Let B(j; h) be a neighborhood of the j-th feature at scale h and \u03c9(j, d; h) be the local spatial weight for each neighboring feature d within B(j; h) of feature j such that d\u2208B(j;h) \u03c9(j, d; h) = 1. The SWPCA is taken to minimize a weighted reconstruction error (WRE) given by\nwhere A = (a 1 , ..., a N ) T and V = (v 1 , ..., v p ) T are the N \u00d7 q and p \u00d7 q matrices, respectively.\nare the weighted and simple mean images, respectively. The lower-dimensional representation of SWPCA is obtained by minimizing E swpca (A, V ; h) as follows:\nWithout making any confusion, we omit the script h in most notations.\nThe global and local weights play a critical role in SWPCA. Specifically, the global weights can vary in a multiscale manner, while the shape of the neighborhood sets can vary across h and different applications. Furthermore, SWPCA provides a supervised dimension reduction solution by incorporating outcome information via the introduced global and spatial weights. In image classification, the global weights can be assigned according to the discriminative ability of each pixel/voxel, i.e., the association between each pixel/voxel in X and the class information in Y ;\nthe local spatial weights can be determined based on the discriminative similarity of neighboring pixel/voxel. More discussions about how class information can be incorporated in SWPCA are given in Section 3.\nSWPCA can be regarded as a generalization of PCA, SPCA, and WPCA. For instance, when \u03c9(j, d; h) = 1(j = d), where 1(\u00b7) is the indicator function of an event, SWPCA reduces to WPCA with spatial weights. If \u03c9(j, d; h) = 1(j = d) and w j = 1 for all j and d, (4) reduces to (3) which is the standard PCA problem. If we set \u03c9(j, d; h) = 1(j = d) for all j, d and w j = 1 only for selected \"top\" features and 0 for other features, SWPCA reduces to SPCA. More discussions on various choices of these weights and neighborhood scale h are given in Section 3.\nWe reformat E swpca (A, V ; h) as follows. Let X h = {x ij (h)} = d\u2208B(j,h) \u03c9(j, d; h)x id denote an N \u00d7 p locally weighted data matrix and X W,h = X h W 1/2 p , where W p =diag(w 1 , ..., w p ) and\n. Without loss of generality, we assume that all global spatial weights are non-zero for the sake of notation. Even for W G with zero weights, all results below are valid since only features with non-zero w j are actually included for computation. We obtain the following lemma, whose proof can be found in the Appendix.\nLemma 1 Minimizing (4) is equivalent to\nwhere ||M || F = Tr(M M T ) is the Frobenius norm.\nEquation (6) is invariant to arbitrary rotations of A and V such that AV T =\u00c3\u1e7c T . Such invariant issue is usually solved by imposing orthonormal constraint, i.e., V T V = I q . However, such constraint is no longer appropriate for SWPCA, when the global spatial weights are incorporated for individual treatment and selection of features that regulate V . Instead of restricting V , we impose A T A = I q , which greatly facilitates the computation of SWPCA.\nFor ultra-high dimensional data, that is p >> N , PCA suffers from several major limitations.\nFor instance, it is well-known that sample eigenvalues and eigenvectors can be inconsistent as p goes to infinity. Moreover, naive approaches to PC score prediction can be substantially biased towards 0 in the analysis of high-dimensional data. To avoid such limitations, various penalized PCA methods have been developed (Journ\u00e9e et al., 2010; Shen and Huang, 2008; Huang et al., 2008a; Zou et al., 2006; Johnstone and Lu, 2009; Huang et al., 2008b; Witten et al., 2009 ). Specifically, we consider a regularized SWPCA by including an additional penalty term on V to (6). The minimization problem becomes\nwhere v ck is the k-th column vector of V = (v c1 , ..., v cq ) and ||v ck || 1 = p j=1 |v jk | is the L 1 -norm of the p \u00d7 1 vector v ck ."}, {"section_title": "Two-stage Iterative Algorithms", "text": "We develop efficient two-stage iterative SWPCA algorithms to solve the minimization problems (6) and (7). We obtain the following two lemmas pertinent to the algorithm for solving (6).\nThe above lemmas lead to our two-stage iterative SWPCA Algorithm 1 as follows.\nAlgorithm 1 SWPCA Algorithm (a) Use V derived by standard PCA as an initial value;\n(d) Repeat the steps (b) and (c) until convergence;\n(e) Standardize the final V to obtain\u1e7c and\u00c3.\nOur SWPCA algorithm provides a simple and efficient way for the minimization problem (4) with the constraint on A. As a special case of SWPCA, the WPCA with spatial weights can be realized by our SWPCA Algorithm 1, which overcomes the rotational ambiguity problem of the Algorithm in Sko\u010daj et al. (2007) . According to our experience, our Algorithm 1 converges much faster compared with that for WPCA. Moreover, keeping V free of scale constraint allows direct extension of our SWPCA algorithm to a sparse version for ultra-high dimensional data. We obtain the following lemma for the sparse case.\nLemma 4 Given fixed A and A T A = I q , we have the following results:\n(i) the minimization problem (7) is equivalent to that of the weighted Lasso given b\u0177\nwhere v ck is the k-th column vector of V and a ck is the k-th column of A;\n(ii) the soft thresholding solution of (8\nwhere sign(\u00b7) is the sign function, (\u00b7) j denotes the j-th element of the argument, and {\u00b7} + is the truncation function that returns the argument if it is nonnegative or 0 otherwise.\nLemma 4 has several important implications. Lemma 4 (i) reformats (7) as a weighted lasso problem of Zou et al. (2006) . This result yields an explicit solutionv ck in Lemma 4 (ii). Moreover, for the features with small spatial weights, the regularized SWPCA automatically increases their penalties and thus their associatedv jk 's have a higher chance to be shrunk to zero. Thus, SWPCA is very useful for eliminating many uninformative features in imaging data. Based on Lemma 4, Algorithm 1 can be extended to the penalized SWPCA algorithm as follows.\nAlgorithm 2 Penalized SWPCA Algorithm (a) Use V derived by the standard PCA as an initial value;\nwhere v jk is calculated according to (9);\n(d') Repeat the steps (b) and (c') until convergence;\n(e) Standardize the final V to obtain\u1e7c and\u00c3.\nThe penalized SWPCA algorithm proposed above provides an efficient way to obtain a lowdimensional representation of X even for ultra-high dimensional data. Besides, our penalized SWPCA algorithm can be used to realize the sparse PCA method proposed by Shen and Huang (2008) since SWPCA is considered as a generalization of standard PCA. The sparse PCA algorithm in Shen and Huang (2008) computes PCs in a sequential way, whereas our Algorithm 2 computes all PCs simultaneously at once. Thus, Algorithm 2 may be more appealing and efficient.\nOne important application of SWPCA is to do prediction. We consider the data matrix with new observations and its locally weighted data matrix, which are denoted by X * and X * h , respectively. Let\u00c3 * be the low-dimensional projection of X * onto the principal axes\u1e7c derived from SWPCA.\nWe obtain the following lemma.\nBased on Lemma 5,\u00c3 * can be estimated by using (X * h W p\u1e7c )(\u1e7c T W p\u1e7c ) \u22121 . With\u00c3 * , class prediction can be efficiently performed using this low-dimensional representation."}, {"section_title": "Spatial Weights for Imaging Classification", "text": "In this section, we discuss how to choose various spatial weights and how the class information can be incorporated for imaging classification."}, {"section_title": "Global Spatial Weights", "text": "The global weights W G = {w j } play a feature selection role in SWPCA. For instance, for classification problem, we may use each feature's discriminative importance to assign each component of W G . Specifically, let \u03b8 j denote a measure of the association between the j-th feature and the class information, i.e., \u03b8 j is a function of the j-th pixel/voxel of image data X and class information Y .\nEach w j can be defined as a function of \u03b8 j as\nExamples of \u03b8 j include the Pearson correlation and test statistics, among many others. A simple example is to use the Pearson correlation between each feature and class label information. More informative features for classification (or high correlation) are assigned more weights, whereas noninformative features (e.g., correlation less than a given threshold) can be discarded by setting w j = 0. In this case, \u03b8 j is the Pearson correlation and w j = p|\u03b8 j |/ j |\u03b8 j |. Additionally, the importance scores used in SPCA can also be considered for W G . Another example is to fit a voxel-wise regression model with imaging data at each location as responses and the class label as covariates. Specifically, we consider an L-class classification problem and define y il = 1 if i is in class l for i = 1, . . . , N and l = 1, . . . , L and 0 otherwise. Consider a voxel-wise linear regression model by fitting x ij = y T i \u03b8 j + ij for i = 1, . . . , N and j = 1, . . . , p, where y i = (1, y i1 , . . . , y i,L\u22121 ) T and \u03b8 j contains the discriminative information of features at location j. Then, f (\u03b8 j ) can be a test statistic and/or its associated p-value for testing H 0 : \u03b8 j = 0 at location j."}, {"section_title": "Local Spatial Weights", "text": "The local spatial weights W L = {\u03c9(j, d; h)} play a critical role in incorporating spatial smoothness and correlation of imaging data in SWPCA. This is extremely important for imaging data, since imaging data are spatially dependent and contain contiguous regions with sharp edges in nature.\nLet B(j, h) be a set of neighboring locations of the j-th feature at scale h. The local weight \u03c9(j, d; h) usually characterizes the \"similarity\" between feature j and features d \u2208 B(j, h) and/or the \"similarity\" between locations d and j. Specifically, we define \u03c9(j, d; h) at scale h as\nwhere D 1 (d, j) denotes the spatial distance between locations d and j, D 2 (\u03b8 d , \u03b8 j ) represents the discriminative similarity between \u03b8 d and \u03b8 j , K 1 (\u00b7) and K 2 (\u00b7) are two decreasing kernel functions, and h and C N are bandwidth parameters that may depend on N . The decreasing kernel function K 1 (\u00b7) gives less weight to the voxel d \u2208 B(j, h), whose location is far from the voxel j. The kernel K 2 (\u00b7) downweights the voxels d with large D 2 (\u03b8 d , \u03b8 j ), which indicates a large difference between \u03b8 d and \u03b8 j . By following Polzehl and Spokoiny (2006) and Li et al. (2011) \n, which demonstrated excellent performance in many imaging applications.\nMoreover, the shape and size of B(j, h) can vary across applications and with h."}, {"section_title": "Scale Size h", "text": "The scale size h plays a critical role in the amount of features incorporated from neighboring voxels in B(j, h) for each j. A simple approach is to fix h according to some prior or empirical information.\nHowever, a small h may miss important spatial information, whereas a large h may smooth out some local details and dramatically increase the computational burden. Alternatively, we may consider a sequence of nested neighborhoods corresponding to multiple scales at each location. Specifically, let h = {h 0 < h 1 < ... < h S } be a sequence of scales with h 0 = 0 and h S being the maximum scale.\nThe scales can be chosen based on previous studies or empirical experiences. For example, scales can be defined as the radius of spherical neighborhood in a form of {h s = c s } with constant c > 1.\nIn our numerical examples, we used c = 1.2 which balanced the computation intensity without losing important spatial information. One may choose an optimal h based on a specific criterion, such as WRE, and then use the PCs extracted based on the optimal h for imaging classification.\nAlternatively, one may integrate the PCs extracted from all scales h for imaging classification.\nFor imaging classification, we propose a multi-scale procedure to determine W G and W L across multiple scales. Without loss of generality, we consider the cross-sectional studies so that (x i , y i ) are independent across subjects. Specifically, at a given scale h, we consider a weighted likelihood function given by\nwhere X and Y , respectively, denote the imaging and class information and p(x id |y i , \u03b8 j ) is the likelihood function of x id given y i . Moreover, as discussed in the voxel-wise linear regression model in Section 3.1, \u03b8 j may contain the discriminative information of features at j. Based on the weighted likelihood function (12) The stopping criterion in Algorithm 3 can be either global or local criteria. For instance, for the global criteria, we may stop the algorithm if WRE cannot be further decreased. For the local criteria at each location j, we may check the improvement of \u03b8 j ."}, {"section_title": "Numerical Examples", "text": "In this section, we conducted two simulation studies and real data analysis to examine the performance of SWPCA in L-class classification problems, where L is a positive integer. In each simulation study, we compared our SWPCA with PCA, SPCA, and WPCA. For SPCA, we used the importance scores used in Bair et al. (2006) to select \"top\" important features. For WPCA, we considered two WPCAs by using two different spatial weights which are based on the importance scores of SPCA and W G of SWPCA, respectively. For PCA, SPCA, and WPCA, imaging data were smoothed using an isotropic Gaussian kernel with different degrees of smoothness including no smoothing, moderate smoothing, and over-smoothing. For the sake of space, we only reported the best results under the moderate degree of smoothness. For SWPCA, we used Algorithm 3 with spherical neighborhoods and {h s = 1.2 s : s = 1, . . . , S = 5} to determine optimal scales locally and its associated W G and W L . Specifically, we used -log 10 of the FDR (False Discovery Rate) corrected p-values for testing the null hypothesis of no group differences as our global spatial weights W G . For the local spatial weights, we chose the Euclidean norm for D 1 (\u00b7), the Mahalanobis norm for D 2 (\u00b7), and C N = log(N )\u03c7 2 L\u22121 (0.95), where \u03c7 2 L\u22121 (b) is the upper 1 \u2212 b percentile of the \u03c7 2 distribution with L \u2212 1 degrees of freedom. For the penalized SWPCA, denoted as PSWPCA, we used the same spatial weights as those of SWPCA and varied \u03bb k across 0.5, 1.0, 2.0, 5.0, and 10.0.\nExtracted PCs were then used for class prediction. Since the proposed method is more efficient requiring less components, we chose number of PCs retained based on the amount of total sample variance explained by the standard PCA to assure that at least a certain amount of total variance can be accounted for. Since comparison of different classification methods is not the interest of this paper, we just used three standard classification methods including (i) linear regression (REG), (ii) k-nearest neighbor (k-NN) classification, and (iii) support vector machine (SVM) to evaluate the performance of different PCA methods."}, {"section_title": "Simulation Studies", "text": "For each simulation study, a total of 100 3D-images were simulated and randomly split into a training set with N = 60 images and a test set of 40 images. We repeated each simulation 100 times, and evaluated the classification performance of different methods by using the average misclassification rate. For simulation studies, the results with K = 2 PCs retained were presented for graphical illustration purpose to display the low-dimensional representation of the simulated data constructed by the PCs extracted by different dimension reduction methods. With 2 PCs, the standard PCA can already account for on average around 60% of the total variance in Simulation I and around 50% in Simulation II."}, {"section_title": "Simulation Study I", "text": "In this study, we simulated 20\u00d720\u00d710 3D-images from a linear regression model: x ij = \u03b8 j0 +\u03b8 j1 y i + ij , where ij \u223c N (0, 4) for i = 1, . . . , 100 and j = 1, . . . , 4000. The feature dimension p = 4000 is much larger relative to the training sample size N =60. This is a two-class classification problem with L = 2. The class label y i is coded as 0 and 1. Thus, \u00b5 0 = {\u03b8 j0 : j = 1, . . . , 4000} is the true mean image of Class 0, whereas \u00b5 1 = {\u03b8 j0 + \u03b8 j1 : j = 1, . . . , 4000} is the true mean image of Class 1. See Figure 1 for a graphical illustration. For \u00b5 0 , we divided the 3D image into two different regions of interest (ROIs) with different shapes and then varied \u03b8 j0 as 0 and 1, respectively, across these two ROIs. For \u00b5 1 , we divided the 3D image into three different ROIs with different shapes and then varied \u03b8 j0 + \u03b8 j1 as 0, 1, and 2, respectively, across these three ROIs. Figure 1 reveals that the difference between the two classes only lies in the yellow triangular prism region. We presented the classification results in Table 1 based on the results obtained from the 100 simulated datasets. We only presented the average misclassification rates and the standard deviations (SD) of misclassification errors. Table 1 reveals that the classification results from the three classification methods show similar pattern across different PCA methods. For SPCA, we varied the number of \"top\" voxels as 50, 100, 200, 400, and 1000, and the algorithm based on the top 50 voxels outperforms the rest. Overall, SPCAs greatly improve the class prediction over PCA by screening out many uninformative voxels. We denote two WPCAs using the importance scores of SPCA and using W G of SWPCA as their spatial weights by WPCA-1 and WPCA-2, respectively.\nThe WPCA-1 performs better than PCA, as good as SPCA with relatively large number of top selected voxels, but worse than SPCA with less selected voxels. The WPCA-2 improves the class prediction over WPCA-1 and performs as good as SPCA based on top 50 voxels. Furthermore, SWPCA using Algorithm 1 significantly reduces the misclassification rate to only 2.6% for REG, 3.0% for 5-NN, and 3.3% for SVM with much smaller standard deviations. Finally, PSWPCA based on Algorithm 2 further reduces the misclassification rate.\nThe two different sets of spatial weights used in WPCA-1 and WPCA-2 are illustrated in Figure   2 . Figure 2 shows that W G of SWPCA clearly identifies those \"true\" voxels which are located in the triangular prism. In contrast, the importance scores of SPCA can only roughly locate the region but not the shape, along with many false positive voxels. Let n t denote the number of true informative voxels. In Simulation I, n t = 75 voxels forms the triangular prism. To further evaluate the \"feature selection\" ability of the weights, we calculate the true positive rate (TP) as the ratio of the true informative voxels to the top ranked n t voxels. We have TP SP CA =.63, and TP SW P CA =.90. These two numbers also explain why WPCA-2 works better than WPCA-1. Moreover, the performance of SPCA is sensitive to the threshold used to determine significant features in SPCA, whereas\nWPCAs and SWPCAs can include all the voxels by weighing differently without concerning the thresholding issue. To visualize the performance of dimension reduction, we plotted the first two extracted PCs obtained from different PCA methods for one simulated dataset in Figure 3 . We observed that the two PCs of SWPCA and PSWPCA can easily separate the two classes, whereas those of other PCA methods cannot.\nFor additional comparisons, we also applied two non-PCA-type of supervised dimension reduction methods including sparse partial least squares (SPLS; Chung and Keles, 2010) and sparse discriminant analysis (SDA; Clemmensen et al., 2011) to the simulated datasets. See Table 2 for detailed results. For SPLS, since different classifiers can be used, we also applied REG (SPLS-REG), k-NN (SPLS-kNN), and SVM (SPLS-SVM) besides the default one in order to have additional comparisons with various PCA-type of methods presented in Table 1 . Table 2 shows that SPLS and SDA yield similar classification performance as SPCA, but they significantly underperform our proposed SWPCA and PSWPCA."}, {"section_title": "Simulation Study II", "text": "In this simulation study, we simulated 20 \u00d7 20 \u00d7 20 3D-images from L = 3 classes (coded as 0, 1, 2) according to a linear regression model: x ij = \u03b8 j0 + \u03b8 j1 y i1 + \u03b8 j2 y i2 + ij , where ij \u223c N (0, 9) for i = 1, . . . , 100 and j = 1, . . . , 8000 and y i1 and y i2 are dummy variables for Class 1 and Class 2, respectively. Thus, \u00b5 0 = {\u03b8 j0 } is the true mean image of Class 0, \u00b5 1 = {\u03b8 j0 + \u03b8 j1 } is the true mean image of Class 1, and \u00b5 2 = {\u03b8 j0 + \u03b8 j2 } is the true mean image of Class 2. Figure 4 shows the true mean images for each class in 3D. For \u00b5 0 , we divided the 3D image into two different ROIs with different shapes and then varied \u03b8 j0 as 0 and 1, respectively, across these two ROIs. For \u00b5 1 , we divided the 3D image into two different ROIs with different shapes and then varied \u03b8 j0 + \u03b8 j1 as 0 and 1, respectively, across these two ROIs. For \u00b5 2 , we divided the 3D image into three different ROIs with different shapes and then varied \u03b8 j0 + \u03b8 j2 as 0, 1, and 2, respectively, across these three ROIs. Figure 4 reveals that the differences between the three classes lie in the yellow and red regions.\nWe presented the classification results in Table 3 based on the results obtained from the 100 simulated datasets. In Table 3 , three classification methods, REG, k-NN, and SVM, show similar classification results across different PCA methods. For SPCA, the algorithm based on the 400 or 1,000 top voxels outperforms the rest. Overall, SPCA moderately improves the class prediction over the standard PCA. The WPCA-1 algorithm outperforms PCA and is comparable to SPCAs in cases of 200 or more top voxels. The WPCA-2 algorithm shows better performance than SPCA and WPCA-1. Furthermore, SWPCA and PSWPCA outperform other competing methods and greatly reduce the misclassification rate. The results for the non-PCA methods are given in Table   4 . Similarly as Simulation I, SPLS and SDA yield similar but significantly poorer classification performance comparing with the best SWPCA results. Figure 5 illustrates two different sets of spatial weights used in WPCA-1 and WPCA-2. It shows that W G of SWPCA identifies the \"true\" voxels located in the triangular and cubic shapes.\nHowever, the importance scores of SPCA roughly identifies the location of true voxels, but not the shapes. In this simulation study, there are 409 truly informative voxels, and we have TP SP CA =.59\nand TP SW P CA =.81. In Figure 6 , we draw the plots of the first two extracted PCs obtained from all PCA methods for one simulated dataset. From Figure 6 , we observe that SWPCA and PSWPCA perform well in separating three classes, but other PCA method do not. "}, {"section_title": "Real Data Analysis", "text": "We applied SWPCA to the Alzheimer's Disease Neuroimaging Initiative (ADNI) data. Alzheimer's Disease (AD) is the most common form of dementia, which progressively causes problems in memory, thinking, behavior, and eventually leads to death. The ADNI study is a large scale multi-site study collecting clinical, imaging, and laboratory data at multiple time points from cognitively normal controls (CN), individuals with amnestic mild cognitive impairment (MCI), and subjects with AD. One of the goals of ADNI is to develop improved methods to track the longitudinal course of AD based on imaging and biomarker data. More information about data acquisition can be found at the ADNI website (www.loni.usc.edu/ADNI). the result of efforts of many coinvestigators from a broad range of academic institutions and private corporations, and subjects have been recruited from over 50 sites across the U.S. and Canada. The initial goal of ADNI was to recruit 800 subjects but ADNI has been followed by ADNI-GO and ADNI-2. To date these three protocols have recruited over 1500 adults, ages 55 to 90, to participate in the research, consisting of cognitively normal older individuals, people with early or late MCI, and people with early AD. The follow up duration of each group is specified in the protocols for ADNI-1, ADNI-2 and ADNI-GO. Subjects originally recruited for ADNI-1 and ADNI-GO had the option to be followed in ADNI-2. For up-to-date information, see www.adni-info.org. \"\nA subset of the ADNI data including AD patients and CN controls was used here to illustrate the empirical utility of our proposed methods in imaging classification. After removing subjects with missing or low quality imaging data, the data set consists of 390 subjects (218 CN controls and 172 AD patients). Among them, there are 206 males whose mean age is 75.46 years with standard deviation 6.34 years and 184 females whose mean age is 75.50 years with standard deviation 6.40 years. T1-weighted images at the baseline were used for all subjects. The T1-weighted images were preprocessed by standard steps including AC (anterior commissure) and PC (posterior commissure) correction, N2 bias field correction, skull-stripping, intensity inhomogeneity correction, cerebellum removal, segmentation, and registration. After segmentation, the brain were segmented into four different tissues: grey matter (GM), white matter (WM), ventricle (VN), and cerebrospinal fluid (CSF). The imaging pipeline was described in detail in Wang et al. (2011) .\nWe quantified the local volumetric group differences by generating RAVENS-maps (Davatzikos et al., 2001) for the whole brain and four different types of segmented tissue (GM, WM, VN, and CSF), respectively, using the deformation field obtained during registration. RAVENS methodology is based on a volume-preserving spatial transformation, which ensures that no volumetric information is lost during processing spatial normalization, since this process changes an individual's brain morphology to conform it to the morphology of a template. We obtained the 256 \u00d7 256 \u00d7 256 RAVENS-maps and then down-sampled them to 128 \u00d7 128 \u00d7 128 for analysis. A sample RAVENSmap is displayed in the left panel of Figure 7 .\nOur goal is to study the empirical performance of SWPCA in classifying subjects from ADNI to AD or CN group based on the whole RAVENS images. We randomly split the imaging data into a training set of 195 images and a test set with the remaining 195 images and repeated this 100 times to calculate the average misclassification rate. For this real data analysis, five PCs were included for classification, which can account for around 90% of the total variance on average in the standard PCA. For PCA, WPCA, and SPCA, the RAVEN images were smoothed by using an isotropic Gaussian kernel with different degrees of smoothness as in the simulation studies.\nFor ultra-high dimensional data like our example, we may pre-filter and assign zero weight to the less \"important\" voxels instead of assigning non-zero weights to all the voxels in order to improve computational efficiency. For example, for WPCA-2 and SWPCA based on the p-value map, we thresholded all FDR-corrected \u2212 log 10 p-values at the significance level of 0.01 for W G . For SPCA, we selected the same number of voxels as the number of non-zero W G used in SWPCA according to the importance scores. Figure 7 shows some selected views of the importance score image of SPCA and the FDR-corrected \u2212 log 10 p-value map used in WPCA-2 and SWPCA. Figure 8 presents more slice views of the global spatial weights used in SWPCA and illustrates that some regions of interest in AD studies, such as hippocampus and amygdala, were highly weighted.\nIn Table 5 , we present the classification results that show the similar performance of PCA methods as in the simulation studies. SPCA slightly improves the classification rate over the standard PCA. Both SPCA and WPCA-1 based on the same importance scores show quite similar performance. WPCA-2 performs slightly better than WPCA-1. In addition, SWPCA and PSWPCA outperform all other PCA methods with much lower misclassification rates. Notice that even using simple classification procedures, SWPCA/PSWPCA directly applied to the whole image can already lead to a misclassification percentage around 20% for ADNI data. To illustrate our proposed dimension reduction tool, we applied simple classification procedures. It suggests that the classification performance can be more improved by incorporating more sophisticated procedures.\nNumerical examples illustrated that SWPCA and its penalized version PSWPCA provided substantial improvement over other commonly used dimension reduction methods in image classification by incorporating spatial and class information via introduced global and local spatial weights. Computationally, SWPCA algorithm provides an efficient implementation, which produces all PCs simultaneously unlike other methods like Shen and Huang (2008) "}, {"section_title": "Discussion", "text": "This article is to develop a general SWPCA framework to generate low-dimensional representations for high-dimensional imaging classification. By incorporating the global and local spatial weights, SWPCA enables a selective treatment and selection of individual features, accommodates the complex dependence among features of imaging data, and has the ability of utilizing the underlying spatial pattern possessed by imaging data and class label information. SWPCA integrates feature selection, smoothing, and feature extraction in a single framework. In the simulation studies and real data analysis, SWPCA shows substantial improvement over PCA, SPCA, and WPCA.\nThe contributions of this article are two-fold. Firstly, from an image analysis point of view, our proposal timely responds to a number of growing needs of neuroimaging classification. It may also provide a systematic solution to the integrative analysis of multi-modality imaging data and imaging genetics data (Friston, 2009; Casey et al., 2010) . Secondly, from a statistical methodology point of view, our proposal provides a novel and broad framework for the use of covariates with graphic structure to predict clinical outcomes. A large number of models and extensions are potential outcomes within this framework. Although there has been imaging studies utilizing tensor/matrix structure (Li et al., 2005; Park and Savvides, 2007; Li et al., 2010; Zhou et al., 2013) , our proposal, to the best of our knowledge, is the first work that integrates the spatial and graphic structure of imaging data into a statistical supervised learning paradigm. Our work can be viewed as a logic extension from the classical classification methods to a functional classification model.\nSeveral important issues need to be addressed in future research. First, we will systematically investigate the theoretical properties of SWPCA and its variations by extending the existing results in the literature (Johnstone, 2001; Baik and Silverstein, 2006; Paul and Johnstone, 2007; Jung and Marron, 2009; Benaych-Georges and Nadakuditi, 2011) . Second, we will extend our SWPCA from a classification framework to a regression framework in order to predict more complex univariate and multivariate clinical outcomes. Third, we will develop new global weighting methods based on some joint important feature selection methods and more complex screening methods, such as a robust rank correlation screening in (Li et al., 2012) . Many more complexities and new statistical tools will definitely come out these new developments."}, {"section_title": "A Appendix: Proofs", "text": "A.1 Proof of Lemma 1\nThe WRE E swpca can be rewritten as follows:\nwhere C is a scalar independent of A and V . Thus, minimizing E swpca is equivalent to minimizing (6) as stated in Lemma 1."}, {"section_title": "A.2 Proof of Lemma 2", "text": "Lemma 2 can be proved by using Theorem 4 of Zou et al. (2006) as follows. We kept their original notations here.\nTheorem 4 (Reduced Rank Procrustes Rotation; Zou et al., 2006) : Let M n\u00d7p and N n\u00d7k be two matrices. Consider the constrained minimization problem:\nBased on Lemma 1 and the discussion in Section 2.2, we have a similar minimization problem of A given V :\u00c2 = arg min\nIf we set M = X T W,h and N = W 1/2 p V in Theorem 4, then\u00c2 that minimizes (13) given V subject to A T A = I q is\u00c2 = P U T , where P and U are orthogonal matrices from SVD of"}, {"section_title": "A.3 Proof of Lemma 3", "text": "Assuming A is given, we take the derivative of E swpca in (6) with respect to V . By setting it to zero, we obtain the solution\nIn Algorithm 1, since A derived from Step (b) is subject to A T A = I q , V becomes X T h A in Step (c)."}, {"section_title": "A.4 Proof of Lemma 4", "text": "Since we can write: , where x hj is the j-th column of X h and v jk is the j-th element of v ck . This completes the proof of part (i).\nPart (ii) can be easily obtained by applying the lemma below to each element of v ck .\nLemma The minimizer of (\u03b2 \u2212 y) 2 + \u03bb|\u03b2| is\u03b2 = sign(y)(|y| \u2212 \u03bb/2) + .\nThe proof of this lemma is straightforward, so we omitted here."}, {"section_title": "A.5 Proof of Lemma 5", "text": "Assuming V is given, we can obtain the solution of A by taking the derivative of (6) with respect to A. \u00b5 0 , in which two ROIs with purple and red colors represent \u03b8 j0 = 0 and 1, respectively; the middle panel is the true mean image of Class 1: \u00b5 1 , in which two ROIs with purple and red colors represent \u03b8 j0 + \u03b8 j1 = 0 and 1, respectively; the right panel is the true mean image of Class 2: \u00b5 2 , in which three ROIs with purple, red, and yellow colors represent \u03b8 j0 + \u03b8 j2 = 0, 1, and 2, respectively. "}]