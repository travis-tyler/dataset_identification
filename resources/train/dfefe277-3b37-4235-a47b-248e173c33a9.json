[{"section_title": "Abstract", "text": "In "}, {"section_title": "Introduction", "text": "Optimal Transport based techniques for signal and data analysis have received increased attention recently [10] . Given their abilities to provide accurate generative models for signal intensities and other data distributions, they have been used in a variety of applications including contentbased retrieval, cancer detection, image super-resolution, and statistical machine learning, to name a few, and shown to produce state of the art results in several applications.\nManifolds arise naturally as the appropriate representations for images. For example, when representing face images, the linear average of two faces often does not resemble a face. One more reasonable representation, and the one we adopt in this work, is to use diffeomorphic deformation maps to capture the nonlinear characteristics innate in image data. Here, geodesics are given by 'optimal rearrangements' of one image into another, a notion made precise in the optimal transport framework.\nIn previous works, Fletcher et al. [5] suggested a principal component analysis for Lie Groups and computed the approximate principal geodesics by minimizing the sum of squared geodesic distances to the data. Ziezold et al. formulated PCA for a Riemannian manifold in [7] based on geodesics of the intrinsic mean. Boissard et al. [2] defined principal geodesic components with respect to the Wasserstein metric assuming that each input measure has been generated from a single template density. Wang et al. [26] proposed to find an approximate principal geodesic in the tangent plane of the Wasserstein-Kantorovich space for a single template. Cuturi et al. [18] proposed a new algorithm to compute approximate geodesics for the Wasserstein space by regularizing with entropy.\nIn addition, diffeomorphic maps have proven to be useful in modeling shape space [23, 1] , in reconstructing images from under-sampled data [11] , learning the geometrical transformations between the images [20, 17] , visualizing the smooth deformations between the images [23, 27] , and differentiating different classes of shapes [25, 21] .\nHere, along the line of previous attempts to learn and represent data in the diffeomorphic space, we propose to utilize the geometric characteristic of diffeomorphic space based on the Kantorovich-Wasserstein metric. We utilize the geometric transforms learned between the images to create even more images that can be utilized for various applications, i.e. classification. Additionally, we embody the probabilistic viewpoint in modeling the diffeomorphic space and generalize it to Bayesian classification that is more natural with the data generation process. For the image set that is created with a few templates, we suggest that learning deformation maps are a better solution than a machine-learning based approach such as using variational auto-encoders [9] , [16] .\nOur method is similar to the work by Simard et al. [20] which synthesized images using random deformation maps and to the work by Hauberg et al. [6] which learned the diffeomorphic mapping. However, our work differs from previous approaches in that we define multiple templates which characterize multiple tangent planes, and associate it with latent variables that governs which tangent plane the data belongs to. We emphasize that our work is the first work to address that a set of tangent planes accompanied with the Kantorovich-Wasserstein metric can be used to formulate a generative model for a image set, associate it with probabilistic view point, and generalize this concept to generate more data and apply it to perform classification of images.\nThe paper is structured as follows. In Sec. 2, we introduce the notations and preliminaries. In Sec. 3, we describe the method for modeling and learning the manifold with tangent planes. In Sec. 4, we show experimental validation, and a useful application of our method. Sec. 5 wraps up with conclusion, limitations, and future studies."}, {"section_title": "Preliminaries", "text": ""}, {"section_title": "The Optimal Transport Metric and Geometry", "text": "Here we consider the optimal transport framework in discrete settings but we note that it is usually described in terms of measures which can include both discrete and continuous settings. The optimal transport distance is based around the cost of transporting 'mass' from one image to another. Images are normalized so that intensities of all pixels sum to one, i.e. each image contains an equal amount of mass.\nLet c : \u03a9 \u00d7 \u03a9 \u2192 [0, \u221e) be the cost function, so that c(\u03c9 1 , \u03c9 2 ) is the cost of transporting one unit of mass at \u03c9 1 \u2208 \u03a9 to \u03c9 2 \u2208 \u03a9. A transport plan between a template image r and a target image x i is any matrix \u03c0 that transports r to x i , mathematically we write this as\n(1)\nWe say that \u03c0 \u2208 \u03a0(r, x i ) if \u03c0 satisfies (1), \u03a0(r, x i ) is the set of all mass preserving transportation plans. The cost of a transport plan \u03c0 between r and x i is given by\nWe will use the quadratic cost c(\u03c9 1 , \u03c9 2 ) = |\u03c9 1 \u2212 \u03c9 2 | 2 in which case we can define the Wasserstein distance (often called the Kantorovich-\n(2) The minimum is attained and d W defines a metric [24] . Furthermore the metric space is a Riemannian manifold [4] that we describe now.\nSuppose the optimal transport plan, i.e. \u03c0 * which achieves the minimum in (2) , is unique and sends mass from each pixel \u03c9 \u2208 \u03a9 to a unique location \u03c6(\u03c9) in \u03a9. Then \u03c6 is called the optimal transport map. One can also write \nand in fact the set of vector maps\nis the length of the shortest curve (geodesic) containing r and x i . Given a vector map v \u2208 T r one can define a 'new' image by x new (\u03c9) = \u03c6 # r(\u03c9) := i s.t. \u03c6(\u03c9i)=\u03c9 r(\u03c9 i ) where \u03c6 = v + I is the transport map. The construction is such that x new lies on the geodesic from r in the direction v, in\nIn the sequel, the idea is that the tangent plane is restricted to a low dimensional space spanned by a small number of basis vectors, i.e. we restrict the tangent plane to {v"}, {"section_title": "Parameterizing Tangent Plane with Probabilistic Framework", "text": "As we model the image manifold with tangent planes, we parameterize the tangent planes as a joint distribution over observed and hidden variables therefore embodying a probabilistic setting:\nwhere z indexes the tangent plane/reference image, \u03b1 z \u2208 R z are local coordinates, and v \u2208 R 2d is a deformation map of an image (d being the number of pixels in images). The variable v is observed, whilst \u03b1 z and z are hidden.\nThe tangent planes T rz have tangent planeial points r z which also serve as template images. The tangent planes are indexed by a discrete hidden variable z \u2208 {1, \u00b7 \u00b7 \u00b7 , K}.\nThe model assumes that an image is sampled from a tangent plane T rz with prior P (z) = p z .\nEach image has corresponding local coordinate ('features') \u03b1 z \u2208 R z in each tangent plane. And in each tangent plane the deformation map v can be represented with its local coordinate \u03b1 z and tangent planes' basis vectors (i.e. column vectors of W z )\nwhere e z is Gaussian random noise with distribution N (0, \u03a8 z ). In addition, we assume that local coordinates are independently normally distributed:\nTherefore, P (v|\u03b1 z , z) is normally distributed and P (v) is a mixture of normal distributions:\nThis is also well known as a Factor Analysis (FA) model with Gaussian prior for P (\u03b1 z ) and prior P (z) = p z ."}, {"section_title": "Probabilistic Principal Component Analysis (PPCA)", "text": "Additionally, as we assume normally distributed noise e z \u223c N (0, \u03c3 (3) can be found via eigen-decomposition when 2d > z , i.e. the dimension of local coordinates \u03b1 z is smaller than that of deformation map v [22] . Consider a set deformations\nLet U z be an orthonormal matrix of eigenvectors and \u039b z a diagonal matrix of eigenvalues from eigen-decomposition on the mean centered covariance matrix\u1e7c z\u1e7c\nThe maximum likelihood (ML) estimator of W z , \u03bc z , and\nwhere U z is the orthonormal matrix with z largest eigenvectors in columns and \u039b z is the diagonal matrix with z largest eigenvalues in descending order at its diagonal.\nOnce the feature \u03b1 z is drawn from the normal distribution, a new OT deformation can be sampled according to (5) via\n3. Methods"}, {"section_title": "How to find the template image", "text": "Consider a set of images\n. We assume that each image is deformed with a smooth mass preserving map with respect to a template image. We additionally assume that the template image is an element in the set of templates\n. In other words, the images can be clustered into different groups that share the same template, and the corresponding optimal transport maps of images that share the same template are denoted as {v\nwith the template index z made explicit.\nThe question arises how to select the set of template images. In order to do this we briefly recap the linearized-OT (LOT) distance [26] . Given a tangent planeial point u we define \u03c7 u (x i ) = v i to be the OT deformation between x i and u (u would often be called a template point but in order to minimise confusion with the template images r z we will use the terminology tangent planeial point here). One\nHeuristically the LOT distance projects x i and x k onto the tangent plane at the point u and computes the Euclidean distance in the tangent plane. When there does not exist a transport map (i.e. if mass is split) then the situation is more complicated and we refer to [26] for more details.\nBefore moving on to the algorithmic details, we mention that for the tangent plane of the OT manifold at r z , the intrinsic mean with respect to the LOT distance and the extrinsic mean (defined by averaging transport maps) coincide. In particular, the intrinsic mean of the LOT distance with tangent planeial point u is given as:\nwhere v x is the OT deformation between x and u. Simple calculus gives us that v r = 1 N N i=1 v ri and the intrinsic mean corresponds to the density that is deformed from u by the mass preserving map v r . This is exactly the extrinsic mean.\nNow we describe how to find the multiple template images from a set of images. Put simply, K-means clustering with Euclidean distance is performed in the tangent plane with global template u. The K cluster centers are then mapped back to the image space, yielding 'K' template im- Figure 1 : Representing face image space with the optimal transport manifold which can be approximated with tangent planes. The facial image corresponding to the tangent planeial point of each tangent plane is shown.\nages. As stated above the extrinsic mean (cluster center) for each cluster is identical to the intrinsic mean. We note that K-means clustering with Euclidean distance in the tangent plane is an approximation of doing K-means clustering with the Wasserstein distance. Also, we note that clustering can be performed using alternative methods, e.g. Gaussian mixture models, or classification can be used when the associated labels that characterize the image sets are available.\nThe number of cluster centers, K, determines how many templates govern the data generation process. K can be determined via cross-validation. The cluster centers will serve as the template when we compute the mass preserving map for each image belonging to that cluster. Note that this local template is different from the global template u that was used to perform K-means clustering in the tangent plane with the tangent planeial point u. After K-means clustering, we now have K different tangent planes at tangent planeial points {r z } K z=1 ."}, {"section_title": "Probabilistic deformation model", "text": ""}, {"section_title": "Consider a set of images {x", "text": ", and corresponding optimal transport (OT) maps {v i } N i=1 , as before, generated with respect to the template images {r z } K z=1 found via Kmeans as described in the previous section. We now introduce the probabilistic framework of the data generation process. We assume that a discrete latent random variable z \u2208 {1, . . . , K} is involved in the data generation process, which governs how probable it is that the data is generated from the template r z . We can model the distribution of OT maps with a mixture of factor analyzers (MFA)\nwhere P (v|\u03b1, z) and P (\u03b1|z) are normally distributed as in Sec. 2.2.\nThe latent variable z indexes the tangent planes (or equivalently the templates, r z ). Fig. 1 illustrates an OT manifold represented with 5 tangent planes, each associated with prior P (z). The tangent planeial points (r z ) are shown on top of each tangent plane.\nThe red box in Fig. 1 draws an image generation pipeline. Once z is given, an OT map v is drawn from P (v|z). And then, v is converted back to an image x by pushing forward the template measure by v + I, i.e. x = (v + I) # r z . The relationship between an image space (x), an OT map space (v), and a local coordinate (\u03b1) space is shown.\nThe learning consists of two folds. In the first step one finds the tangent plane assignments for every image x i and the template images r z (via K-means clustering). At the second step, the statistics for the tangent planes are collected, i.e. W z , \u03bc z , and \u03c3 z in Eq. 4.\nProcedure Generating unseen images using OT Space Learning\nStep: Find T rz , z \u2208 {1, \u00b7 \u00b7 \u00b7 K}. 1 Set the number of tangent planes K. 2 Find the tangent planeial points r z . 3 foreach tangent plane T rz do 4 For image x i in cluster z, compute the OT map v i between r z and x i ."}, {"section_title": "5", "text": "Learn W z , \u03bc z , and \u03c3 z via PPCA. 6 Find p z ."}, {"section_title": "end Generation", "text": "Step: Generate Unseen Images. 8 Draw z \u223c p(z). 9 Draw \u03b1 * \u223c N (0, I). 10 Compute the unseen OT map, i.e. v * = W z \u03b1 * .\n11 Compute the unseen image via inverse OT mapping i.e. (v * + I) # r z ."}, {"section_title": "Generation Step", "text": "Here a step for synthesizing 'unseen' images is described. First, z is drawn from p(z), which determines the tangent plane T rz . Then, \u03b1 * is drawn from N (0, I). The 'unseen' OT map v * is synthesized by\ni.e. a linear combination of 'deformation patterns' in column vectors of W z with Gaussian \u03b1. Once v * is generated, an unseen image x * can be uniquely identified by inverse OT mapping with respect to the template r z (tangent planeial points for T z ), i.e. x * = (v * + I) # r z ."}, {"section_title": "Bayesian Classification", "text": "Since we assume that the data is generated in a probabilistic framework, it arises as a natural choice to formulate Bayesian classification. Given a set of images x N i=1 with labels y N i=1 , let's assume that we have learned the tangent planes T rz , z = 1, . . . , K such that each tangent plane represents the subset of images that belong to the same label. When a new test data x comes in, we can determine the label of the data by finding the most probable tangent plane. More specifically, we can find the tangent plane that yields the highest posterior probability given the test image x:\nwhere p(v|z) is normal distribution with mean \u03bc z + W z \u03b1 z and p(z) is the learned prior.\nThe images are generated from a probabilistic model which gives a measure of how likely an image belongs to a tangent plane. Here we test how our model can aid binary classification for small datasets. More precisely, once the tangent planes and latent priors are learned, for each new test image, we can find the label by associating it to the tangent plane that the image is most likely generated. The details on our Bayesian classifier described in Sec. 3.4, and Table 3 show the Bayesian classification accuracy for MNIST, ADNI, and Thyroid dataset. We note that for ADNI images, this is the current best reported classification accuracy."}, {"section_title": "Experiments", "text": ""}, {"section_title": "Datasets", "text": "We test how accurately the tangent plane approximation represents the image manifold on four datasets: MNIST, FERET, ADNI PET, and the Thyroid Nuclei dataset.\nMNIST digits: MNIST dataset [13] consists of 70,000 images of 10 digits (0-9) (of size 28 \u00d7 28). In the subsequent experiment, we randomly selected a subset of MNIST dataset, 600 images per each digit and 6000 images in total.\nFERET face images: The FERET dataset [14, 15] consists of face images photographed from different angles. For the experiment, frontal views were selected, and cropped and aligned apriori, in total we used 2137 images (of size 130 \u00d7 160).\nADNI PET Scans: Alzheimer's Disease Neuroimaging Initiative (ADNI) database 1 [8] was set up to define the progression of Alzheimer's disease, which includes MRI "}, {"section_title": "Finding the tangent planes", "text": "All aforementioned image datasets are chosen with the consideration that i) images consist of different classes (i.e. digits, identity of face, malign vs benign cells, Amyloid positive vs negative brains) and ii) that the same classes of images are more likely to be deformed from the shared class templates (i.e. digit '2' is highly likely to be deformed from another digit '2' not digit '3').\nThe templates of each class are found via K-means clustering. When label information is present (which is true for all except the FERET dataset) the K-means clustering with LOT distance is performed within the class so that the templates are learned per class not jointly. For example, K = 2 in the ADNI dataset, and therefore in total 4 tangent planes (2 classes \u00d7 2 clusters) are used to represent the image manifold. For the MNIST dataset, K = 10, and the mean image was computed and used as a template image. The number of tangent planes, the number of clusters (K), the dimension for the image space (d), and the dimension for the tangent planes ( z ) are summarized in Table 1 . Across all datasets, z d, implying that a d dimensional image space can be represented with much lower z dimensional tangent planes.\nOnce the templates are found, the deformation maps between each image and the templates are learned. The templates serve as tangent planeial points of the tangent planes, and eigenvectors of deformation maps will represent the tangent planes. For example, sample eigenvectors computed from the deformation maps are shown in Fig. 2 . The direction of the arrows indicates where the masses (pixels) are being transport to in the image and from the template, and the length of the arrows represents the amount of the masses being transported (the longer the arrows, the larger the amount of masses transported).\nWe sought to validate the proposed method by applying the method to solve two common problems: synthesizing more images and classification. We envision that the method would be especially advantageous when only small number of images are available. We also compared the synthesized images to the conventional way of augmenting data and applied it to train complex classifiers.\nFor the MNIST dataset which contains about 70k images, learning such templates and deformation maps can be carried out easily. We note that for ADNI PET and Thyroid Nuclei dataset, however, with much fewer available images compared to the dimension of each image, learning such templates and deformation maps becomes non-trivial. We show here that the proposed method is capable of generating new unseen images without requiring massive datasets and that the method can extend to the Bayesian classification method, which both accentuate the benefits of the study in applications where collecting large datasets is impractical or unlimited number of synthetic images are desired."}, {"section_title": "Synthesizing Unseen Images", "text": "Once the image manifold is modeled with tangent planes, we can sample synthetic images. Specifically, the tangent plane the new synthetic image belongs to will be determined according to its prior p z . Then, \u03b1 will be drawn out from normal distribution as in (6) to determine where in tangent plane the synthetic image will be located at. Each point in the tangent plane has a correspondence with a real image, and therefore, we can generate a synthetic image by mapping from the tangent space to the image space.\nThe synthesized images for MNIST, FERET, ADNI, and Thyroid datasets are shown in Fig. 3 .\nFor the MNIST dataset, the template images are shown in the first row. The synthesized images in rows 2-15 are generated by deforming the template images. For the FERET dataset, the templates are shown in the top row, and synthetic 'unseen' faces are generated by transporting masses (pixels) from template images. It is interesting to see that synthetic deformation maps are capable of generating new faces with a variety of facial expressions (smile with visible teeth, grin, frown, neutral, etc.) and facial identities (different shapes of eyebrows, eyes, and nose, presence of mustache, size of cheek bones and jaws, etc.).\nFor the ADNI dataset and thyroid nuclei dataset, we visualized both real and synthetic images images to help readers understand that visually there is barely any difference between true images and synthesized images. Here we repeated the same experiment for FERET dataset, but this time with only 19 images. We performed this exercise to make sure that synthetic images in Fig. 3 are not copies of the existing 2137 images. By reducing the training set to 19 images, we could confirm i) that the synthesized images are not replicates of existing images, and ii) that the method can synthesize richer data given a small number of training samples. Fig. 4 shows 19 real images used for the experiment (top row) and 38 synthesized images (rows 2-3).\nAlthough artifacts are noticeable due to drastically reduced initial training samples (i.e. blurred nose), the method is capable of creating images with a variety of facial expressions."}, {"section_title": "Comparison with synthesizing image with PPCA", "text": "In order to visualize how PPCA modeling with the Euclidean distance would work out we performed the same experiment of synthesizing images with the Euclidean distance instead of on the OT manifold. Fig. 5 shows 'unseen' images created by eigenvectors. As expected, linearly combining eigenvectors doesn't generate reasonable images because images do not lie on a linear Euclidean subspace."}, {"section_title": "Data augmentation for training CNN", "text": "Here, we tested whether enlarging the datasets with our proposed method can facilitate learning complex systems such as a convolutional neural network (CNN). For our task, Figure 5: 'Unseen' Images generated by PPCA using Euclidean distance ters, the second conv. layer consists of 96 filters, and the dense layer consists of 100 filters. ReLu activation layers follow conv. and dense layers, except for the final dense layer which has softmax output instead (or sigmoid for binary classification). The conv. layers' filters configuration is identical to that of Alexnet [12] . The Alexnet architecture was utilized specifically in favor of using its pretrained weights. Pretrained weights of Alexnet was loaded into our smaller network by arbitrarily choosing 48 (conv1) -96 (conv2) filter weights out of 96 (conv1) -256 (conv2) filter weights. For the MNIST dataset, the sample size was reduced to 100 images to emphasize the effect of how the proposed method can facilitate better learning for complex classifiers. Table 2 shows the classification accuracy with and without synthetic data, as well as conventional data-jittering (with translation, rotations, and shear transformation) method. The testing accuracy consistently improved with adding the synthesized data set. For the MNIST dataset, with 100 initial training samples and with 900 synthetic samples added, test accuracy reached 100%. For ADNI and Thyroid, adding synthetic images does not harm nor benefit the classification, therefore suggesting that synthesized images closely reflect the original images and therefore do not provide additional useful discriminant information for classifiers to utilize."}, {"section_title": "Conclusion", "text": "In this paper, we proposed to represent data with templates and diffeomorphic maps uniquely identified with Wasserstein-Kantorovich cost. Regardless of the size of the dataset, if the images share common templates, we showed that images can be represented in tangent planes and provide alternative representation of the dataset that can be utilized in synthesizing images and augmenting datasets for complex classifier training. In addition, we used a probabilitic framework by assigning each tangent plane with a latent variable, and formulated the Bayesian classifier which is demonstrated to be suitable for a dataset sharing common templates.\nHowever, we dot believe our methodology would generalise to non-structural images, e.g. uncategorized natural images. Our method inherently assumes that images are deformed from 'template' images, and generalizing to nonstructural images would require either different assumptions on the data distribution or a much larger dataset.\nNevertheless, modeling in tangent planes with optimal transport maps produces realistic local variations compared to using diffeomorphisms or Euclidean geometry. Specifically, although the optimal transport manifold is modeled as locally linear, variations in tangent planes corresponds to highly non-linear variations in the image space. We anticipate a future study to include generalizing the FA model to a fully Bayesian model and assuming different distribution for the data, expanding the method for non structured images, applying synthetic images to solve inverse estimation problems [19] , generating ground truth data for quantifying accuracy of image analysis operation, and generating new samples for simulation based training."}, {"section_title": "Acknowledgements", "text": "MT would like to thank the Cantab Capital Institute for the Mathematics of Information at the University of Cambridge for their support during the preparation of the manuscript."}]