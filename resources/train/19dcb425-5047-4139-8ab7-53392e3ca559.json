[{"section_title": "Abstract", "text": "Abstract-The problem of constructing classifiers from multiple annotators who provide inconsistent training labels is important and occurs in many application domains. Many existing methods focus on the understanding and learning of the crowd behaviors. Several probabilistic algorithms consider the construction of classifiers for specific tasks using consensus of multiple labelers annotations. These methods impose a prior on the consensus and develop an expectation-maximization algorithm based on logistic regression loss. We extend the discussion to the hinge loss commonly used by support vector machines. Our formulations form bi-convex programs that construct classifiers and estimate the reliability of each labeler simultaneously. Each labeler is associated with a reliability parameter, which can be a constant, or class-dependent, or varies for different examples. The hinge loss is modified by replacing the true labels by the weighted combination of labelers' labels with reliabilities as weights. Statistical justification is discussed to motivate the use of linear combination of labels. In parallel to the expectation-maximization algorithm for logistic-based methods, efficient alternating algorithms are developed to solve the proposed bi-convex programs. Experimental results on benchmark datasets and three real-world biomedical problems demonstrate that the proposed methods either outperform or are competitive to the state of the art."}, {"section_title": "INTRODUCTION", "text": "L EARNING from multiple labelers who provide inconsistent annotations to the training data is an emerging machine learning problem. Recent technological innovations have created easily accessible crowdsourcing platforms such as Amazon Mechanical Turk (AMT) 1 and Crowdflower, 2 through which tasks such as text or image annotations can be assigned to enormous online annotators at affordable prices. These crowdsourcing methods largely reduce the economic and time costs associated with massive annotating tasks. However, they have imposed great technical challenges in deriving and modeling ground truth in many cases. For instance, to diagnose cancer, although a biopsy provides ground truth, the procedure is complicated and combines with discomforts. Hence, series of X-ray images can instead be read and annotated by multiple radiologists to facilitate the diagnosis. An early work in cancer research reported the problem that different radiologists have different reliabilities of recognizing a lesion in the same diagnostic image [1] . Since one expert's expertise may be biased and/or incomplete, integration of knowledge from multiple experts is necessary to build accountable and reliable cancer informatics systems. Learning from multiple annotators has become necessary and beneficial in a variety of fields. In the bioinformatics field, nature language processing (NLP) tasks have been performed by AMT workers to extract knowledge from biological and medical documents [2] , [3] , [4] . A recent work [5] recruited non-expert AMT workers to annotate CT images with little prior training and then had to use integration such as majority voting strategies to detect polyps (colon cancer). The traditional learning task constructs a classifier mapping from input features to ground truth labels, which becomes difficult in the scenarios where ground truth labels are unknown and need to be estimated from multiple annotators of different expertise. Fig. 1 illustrates the learning problem using an example of heart motion analysis. Multiple radiologists annotate a set of echocardiograms in terms of whether an image shows abnormal heart motion. The labels from these radiologists do not agree. The goal is to train a classifier that utilizes the inconsistent radiologist annotations to predict unseen images. The echocardiograms are very difficult to interpret even for the best physicians [6] . Inter-observer studies showed that even world-class experts only agreed on 80 percent of their diagnoses. The learning problem described in Fig. 1 is especially difficult when radiologists' expertise and reliability are unknown.\nSeveral methods have been proposed in the recent machine learning literature to learn models from crowds, or more precisely, from crowdsourced labels [7] . These methods typically impose a probabilistic model on the labeling process, such as Bernoulli model or Gaussian model on the true labels [8] , or two-coin model for annotators [9] , [10] , and then use an expectation-maximization (EM) process to build logistic regression classifiers. Two recent works [11] , [12] also propose convex formulations based on logistic regression, but the true classifier is estimated by taking an average effect of the classifiers trained with each labeler, which may be impacted significantly by malicious labelers or spammers. There has been limited effort in extending support vector machines (SVM) to build classifiers from crowd-annotated data. It has been shown that SVM may bear some advantages over logistic regression when data follows certain distribution such as multivariate or mixture of distributions, and SVM methods may require less features than logistic regression to achieve a better or equivalent classification accuracy [13] , [14] , [15] .\nIn this paper, we propose a bi-convex optimization approach that performs simultaneously three tasks: (1) assess how good each labeler is, (2) estimate the true labels, and (3) build a classifier using approximate true labels estimated from the multiple labels. The key step is to modify the hinge loss used in the SVM where the unknown true labels are replaced by their estimates. In the proposed approach, we associate each labeler with a reliability factor. Three learning models, each forming a bi-convex program, are derived by making the hinge loss reflect three different kinds of assumptions on the labeler reliability. The proposed methods follow a general principle that the labels from a more reliable labeler should contribute more to the construction of the classifier. If a labeler has a constant reliability factor, it represents an overall performance of the labeler for the task. For binary classification tasks, if a labeler has a predisposition to one class than the other, his/her reliability differs between the distinct classes, which brings a more complex reliability structure. The most complex one assumes that the labeler reliability varies on individual examples if the labeler is not equally competent to annotate different examples."}, {"section_title": "RELATED WORKS", "text": "Many existing methods for learning from crowds focus on modeling of an annotation process and estimating error rates for the labelers independent of any classifiers. The early statistical methods [1] , [16] , [17] on error rate estimation for repeated but conflicting test results, and the recent work on learning crowd behaviors [18] , [19] , [20] , are good examples. The latest work in this direction ranks annotators to identify spammers [21] , uses Multinomial probabilistic models to quantify the competency of each labeler [22] , and parameterizes labeler expertise or reliabilities as well as the difficulty of an annotation task to model human annotation more accurately [23] , [24] , [25] . Moreover, in the work of [26] and [27] , reliabilities are estimated from gold standard tasks and then used in a weighted combination for new labeling tasks. Another method in [28] models the labelers using a stochastic model and select examples to teach the labelers via a greedy algorithm. These methods study the problem of optimizing the task assignment in a crowdsourcing system. We adopt the similar strategy as [26] and [27] to aggregate the inconsistent labels assigned by multiple labelers, but the labeler reliabilities are jointly estimated with a classifier.\nRecently the interest of learning from crowds has increased to directly build classifiers from multi-labeler data. Repeated labeling methods [29] , [30] identify the labels that should be reacquired from some labelers in order to improve classification performance or data quality. A recent theoretical work [31] , however, argues that the repeated labeling negatively impacts the relative size of the training sample. Another set of approaches [32] , [33] assume the existence of prior knowledge relating the different labelers, and the prior is used to identify the samples for each labeler that are appropriate to be used in the classifier estimation. Several methods [7] , [8] , [9] , [10] , [11] , [12] , [34] , [35] , however, neither assume that labels can be reacquired, nor assume existence of any prior on labeler relations. These approaches rely on certain data distribution, such as Bernoulli model on the true binary labels or Gaussian model on the true continuous labels [8] or two-coin model on the process of how an annotator provides a label [9] , [10] , and then develop a posterior solution with logistic regression and use an EM algorithm to estimate the model parameters.\nAmong the methods that build a classifier and estimate labelers' error rates simultaneously, the models of [11] , [12] and [8] are the most similar to our work. In [11] , [12] , a linear classifier with coefficients w w j is built for each individual labeler j based on his/her own annotation using logistic regression and the final classifier with a coefficient vector w w is obtained by enforcing a regularization term, that is either P j jjw w j \u00c0 w wjj 2 in [11] or P j;k jjw w j \u00c0 w w k jj 2 where j; k denotes the indexes of the classifiers constructed from an individual labeler's annotation [12] . The final classifier (w w) is hence constructed by taking an average effect of individual labeler's classifiers rather than by minimizing the final classifier's own loss on the training data. This classifier may collapse if there are many malicious labelers due to the kind of majority voting effect. In [8] , it is assumed that a labeler's competence may vary when annotating different sample points, so a classifier is built for each labeler to parameterize his/her reliability on an example. Then the final classifier is built by modeling the reliabilities of the different labelers in a logistic regression based EM algorithm. Unlike this method, we impose no specific distributions but more general and intuitive assumptions on the labelers' reliabilities. In one of our recent works [36] , we propose a strategy to model simultaneously two sources of labeling ambiguity: (1) the one caused by the inconsistent labels from multiple annotators; (2) and the ambiguity that a class label is associated with a bag of input instances rather than each instance. The second labeling ambiguity is often referred to as the multiple instance learning problem where a bag is labeled as positive as long as one of its instances shows evidence to be positive. We first modify the hinge loss to take a consensus of different labelers' labels, which is, in spirit, the same as the first model in this current paperthe constant reliability model. Then the work in [36] focuses on the extension of that model to multiple instance learning. In this paper, however, we focus on solving the multiple labeler learning problem by reforming the early constant reliability model and proposing two other more advanced new formulations."}, {"section_title": "THE PROPOSED FORMULATIONS", "text": "We derive the learning formulations in this section. Let X X \u00bc fx x 1 ; x x 2 ; . . . ; x x n g comprise the n examples, where x x i 2 R d , and is annotated with multiple versions of the label fy "}, {"section_title": "The Model with Constant Labeler Reliability", "text": "We approximate an example's true label y i by a weighted combination of each labeler's labels, e.g., y i ' P m j\u00bc1 r j y j i and each labeler j is associated with a reliability factor r j where 0 r j 1. If the reliability factors of all labelers are equal, this combination amounts to the majority voting. If we require additionally P j r j \u00bc 1, we approximate y i by a convex combination of labelers' opinions. We believe these combinations may all be reasonable, and the most appropriate one may be problem-specific. If the weighted consensus of all labelers P j r j y j i > 0, the example i is more likely to be in the class of y \u00bc 1; or otherwise, it likely has a true label of y \u00bc \u00c01.\nWe modify the hinge loss by replacing the true labels y i by the weighted consensus, which yields a bi-convex function \u00bd1 \u00c0 \u00f0 P j r j y j i \u00de\u00f0x x > i w w \u00fe b\u00de \u00fe (convex with respect to \u00f0w w; b\u00de for fixed r r and convex with respect to r r for fixed \u00f0w w; b\u00de). When the consistency is high among the labels given by different labelers, especially by reliable labelers, the magnitude of P j r j y j i tends to be large regardless of its sign, showing high annotation confidence for x x i . Minimizing the modified loss leads to a classifier that works hard to correctly classify x x i . When the labeling consistency is low among reliable labelers for some examples, the assignment of them to either class can be a vague guess. The linear combination of labels will lead to a small value in magnitude due to the cancellation effect of the mixed \u00fe1 and \u00c01 labels. The modified loss then reports a low value on such cases, which hence does not emphasize the classification performance on these examples. This justifies the validity of the modified loss.\nBy adding a regularization term jjw wjj 2 to the empirical loss, we minimize the following optimization problem\n. . . ; n; j \u00bc 1; 2; . . . ; m:\nThe constraints on r r are affine, which formulate the convex combinations of labelers' opinions and enforce competition among the labelers by limiting the sum of their reliabilities to a constant 1. It is easy to verify that Problem (1) is a case of biconvex optimization because the objective function is bi-convex and constraints are affine. To translate the problem into a canonical form, the modified loss is translated into constraints \u00f0 P j r j y j i \u00de\u00f0x x > i w w \u00fe b\u00de ! 1 \u00c0 i for each example i where the slack variables i ! 0, and both r r and \u00f0w w; b\u00de are variables to be determined in the following optimization problem\nProblem (2) is also a quadratically constrained quadratic optimization problem but with one of its constraints bi-convex. For binary classification, if the training data is balanced in the distribution of either class (e.g., close to even numbers of positive and negative examples), the proposed model with constant reliability is often sufficient to estimate a labeler's overall reliability. This is sometimes referred to as a onemode model. The labelers with higher reliabilities are expected to be assigned with larger weights by solving Problem (2). However, this one-mode model will hardly take care of the situation when labelers have different labeling accuracies with respect to the positive or negative class labels. In practice, when the problem data is very unbalanced, the true positive rate and true negative rate will be important factors to reflect the real performance. A model considering a labeler's class-dependent reliability will be needed."}, {"section_title": "The Model with Class-Dependent Labeler Reliability", "text": "A labeler's reliability may naturally be class dependent. For instance, online annotators may have different accuracies in labeling documents with respect to different topics relying on whether they are more familiar with some topics than others. If a labeler tends to always label examples to the \u00fe1 class, his positive predictive value (PPV) (the percentage of examples labeled by the labeler as positive that are actually positive) may be low but his negative predictive value (NPV) (the percentage of examples labeled by the labeler as negative that are actually negative) can be high. We extend the model discussed in Section 3.1 to classdependent reliability factors. The model still estimates the true labels by the weighted combination of each labeler's labels. However, two parameters a j ! 0 and b j ! 0 are needed to estimate the jth labeler's PPV and NPV, respectively. We set the true labels y i ' P m j\u00bc1 a \nBi-convexity still holds for Problem (3) since a j and b j are not used at the same time for each y j i in the constraints given the values of y j i are already known. The same optimization algorithm used to solve Problem (1) can be applied to solve Problem (3). Problem (3) can also be translated into a canonical form by utilizing slack variables to represent the hinge losses, and the resultant optimization problem is written as follows:\n. . . ; n; j \u00bc 1; 2; . . . ; m:\nThis two-mode model, is similar in spirit, to the two-coin model used in [9] , [10] , where a labeler's expertise was also described by two factors, sensitivity and specificity. In [9] , [10] , labelers' expertise, true labels and the classifier were learnt with an EM algorithm based on logistic regression. However, we observe that this prior model can become numerically unstable when a large number of laberlers are present [36] . The two-coin model updates the estimated ground truth denoted by m, a probability of the true label being \u00fe1, based on the multiplications of sensitivities and specificities, denoted by 0 a j 1 and 0 b j 1 for labeler j respectively (with a little mixed use of notation). The products P m j\u00bc1 a j and P m j\u00bc1 b j , assuming there are m labelers, become extremely small with large m. Consequently, m becomes oscillating between 0 and 1 since the two products are used in the numerator and denominator of the updating formula for m.\nThe proposed model is instead scalable and reliable to deal with a large number of labelers. By selecting high-quality labelers for use in the combination, redundant labelers may be excluded and sparsity has been observed in the estimated reliabilities when a large number of labelers are included. Our empirical results show that, for both the models with constant reliabilities and class-dependent reliabilities, the true labels can be sufficiently estimated from few labelers and information from other labelers might be redundant. Our models could automatically select labelers whose labels are valid to make accurate estimates of the ground truth and exclude correlated or redundant labelers."}, {"section_title": "The Model with Sample-Specific Labeler Reliability", "text": "If a labeler is not equally competent to annotate all sample subjects, his/her reliability r will become a factor relying on individual samples x x and hence becomes a function of x x as r\u00f0x x\u00de. Such an issue often takes place in real life applications. Radiologists may not have the equal reliability dealing with high-quality images versus images of different kinds of noise. Few previous studies examined this practical difficulty. The methods in [8] , [34] built a classifier x x > w w j \u00fe b j for each labeler j based on his/her own annotation, and defined r j \u00f0x x\u00de as a sigmoid translation \u00f01 \u00fe exp\u00f0\u00c0\u00f0x x > w w j \u00fe b j \u00de\u00de\u00de \u00c01 of the linear classifier. The probability of observing \u00c0y i j . Due to the use of sigmoid functions and absolute values in the exponent, it has created complex optimization problems. We will use the functional distance from each x x i to the separation boundary (x x > w w j \u00fe b j \u00bc 0) that is computed from a labeler j's annotation to determine the labeler's confidence on labeling x x i relative to other labelers. The farther from the separation boundary, the more confident the labeler annotates the example. Hence, the reliability function r j \u00f0x\nThe denominator is used to compute the jth labeler's confidence relative to other labelers' confidence. The individual labelers' classifiers can be built by minimizing standard hinge loss defined as h\nSince these classifiers are used to determine reliabilities, they should be constructed more or less accurately (i.e., close to the final classifier determined by w w), which motivates to impose an additional regularizer R\u00f0w w; w w j \u00de \u00bc P j jjw w \u00c0 w w j jj 2 assuming the final classifier is a more accurate estimate of the true classifier. Importantly, this regularizer will enforce individual labeler's classifiers to have similar jjw w j jj. Because r j \u00f0x x i \u00de is defined through a functional distance from x x i to the boundary, the similarity among different jjw w j jj will render that r j \u00f0x x i \u00de is largely proportional to the geometric (euclidean) distance from the point to the boundary. We define the modified hinge\ni w w \u00fe b\u00de \u00fe and the additional constraint\nThe modified hinge loss appears complex. However, it can be re-organized through simple algebraic calculations by moving the denominator in r j \u00f0x x i \u00de to the right-hand side. After re-organization, this constraint becomes \n. . . ; n; j \u00bc 1; 2; . . . ; m:\nProblem (5) has a convex objective function, a bi-affine constraint (the first constraint) and all other constraints are affine. This problem is also a bi-convex program. We can group the variables into two groups: one group is related to the final classifier including variables w w; b; , and the other group is related to individual classifiers including variables w w j ; b j ; h h j ; u u. When fixing one group of the variables, Problem (5) becomes a convex quadratic program in terms of the other group of variables.\nBesides the regularizer that enforces the similarity between individual w w j 's and the final classifier's w w, an additional regularizer jjw w j jj 2 can be directly applied to individual w w j . We will also evaluate an alternative formulation by revising the objective function in Problem (5) to min w w;b; ;w w j ;b j ;h h;u u\nwhere the same constaints in Problem (5) apply.\nBesides the prior methods in [8] , [34] , the methods in [11] , [12] also estimate a labeler's reliability by building a classifier \u00f0w w j ; b j \u00de from the labeler's own annotations. However, the final classifier \u00f0w w; b\u00de was built by minimizing P j jjw w \u00c0 w w j jj, and hence w w is estimated as the centroid of all w w j 's, and thus suffering from significant outlier labelers."}, {"section_title": "THE OPTIMIZATION ALGORITHM", "text": "In this section, we present an effective algorithm to solve the proposed Problems (1), (3), (5), and (6), respectively. We adopt the alternating optimization approach for each problem where we alternate between solving for the final classifier and solving for the parameters related to reliability iteratively until the algorithm converges. Because the three proposed problems are all bi-convex as discussed in the last section, the subproblems formulated for solving each group of variables is convex. To solve the subproblems in (1) and (3), we used their equivalent formulations (2) and (4) The initialization choices listed in Algorithm 1 are believed to follow the most common sense. For instance, without prior knowledge, we may assume that all labelers are equally competent (with equal initial r r, a a and b b) and let the algorithm determine and update the reliability factors based on sample data. We also empirically notice that the algorithm is insensitive to initial values in the sense that it gives the same solution when we perturb the listed initial values by random white noise.\nWe point out a small derivation difference in solving the three problems. Problems (1) and (3) can be solved using the same split of working variables, that is the algorithm optimizes either \u00f0w w; b\u00de or r r (or \u00f0a a; b b\u00de) in an alternating step. The slack variables i in Problems (2) and (4) are only used to update the hinge loss in Problems (1) and (3), respectively, at each step and hence they are included in both the working groups of variables. For the sample-specific reliability model, the modified hinge loss is not bi-convex by its literal form. We have reformulated the problem using the first constraint in Problems (5) and (6) . In this situation, we group the variables i with the final classifier parameters \u00f0w w; b\u00de.\nAccording to the convergence analysis in [37] , [38] , the alternating Algorithm 1 used for solving our programs (1), (3), (5), and (6) converges to a set of fixed points which in general includes global minimizers, local minimizers and the saddle points. Due to the bi-convexity, the fixed points of our programs do not include saddle points [38] .\nWe give a brief discussion on the complexity of Algorithm 1 using Problems (1) and (3). To optimize for \u00f0w w; b\u00de, Algorithm 1 solves a quadratic program similar to SVM. To solve for r r (or \u00f0a a; b b\u00de), Algorithm 1 solves a linear program. Effective algorithms such as Dantzig's simplex method, or later interior point methods have been developed for these programs. In our implementation, we used the CPLEX software to solve them with choices of simplex-based methods. Rigorous bounds on the number of operations required by these methods have been established. For instance, the complexity of solving the linear program is in order of d 2 ' with a constant where d is the number of variables and ' is the number of constraints in the program. We observe that Algorithm 1 typically stops within 10 iterations, so the overall complexity of Algorithm 1 is a constant (e.g., 10) multipying the sum of the complexity of solving the linear and quadratic programs."}, {"section_title": "EXPERIMENTS", "text": "The proposed methods were tested on five benchmark datasets at first. Four of them are commonly used in evaluating machine learning algorithms. These datasets are all for binary classification and come with ground truth labels, but they are not labeled by multiple annotators. We created synthetic labelers for these datasets. The fifth benchmark dataset is the facial expression dataset where each face shot image was labeled by multiple real online workers. Besides the benchmark datasets, we also tested the proposed methods on three real-world problems of analyzing biomedical images. The first problem was to detect breast cancer in digitized mammographic images. The other two problems aimed respectively to detect Heart Wall Motion Abnormality (HWMA) using features extracted from echocardiogrmas and to diagnose Alzheimer's disease (AD) using features extracted from magnetic resonance imaging (MRI).\nOur methods were compared against four recently-published methods, all of which construct classifiers: Two-coin model [10] , EMGaussian model and EMBernoulli model [8] , and a convex model [11] . The classifier trained with ground truth labels was supposed to achieve the best performance whereas the majority voting approach served as our baseline. The proposed methods Model with Constant Reliability, Model with Class-Dependent Reliability and Model with SampleDependent Reliability were respectively referred to as MCR, MCDR and MSDR.\nTen-fold cross validation (CV) was used to run all algorithms on each of the datasets with the same stratified CV split. For the proposed methods and the convex method in [11] , we tuned their regularization parameters within the training data in the first CV fold using another internal three-fold CV for each dataset and then fixed the parameters for the nine remaining CV folds. We selected the parameters that obtained the best performance from the range of [10 \u00c03 ; 10 \u00c02 ; . . . ; 10 3 ]."}, {"section_title": "Benchmark Datasets", "text": "In this section, we provide the details on the experimental procedure and results obtained on the benchmark datasets."}, {"section_title": "UCI Datasets with Synthetic Annotators", "text": "We used four datasets including Cleveland, Glass, Ionosphere and Pima, which were downloaded from UCI Machine Learning Repository. 3 Table 1 has the details about these datasets. The datasets were preprocessed for performing binary classification. Although all these datasets had no multiple versions of labels from real labelers, they were frequently used by many previous multi-labeler learning methods, including the three methods in [8] , [9] , [10] that we compared in this paper. The rational was to have ground truth labels and known labeler reliabilities to test against the algorithms.\nSince it was not straightforward to create synthesized labelers according to the pre-specified PPV's and NPV's, we created the labelers based on the pre-fixed sensitivities and specificities. The labelers were created following the same procedure used in [10] . We first specified two parameters for each labeler, the sensitivity a and specificity b. Five synthetic labelers were created for each of the four datasets. Their sensitivities and specificities were pre-defined as [0.6, 0.6, 0.5, 0.7, 0.2] and [0.6, 0.6, 0.5, 0.2, 0.7], respectively. The third labeler's performance was close to a random guess. The first two labelers were given equal sensitivity and specificity, while the last two labelers were prejudicial in the sense that one of them had higher sensitivity and the other one had the exactly opposite parameter values.\nOnce the parameters were specified for a labeler, a random number was generated uniformly from \u00bd0; 1 for each example. When the true label was \u00fe1 (or \u00c01), if the random number was not bigger than the labeler's a (or b), this labeler chose the original label; or otherwise, (s)he flipped the sign of the label. After the labelers were created, their PPV's and NPV's were calculated.\nIn order to simulate the case where labelers have different levels of reliability on different examples, we randomly selected 50 percent of the data samples and ran k-means cluster analysis to group them into five subgroups. Then we made each of the five simulated labelers particularly accurate in annotating one of the subgroups, respectively, with no overlapping. Their labels coincided with the golden truth on the subgroup which they were assigned to. For the rest of data samples not belonging to the subgroup that was assigned to a labeler, the labeler will presume the same sensitivity and specificity levels used in the early experiments. Fig. 2 shows the Receiver Operating Characteristic (ROC) curves achieved by all the methods in comparison on the four datasets with five simulated labelers. The ROC was plotted by merging all the validation data from the 10 folds of the CV. From the ROC plots, we found that the MSDR model with Eq. (6) generally achieved superior performance over the other models by learning the varying expertise jointly with estimating the true labels. Among the other models, MCDR as an extension of the MCR model, which estimated labelers' weights based on the PPV and NPV, consistently achieved better performance than the MCR model that only used one parameter to capture the labeling accuracy. Compared to the method in [9] , [10] which also built a two-coin model (with two parameters), the MCDR model could also achieve a slightly better performance in general."}, {"section_title": "Facial Expression Recognition Dataset", "text": "The facial expression dataset was previously used to study crowdsourcing behavior [39] . The original dataset contained 585 head-shots of 20 users. For each user, images were collected in which the user could be looking at four directions: straight, left, right and up, and the user could present four different kinds of facial expression: neutral, happy, sad and angry. The images were labeled with respect to the four types of facial expression by totally 27 online labelers at the Amazon Mechanical Turk. Because not all labelers labeled each image, on average, each image was labeled by nine labelers. The previous study reported a labeling accuracy of only 63.3 percent using majority voting among labelers. Hence, the task of building a good feature-based classifier is very challenging. We selected 220 images with the users looking straight, left and right without wearing sunglasses and performed experiments to classify, based on the image features, if an image contained a happy face. 24 labelers were involved in labeling the 220 images. True positive labels were associated with 55 of the images, and the rest were labeled by \u00c01. We set the missing labels to 0, which would automatically be ignored by any of the comparison methods. We segmented the region of an image containing a human face into 6 \u00c2 6 blocks. Local Binary Pattern (LBP) features [40] were extracted from each block and we aligned all these features together (2,088 of them) to represent an image. We applied principal component analysis to reduce the dimensions to 120 that explained ! 95 percent of the total data variance.\nThe area under the ROC curve (AUC) of each classifier was reported and summarized into Table 2 (the first column), where we used the actual labels of each image collected from online workers. Due to the difficulty of the problem itself and the significant amount of missing labels, Fig. 2 . ROC curves on cleveland, glass, Ionosphere, and pima datasets with five simulated labelers (where two of them were simulated as good labelers, the third labeler was close to a random guess, the fourth one was more accurate in labeling positive examples than negative ones, and the last labeler was on the opposite of the fourth one). all methods achieved modest AUC values. Our models MCDR, MSDR (both Eqs. (5) and (6)) and the Bernoulli model were among the best methods with MSDR models performing slightly better. All multi-labeler methods outperformed the majority voting baseline.\nTo test how the compared methods perform as the number of annotators increased, we also created more synthetic labelers following the same procedure as mentioned in Section 5.1. Table 2 (from the second to the last columns) which clearly show that the difference in performance was magnified. The two MSDR models improved the performance by 3 to 13 percent over the other multi-labeler learning methods in these experiments. We also ran an experiment with 1,000 synthesized labelers (results not shown in Table 2 ). We observed that the two-coin model of [10] had extremely worse performance (AUC = 0.55) than other models (e.g., the best MCDR AUC = 0.73), which shows that this model may perform poorly with a large number of annotators. Besides, the convex model of [11] did not work well either since this model suffered a lot from the synthesized annotators with lower accuracies (AUC = 0.57). Fig. 3 shows the average run time for an iteration of each method versus the number of annotators. All methods required longer time as the number of annotators increased. The two proposed models MCR and MCDR were more scalable since their run time curves were flatter than others and time costs were lower. It is partially because increasing the number of annotators only affects the optimization of the sub-problem, i.e., solving Problem (1) and (2) for r r \u00f0k\u00de and a a \u00f0k\u00de ; b b \u00f0k\u00de when the classifier parameters are fixed. This subproblem is a simple linear program and easily scalable with a large number of labelers. Given the two formulations of MSDR had similar run time, Fig. 3 reports the run time for MSDR with Eq. (5) only. The MSDR model was timely consuming in comparison with other models that also built individual labelers' classifiers, which may require the development of a more efficient optimization algorithm and we leave it for future work."}, {"section_title": "Biomedical Image Analysis", "text": "To diagnose a complex disease, a diagnostic image is often interpreted by multiple radiologists to enhance the diagnostic accuracy. In this section, we describe how the proposed methods can help with cancer detection, heart abnormality detection and Alzheimer's disease analysis based on features that were extracted from a variety of imaging modalities, including mammographic images, ultrasound clips or MRI scans of brain. The mammographic images and echocardiograms were annotated by multiple radiologists. The MRI dataset of Alzheimer's disease contained records for multiple visits and a doctor's annotation was supplied in each visit. The final reading of the images was also provided and served as the ground truth labels for a patient. We used the diagnoses in the different visits as multiple annotations or created synthetic labelers to provide multiple versions of annotations."}, {"section_title": "Detecting Breast Cancer in Mammographic Images", "text": "In this dataset, 75 mammograms were collected from real patients, of which the ground truth labels were obtained from biopsy which annotated whether the mammographic image contained a lesion. There were 28 positive samples (having a lesion) and 47 negative samples. Each sample image was represented by eight attributes and was associated with the labels assigned by three radiologists. We created five more synthetic labelers by leveraging the ground truth labels. The labelers were synthesized with sensitivities We drew the ROC curves of the classifiers constructed by the different methods in comparison together with the AUC statistic in Fig. 4 . According to the AUC values, MSDR model (Eq. (6) performed better than all the other multi-labeler learning algorithms. MCR achieved the lowest performance among the multi-labeler models but still outperformed the majority voting baseline. The two-coin model and MCDR performed similarly probably because both used two reliability parameters. Among the three models that used sample-specific reliabilities, our model was the best (beter than EMGaussian, EMBernoulli, and the early convex model). Fig. 5 (5a, 5b, and 5c) shows the estimated reliability factors and compares them against the true labels or the simulated labeler performance. The first three labelers represent the radiologists. From Figs. 5a , 5b, and 5c, we observed that the MCR and MCDR models are able to sketch a general picture of the varying labeler expertise that is close to the true values/trend. For the MSDR model that builds a final classifier jointly with individual labelers' classifiers, the ROC plot in Figs. 5g and 5h show performance for the classifiers constructed by the two MSDR models. The final classifier clearly outperformed the classifiers built from any individual labeler's data. Our models created shrinkage effects that produced sparse r r (or sparse a a and b b) . As discussed early on, this shrinkage effect shows that true labels can be estimated from few reliable labelers for the tested datasets."}, {"section_title": "Heart Wall Motion Analysis", "text": "The Heart Wall Motion Abnormality detection dataset contained the features extracted from the images of the wall motion of left ventricles in 222 heart cases. The wall of left ventricle is medically segmented into 16 segments. Fig. 6 shows 6 of the 16 wall segments seen from the apical four chamber (A4C) view of an ultrasound clip. For each segment, 25 features were extracted. The feature extraction process was described in more detail in [6] . For each heart case and each segment, the ratings are provided by five doctors as the level of severity ranking from 1 to 5, besides, 0 would stand for the missing ratings. We assume that if the ratings are greater or equal to 2 then the label can be set as +1, which means there exists abnormality, otherwise the label is \u00c01. Additionally, at the heart level, if two or more segments of one heart have been claimed as abnormal, the heart-level label would be +1, which means the heart overall has abnormality, otherwise it is \u00c01.\nIn this experiment, among all these 16 segments, the data extracted from segment 14 were more balanced than the other ones. We used this set of data to test our methods. Because only two cases from this dataset missed radiologists' ratings, there were total 220 examples. Since there was no ground truth available for the data, it is reasonable to make the majority voted labels from the five real doctors be the ground truth, and then we randomly selected three real doctors and created five synthetic labelers using the same settings for varying sensitivities and specificities as in Section 5.1.1. Fig. 7 shows that the two proposed MSDR methods achieved the superior performance over the other methods.\nSimilarly, we also illustrated the reliability factors reported by the proposed models MCR and MCDR, which were included in Fig. 5 (5d, 5e, and 5f ). The real radiologists were shown as the first three annotators. We observed that the proposed models excluded most of the synthetic annotators whose labels were not in good quality. The labels from three radiologists were already sufficient to train the classifier well. Figs. 5i and 5j show the classifiers trained by the MSDR model and each annotator's labels, where we can see that the three radiologists had similar labeling expertise and they were much better than synthetic labelers. The MSDR model combined the expertise of good labelers and thus achieved the best performance."}, {"section_title": "MRI-Based Alzheimer's Disease Analysis", "text": "We tested the proposed models on the Alzheimer's Disease Neuroimaging Initiative (ADNI) dataset. 4 In the ADNI project, the collected data such as MRI and PET images of participants are used as the predictors to predict the progression of disease. The data we used contained 3,063 MRI images taken from 882 participants including Alzheimer's disease patients, mild cognitive impairment (MCI) subjects and elderly controls. The participants were included in two ADNI study phases, ADNI GO and ADNI 2 . Fig. 8 shows an example of a participant's brain MRI image in the axial view. A participant had multiple MRI scans collected as he/she had several follow-up visits and the MRI scans were taken at each visit.\nWe used each MRI image as an example and constructed the classifier to predict the diagnosis of AD or MCI based on the features extracted from MRI images. Among all the 3,063 MRI images, there were 833 normal cases (labeled by \u00c01) whereas the remaining images are for AD or MCI patients (labeled by +1). Each MRI image was preprocessed by FreeSurfer 5 and represented by 307 features. The features can be categorized into five types: cortical thickness average, cortical thickness standard deviation, volume of cortical parcellation, volume of white matter parcellation and surface area.\nIn our first set of experiments, we extracted the data for 147 patients who completed (all) four visits at the month 3, 6, 12, and 24, respectively, and then we used the diagnoses for the first three visits as annotated labels so we had three different versions of the label. We used the diagnoses for the forth visit as the ground truth as it gave the latest stage of AD and MCI. Among all the compared methods, the classifier trained with the ground truth served the oracle model with the best performance of an AUC value of 0.64. The classifier trained with majority voted labels served as the baseline (AUC = 0.58). The other methods achieved similar performance in general. The MCDR and MSDR models performed slightly better than others. (However, the difference became more significant when we increased the number of labelers as shown below). The three annotations at the month 3, 6, 12) served as good labelers with accuracies of [0.9, 0.93, 0.97] where the last labeler was the best. The In the second set of experiments, we created [40, 60, 80, 100, 500, 1,000] synthetic labelers in the same way as the description in the experiments with the facial expression dataset. Because the MCR and MCDR models were more scalable to large datasets than the MSDR models, we further tested the MCR and MCDR models on the ADNI dataset using all 3,063 images. The AUC values for the different methods were summarized into Table 3 . The results in the table show that the MCDR model had achieved a superior performance when we increased the number of labelers. We also recorded the averaged run time of one iteration for these methods. The comparison of the run time in Fig. 9 shows that the two-coin model required the lowest run time across all the experiments with different numbers of labelers. When the number of labelers was relatively small, the MCR and MCDR had larger time costs than the other models. However, the two proposed models were more scalable to the number of labelers as we can see the run time curves were more flat. The convex model of [11] became more time consuming than the MCR and MCDR models when the number of labeler increased to 500 and 1,000."}, {"section_title": "CONCLUSION", "text": "We have studied the multi-labeler learning problem that constructs classifiers from crowdsourcing labels and proposed three novel and unique formulations that all form biconvex programs. By approximating the true labels with a weighted consensus of all labelers' opinions with the labeler reliabilities as the weights, we are able to modify the hinge loss function to become bi-affine with respect to the classifier parameters and the reliability factors of labelers. We employed three very general assumptions on the labeler reliability, including constant, class-dependent, and example-specific labeler reliability. The bi-convex programs can be effectively optimized by the widely-used alternating optimization algorithm, and outperform the state of the art in empirical tests.\nFuture extension of this work can examine the bi-convexity of the models more thoroughly, and explore some global optimization algorithms such as the one in [2] that can find a global minimizer for a bi-convex program although these algorithms are significantly more complex. It is also worthy examining the varying reliability scores estimated by the third model, which may prove potential utility in real-world applications, for example, to group the crowdsourcing labelers according to their labeling reliabilities and behaviours. The datasets used in our experiments are relatively small. For many large datasets having inconsistent labels collected from crowdsourcing platforms such as AMT, they provide no input features but raw data examples, such as plain texts or images. Extracting meaningful features (input variables) from those datasets needs significant efforts, which goes beyond our goal of study in this work. Moreover, many of these datasets may provide no ground truth that can be used in model evaluation. Our future work will also include searching for larger datasets that are suitable for objectively and systematicly testing the proposed models. "}]