[{"section_title": "Abstract", "text": "This paper describes a Software Tool for Automated MRI Post-processing (STAMP) of multiple types of brain MRIs on a workstation and for parallel processing on a supercomputer (STAMPS). This software tool enables the automation of nonlinear registration for a large image set and for multiple MR image types. The tool uses standard brain MRI post-processing tools (such as SPM, FSL, and HAMMER) for multiple MR image types in a pipeline fashion. It also contains novel MRI post-processing features. The STAMP image outputs can be used to perform brain analysis using Statistical Parametric Mapping (SPM) or single/multi image modality brain analysis using Support Vector Machines (SVMs). Since STAMPS is PBS-based, the supercomputer may be a multi-node computer cluster or one of the latest multi-core computers."}, {"section_title": "Introduction", "text": "Magnetic resonance imaging (MRI) has evolved as a superior tool to non-invasively study and monitor neurodegenerative diseases in-vivo; which is critical for developing therapies treating these diseases. This fact has led to the creation of large-scale, multi-center, neuroimaging initiatives such as the Alzheimer's Disease Neuroimaging Initiative (ADNI) [1] and the Open Access Series of Imaging Studies (OASIS) [2] . ADNI is a five year study of 200 elderly controls, 400 subjects with mild cognitive impairment, and 200 with Alzheimer's disease.\nOASIS contains over 400 MRIs of subjects age 18 to 96, some of which have mild cognitive impairment. Extraction of useful information in a timely manner from such large image sets demands computing resources and organized patient database management. Many MRI postprocessing tools (e.g. SPM [3] , FSL [4] , freesurfer [5] , HAMMER [6, 7] , ITK [8] ) are available for this purpose, but not all are designed for supercomputers 2 that drastically reduce processing time for large image sets. Also the listed tools do not perform all of the post-processing on all MRI types we discuss herein. Therefore, it is desirable to combine key functions of these tools into one image processing \"pipeline\" such that specific processing results are produced that are otherwise unattainable.\nWe present a software tool for automated post-processing of multiple types of brain MRIs on a workstation (STAMP) or on a supercomputer (STAMPS). The tool is designed to manage multiple types of image data using a few key attributes (e.g. patient ID, age) which a user can control in a central intuitive GUI independent of their values in image files. 3 The tool then processes these images in a pipeline, using linear registration and segmentation tools in FSL and SPM5/VBM5 [9,10], or nonlinear registration tools in HAMMER. The MR image types that can currently be processed by the STAMP pipeline are T 2 and maps, T 1 -and T 2 -weighted images, and all types of DTI images. Support for other image types may be added as needed. For some image types (e.g. T 2 , maps, and DTI images), custom STAMP tools were developed using ITK for nonlinear registration (HAMMER) and ROI statistical analysis. These registered images may be used to perform voxel-based statistical analysis or to perform \"machine learning\" experiments (e.g. with Support Vector Machines (SVMs) [11] ) which are capable of analyzing image types individually or jointly for biomarker discovery and validation.\nSince the nonlinear registration task motivated STAMP, here we provide an introduction of this task and the rationale for using it. Due to intra-and inter-person anatomic variations, nonlinear registration of brain MRIs, as opposed to linear (affine) registration, is considered essential for morphological analysis. We use the HAMMER method [6] for several reasons. First, the HAMMER tool [6, 7] is a freely available nonlinear brain registration method designed for high accuracy in anatomical correspondence. In this method, which is a hierarchical (coarse-to-fine) matching algorithm, the objective function (in the optimization algorithm) is successively approximated by lower-dimensional smooth functions constructed to have significantly fewer local minima. The method constructs them based on selecting driving anatomical features, represented as distinct \"attribute\" vectors, for the \"matching\". The aim is to highly reduce ambiguity in finding correspondence. Second, HAMMER registered our data well and it was stable and reasonably fast as a rigorous nonlinear registration method (i.e. approximately 2 hours per image). The third column of Fig. 6 illustrates how well HAMMER was able to squeeze oversized ventricles (shown in the second column) into the atlas used for registration. 4 Third, the HAMMER software generates a tissue (e.g. gray matter) density map named \"RAVENS\" map [12, 13, 14, 15] , with interesting properties for our image analyses. For example, by adjusting the density of a tissue whenever nonlinear registration expands or contracts the brain geometry, the RAVENS map preserves the total amount of tissue in any defined region, which sets it apart from density maps of other methods. Furthermore, a validation [12] supported that SPM voxel-based statistical analysis can be performed on these maps. The RAVENS maps can also be analyzed with machine-learning methods.\n2 In this paper \"supercomputer\" means a multi-node computer cluster using PBS or one of the latest multi-core computers using PBS. 3 The data management is based on uniquely identifying images, their types, and their relations (Section 3.3). 4 The subject used in the figures is a 79 year old male ALS subject chosen as a \"worst-case scenario\" registration example.\nSection 2 describes the MRI post-processing. Section 3 describes the system architecture, including samples of program usage. The paper concludes with Section 4, which discusses system requirements and program availability. Fig. 1 shows the current input image types for STAMP. These image types (T 1 -and T 2 -weighted image, T 2 map, map, DTI image) are each spatially in their own distinct \"subject space\", but here it suffices to identify them with a shared \"S\" tag (i.e. \"subject space\") as shown. STAMP outputs many image types. Among these, we first define some key ones below, and use Fig. 1 to group them spatially for clarity:"}, {"section_title": "MRI Post-processing", "text": ""}, {"section_title": "Overview", "text": "1. An image spatially normalized by deformable nonlinear registration using the HAMMER tool into an atlas space i.e. the \"Hammer space\" (\"H\"), identified as e.g. I T 1 ,H and I T 2 map,H .\n2. An image created by segmentation into numerous brain regions defined by an atlas, aka labeling. The labeling generates e.g. I T 1 ,labeled,S from I T 1 ,S .\nWe have developed a software library named L (i.e. Library), on which STAMP is based. L is in the tcl/tk language and contains a wide range of functions. Functions exist for controlling the invocation of external standard MRI tools used by STAMP (e.g. FSL, SPM5, HAMMER) and tools we developed for STAMP. Functions also exist for constructing and managing our in-memory-only database for uniquely identifying images and their relations during runtime."}, {"section_title": "3.", "text": "RAVENS map for each of GM (I RAVENS _GM,R ), WM (I RAVENS_WM,R ), ventricles (V) (I RAVENS_V,R ). 5\nThe \"A1\" tag in Fig. 1 indicates some output images are spatially in a standard atlas space we identify as \"Atlas1\", distinct from the atlas defined earlier for HAMMER use. By aligning all of its input image types into this standard A1 space (using rigid-body and affine transforms prior to HAMMER) STAMP ensures that the HAMMER registration will put all input image types into the same space. For Atlas1, we chose the Montreal Neurological Institute (MNI)/International Consortium for Brain Mapping (ICBM) 152 atlas supplied by SPM5 and resampled to 1 mm isotropic spacing, to ensure correct alignment of the origin at the anterior commissure (AC). The placement of the origin at the AC is required for successful brain segmentation using SPM5/VBM5. STAMP uses FSL FLIRT [16] for this linear registration and the steps are given in the following subsections.\nThe atlas for the HAMMER tool (i.e. \"Atlas2\") is supplied with this tool. It identifies 106 labeled brain regions, used for labeling. We flipped the atlas in the anterior-posterior direction to put it into the default transverse orientation for Analyze-format images."}, {"section_title": "Post-processing the T 1 -weighted images", "text": "We now discuss Fig. 2 which describes the details inside the STAMP box in Fig. 1 for the T 1 -weighted input. Since the processing for T 1 -weighted and T 2 -weighted images is identical, we will only discuss T 1 -weighted image as an example. The box places the T 1 -weighted image from S space into A1 space and then into H space. These three images are illustrated by the top row of the 4 \u00d7 3 layout described in Fig. 6 .\nAutomatic thresholding of the T 1 -weighted image is performed first. As performed in FSL BET [17] , a lower intensity threshold, t 2 , is chosen such that 2% of the voxel intensities fall below it. Then, an upper threshold, t 98 , is chosen such that 98% of the voxel intensities fall below it. Then, a rough brain/non-brain lower threshold is set to , and all voxel intensities below t are set to zero. In our experience this equation works well for images with adequate signal to noise ratio.\nAs shown, I T 1 ,A1 is created from I T 1 ,thresh, S by linear registration to Atlas1. Next, I T 1 ,A1 is tissue-segmented into GM, WM, and cerebrospinal fluid (CSF). Then, as required by HAMMER, if 2D slices (of this 3D image) are not 256 \u00d7 256, zero-padding is used to make them 256 \u00d7 256. Next, using HAMMER, CSF voxels in the ventricles are set to 50 in order to create I T 1 ,segGWCV,A1 , which is a segmented image with 150, 250, 10, and 50 for the GM, WM, CSF, and V tissues respectively. 6 For the tissue segmentation tool, the STAMP user can select between SPM5/VBM5, FSL, or SPM5/VBM5 with cortical thickness estimation. The selected tool also performs bias field correction, which we identify (after ensuring 256 \u00d7 256 slices) as I T 1 ,biascorr,A1 . If SPM5/VBM5 is selected, STAMP generates a brain-only (and biascorrected) T 1 -weighted image (I T 1 ,brainonly,A1 ) by masking this I T 1 ,biascorr,A1 with the brain-only I T 1 ,segGWCV,A1 . If instead FSL is selected, FSL BET generates the brain-only T 1 -weighted image and FSL FAST [18] performs the tissue segmentation and bias correction. Finally, if SPM5/VBM5 with cortical thickness estimation is selected, STAMP uses the GMonly image to generate an image of estimated cortical GM thickness distribution (I T 1 ,thick,A1 ) [19] .\nHaving generated from the T 1 -weighted image both its brain-only version in Atlas1 space (I T 1 ,brainonly,A1 ) -or estimated cortical thickness image in Atlas1 space (I T 1 ,thick,A1 ) -and its tissue-segmented image in Atlas1 space (I T 1 ,segGWCV,A1 ), the HAMMER tool can now be used. As shown, the HAMMER tool uses one or both of these images depending on the task. It uses both to generate I T 1 ,H but labeling and RAVENS generation do not use I T 1 ,brainonly,A1 as input. By definition, the voxel intensities of the RAVENS image set (i.e. the set of three types of RAVENS images) sum to the patient's segmented brain volume prior to the generation of the RAVENS image. The sum is on the order of 1 \u00d7 10 6 and varies across patients. To remove patient brain volume as a bias from RAVENS images for subsequent voxelbased analysis, STAMP provides an option for normalizing the RAVENS image set such that each patient would have the same sum.\nAfter registering an image by HAMMER to generate e.g. I T 1 ,H , STAMP has options to create additional output images from it. The image can be cropped (to remove non-brain background) to create e.g. I T 1 ,c,H from I T 1 ,H , which is then intensity-normalized to create e.g. I T 1 ,cn,H . Custom command-line tools built using ITK crop the image using the dimensions of a template image. For the intensity normalization, the image is thresholded by \u00b13\u03c3 of its voxel intensities, then multiplied by 32760/(imaximin), where imax is the maximum intensity and imin is the minimum intensity after thresholding, and then saved as a 16-bit signed integer image.\n2.3. Post-processing the DTI images, T 2 maps, and maps 2.3.1. Introduction-There are commonalities among the STAMP post-processing of DTI images, T 2 maps, and maps. First, placing one of these three into A1 space is performed differently than in the earlier T 1 -weighted case, as it is more important for these images to be aligned with the T 1 -weighted 7 image in A1 space rather than with only Atlas1 itself. How to achieve this alignment is different for DTI images than it is for the maps. However, a commonality of the two cases is that ultimately a linear (affine) transformation T S\u2212A1 (from S space to A1 space) is created via a registration to a T 1 -weighted image in A1 space (using FSL FLIRT) and applied to the S-space image (i.e. I DTI_*,S or I T 2 map,S or ) to place it into A1 space (thereby respectively generating I DTI_*,A1 or I T 2 map,A1 or , each of which is both in A1 space and aligned with the T 1 -weighted image).\nSecond, the STAMP post-processing for the above three types contains a large final identical segment. This segment is shown in Fig. 3 . Applying T S\u2212A1 (as described above) is its first step. The rest of this segment performs two tasks.\nThe first task is the creation of the HAMMER-labeled image in S space. This task is performed when T S\u2212A1 is inverted to obtain the transformation T A1\u2212S (from A1 space to S space) which is then applied to the previously generated I T 1 ,labeled,A1 to place it into S space (thereby generating I *,labeled,S ). Since STAMP relies on FSL FLIRT to perform these operations, the final image resolution, spacing, and slices of I *,labeled,S will match I *,S .\nThe second task is HAMMER registration which is performed in two steps: 1) The A1-space image (generated above, e.g. I DTI FA,A1 ) is easily masked with I T 1 ,segGWCV,A1 to generate the brain-only image in A1-space e.g. I DTI FA_brainonly,A1 .\n2) The resulting (A1-space and brainonly) image (e.g. I DTI_FA,brainonly,A1 ) goes under HAMMER registration, which is performed differently than in the earlier T 1 -weighted case. The deformation field file generated earlier by the HAMMER registration of the T 1 -weighted image in A1-space is now applied to I DTI_FA,brainonly,A1 to achieve the HAMMER registration, thereby generating I DTI_FA,H . This operation is made possible by the aforementioned custom ITK command-line programs developed for STAMP. Fig. 4 which describes the details inside the STAMP box in Fig. 1 when the input is a DTI image set. The approach taken here is to generate T S\u2212A1 (Sec. 2.3.1) as the linear (affine) transformation that would align the low-resolution DTI B0 image (I DTIB0,S ) (i.e. the input image) to the higher-quality 8 T 1 -weighted image I T 1 ,brainonly,A1 (i.e. the reference image) 9 . The DTI B0 image, which is a T 2 -weighted image, is chosen here because it is the most suitable DTI image type for linear registration to a T 1 -or T 2 -weighted image. The other DTI images (input to STAMP) highlight the white matter fibers and are therefore not suitable for linear registration to a T 2 -or T 1 -weighted image. Also, by using the DTI B0 image STAMP is not restricted to processing a particular DTI image type, such as FA."}, {"section_title": "Post-processing the DTI images-We now discuss", "text": "After linear registration to the higher-quality T 1 -weighted image, the rest of the images in the DTI image set, one at a time, are input along with T S\u2212A1 into STAMP (as shown in Fig. 3 ) to 7 For the DTI images, T 2 maps, and maps STAMP will automatically choose the T 2 -weighted image in A1 space for alignment if it is available, otherwise it will use the T 1 -weighted image in A1 space. 8 Higher quality means better tissue contrast and higher resolution. 9 Since the skull signal intensity in a typical DTI B0 image is usually on the level of the background noise or removed during DTI processing (prior to STAMP), the proper reference image to be used here is the skull-stripped T 1 -weighted image i.e. I T 1 ,brainonly,A1 . generate outputs as described by Sec. 2.3.1. For example, if the DTI image is DTI FA (I DTI_FA,S ), the output images will include I DTI_FA,A1 (which is both in A1 space and aligned with the T 1 -weighted image), the labeled image I DTI_FA,labeled,S , and the image I DTI_FA,H upon HAMMER registration."}, {"section_title": "2.3.3.", "text": "Post-processing the T 2 maps and maps-Processing of T 2 (or ) maps presents some special problems that alter the registration to A1 space as described for DTI images. Fig. 5 shows the flow diagram for these image types. As acquired in our laboratory, maps include only a part of the brain. In order to properly register these partial brain volume images to I T 1 ,A1 via FSL FLIRT linear registration, we use the higher-quality whole-brain image (i.e. I T 1 ,A1 ) as the \"input image\" instead of the \"reference image\". This generates a linear (affine) transformation, which STAMP inverts to obtain T S\u2212A1 (Sec. 2.3.1). Then, the T 2 (or ) map of partial brain volume in S space (i.e. I T 2 map,S or ), is input along with T S\u2212A1 into Fig. 3 to generate image outputs as described by Sec. 2.3.1. Sometimes the above \"reverse transform\" procedure is not sufficient to successfully register the whole brain image I T 1 ,A1 to the partial brain image I T 2 map,S (or ). In this case, STAMP provides an option that will create a weighting image from I T 1 ,segGWCV,A1 that doubles the weighting of the ventricles over the other brain tissues during registration and can be assigned as an input to FSL FLIRT. This option enables successful registration of I T 1 ,A1 to I T 2 map,S (or to )."}, {"section_title": "Summary statistics", "text": "STAMP also generates summary statistics for all of the supported image types using brain regions identified in Atlas2. Custom command-line tools were developed using ITK that take as input an image in A1 or S space (I *,A1 or I *,S ), its labeled version in the same space (I *,labeled,A1 or I *,labeled,S ) 10 , the brain regions' text descriptions and intensities (labels) in the labeled image, and outputs a statistics text file (i.e. a spreadsheet in comma separated value (CSV) format) containing statistics for all brain regions. A CSV file will be generated for each input image type. The chosen statistic varies depending on the input image type. If the input image is I T 1 ,segGWCV,A1 , the file will contain the brain region volumes as well as the whole brain volume (both in mm 3 ). If the input is I *,brainonly,A1 , the file will contain, for each brain region, the voxel frequency (n), the image intensity mean , an image intensity variance , 11 , the image intensity median, first quartile, third quartile, maximum, and minimum. Lastly, if the input image is I T 1 ,thick,A1 , the file will contain the average thickness for each brain region. Since STAMP is designed to handle large image sets, it also generates summary statistics (CSV) files that will combine the individual statistics based on brain region and image type. One summary file is generated for each brain region and contains all statistics for each input image of a given type."}, {"section_title": "Illustration of registration results", "text": "Fig . 6 shows three orthogonal views of (a) T 1 -weighted, (b) DTI FA, (c) map, and (d) T 2 map images in S space, A1 space, and H space for a 79 year old male subject. For the T1-weighted image, the rigid-body transform from S space to A1 space merely rotates and translates the image. In this case, each image in A1 space has the same shape and size as the image in S space. For the other three image types shown in the Figure, the A1 image is a result 10 The labeling is performed in A1 space for T 1 -and T 2 -weighted images and in S space for all the others. 11 Note the division is by n, not by n \u2212 1.\nof alignment to the A1 T1-weighted via an affine (rather than rigid-body) transform wherein scaling and shearing in addition to rotation and translation are applied. Each image in A1 space no longer has the same shape and size as the image in S space. The nonlinear registration to H space alters the shape and size of A1-space images by nonlinear deformations. Fig. 7 (a-c) shows the images of (a) DTI FA in H space, (b) map in H space, and (c) T 2 map in H space overlaid on the T 1 -weighted image in H-space of the same subject in Fig. 6 . The lookup table used for the overlays maps is blue to yellow for the minimum to maximum intensity. This figure demonstrates the excellent registration between the images after nonlinear registration to the HAMMER atlas. For the DTI FA image in Fig. 7(a) , the low FA values in the cortex and mid-brain GM structures show up as blue and overlap well with the dark grayscale intensities of GM in the T 1 -weighted image. As expected, the high FA values in the white matter appear as red and yellow over the light grayscale intensities of white matter in the T 1 -weighted image. Although not quite as obvious as the DTI FA image, the and T 2 maps in Fig. 7(b) and Fig. 7 (c) are also well aligned with the T 1 -weighted image. As GM/WM contrast is small in the and T 2 maps and their values are significantly lower than that of CSF, the overlays appear mostly blue on the T 1 -weighted image overlay. However, examining the ventricles in yellow and the and T 2 of CSF shows that they co-registered well. Fig. 8 illustrates the qualities of both nonlinear (HAMMER) and linear registration (FSL FLIRT) in STAMP using T 1 -weighted images acquired from two subjects with vastly different brain anatomy. The subjects used for the overlay are the same 79 year old male and a 37 year old male. The same overlay color lookup table is used in Fig. 7 . In this extreme case, even after considerable shrinkage of the ventricles, as shown by the outlined regions in A1 and H space for the T 1 -weighted image in Fig. 6 , registration errors still exist in the areas of the ventricles outlined in green in the axial and coronal views of the nonlinearly registered example in Fig.  7 . Also, as outlined in the coronal view, some misregistration exists in the area of the cortex. However, as seen in the figure, the registration error is much larger in the linearly registered case."}, {"section_title": "Architecture", "text": ""}, {"section_title": "Parallel Processing", "text": "To simultaneously process multiple input images, by distributing this task to multiple processors of a supercomputer, we developed a parallel processing version of STAMP, named STAMPS. Since it typically takes over 2 hours (for FSL, SPM5, HAMMER combined) to process just one input image to generate output images in H or R space, the distributed computing provided by STAMPS to drastically reduce total processing time for the image set is very significant. STAMPS invokes the PBS batch queueing system. It automatically creates PBS job scripts and submits them to PBS, using automatic decision making based on its monitoring of node availability and of the processing status of individual input images. The following pseudo-code demonstrates this process:\nfind total available free nodes using 'pbsnodes -a';\nforeach image in data-base do "}, {"section_title": "Data File I/O and Data Object Management", "text": "During runtime, STAMP populates a database-like object instance, named db, storing key attributes (e.g. demographical and scan identification) for identifying images during the processing flow. This instance is not stored in a file and resides in memory only. The Analyze file format (i.e. pair of files filename.img, and filename.hdr), currently required for input image files, is limited as it cannot store some of these attributes. Thus, for the program to construct and use the db, it must read such attributes from other input data sources. For the program's startup task of reading all input data sources to initially populate the db, the user can select one among distinct modes that allow reading and interpreting different sources. The selected mode also serves as a program operation mode, as there exists a Basic Mode that forgoes various STAMP processing capabilities for the sake of enabling the user to input only image files (and no other input sources). More specifically, since the limited Analyze format by default lacks provisions for identifying relationships among different MR image types (for a given person), this mode cannot and does not properly construct the db which is essential for full STAMP processing capabilities. Before using the Enhanced Mode, for each input image (filename.img) the STAMP user is required to create a text file (filename.csv) in comma separated value (CSV) format with values of a small set of (8) STAMP-required attributes: Patient ID, Patient Age, Patient Sex, Patient Group 12 , Study ID, Image Type, Sequence Name, Acquisition Date. The CSV file creation task is convenient and quick using the CSV Writer GUI in STAMP, as the user can specify an attribute value and assign it to a (user-selected) group of image files in one step. This is described by Fig. 9 . The LONI Mode and the OASIS Mode are STAMP operation modes designed to interpret the customized data bundles of these two data providers. 13 "}, {"section_title": "System Monitoring and Log Files", "text": "STAMP and STAMPS create log text files of many types. For example, there are log files for each top-level UNIX shell and tcl script (Sec. 3.5) and separate log files for the post-processing on the separate supercomputer \"nodes\". The logs indicate in detail the invocation of L functions and the tools (e.g. FSL, SPM5, HAMMER), with their input parameter values and date and time stamps."}, {"section_title": "Samples of Program Runs", "text": "To run STAMPS, the user sets a few L UNIX environment variables, prepares a text file of post-processing configuration parameters (pipeline.config) and a text file for the \"operation mode\" (Sec. 3.3) e.g. enhanced.config, and passes their directory to a UNIX shell script: pbs pipeline all.sh /home/foo/config_files Likewise, to run STAMP, the user invokes a similar UNIX shell script. In turn, the shell script executes a tcl script for invoking various L functions."}, {"section_title": "System Requirements and Availability", "text": "STAMP and STAMPS are implemented as described and functioning. Regarding their use by others, we believe they are currently insufficiently documented. To receive updates on their availability, contact us.\nSTAMP and STAMPS can currently run on Linux only. Their architecture is readily suitable for Windows and Mac as it is written in tcl/tk. Moreover, since STAMPS uses PBS, the use of STAMPS on PBS-based non-Linux supercomputers is a worthwhile consideration. However, we note that not all tools in STAMP from external sources, such as HAMMER, are available for all major operating systems."}, {"section_title": "Discussion", "text": "The previous sections described STAMP and STAMPS. In this section we would like to briefly discuss directions for future work."}, {"section_title": "Longitudinal RAVENS Analysis", "text": "One of the STAMP-required attributes is Acquisition Date. Currently STAMP or STAMPS is not capable of using this field to process repeated scans of the same subject for longitudinal studies in a meaningful way. An example of where this might be advantageous is a longitudinal RAVENS analysis. As described previously, by adjusting the density of a tissue whenever nonlinear registration expands or contracts the brain geometry, the RAVENS map preserves the total amount of tissue in any defined region. Therefore, the target atlas used during nonlinear registration determines whether a given region expands or contracts during RAVENS generation. Then, for longitudinal RAVENS analysis, ideally the target atlas (Atlas2) for the repeated scans should be the baseline scan. In order to perform subsequent group analysis using SPM or SVM, the baseline scan for each subject would first be registered to a standard atlas using HAMMER (thereby generating a HAMMER deformation field in H space). Afterwards to generate RAVENS maps, all of the images for a given subject, including the baseline scan, are fed through STAMP using the baseline image as the atlas. Finally, the RAVENS maps are registered to the atlas for group analysis by applying the HAMMER deformation field generated for a subject baseline image to all of the longitudinal RAVENS maps generated for that subject. At the moment these lengthy operations must be performed manually in STAMP and STAMPS, but could be incorporated into future versions with minimal work."}, {"section_title": "Custom Population-based Atlas Creation", "text": "Within the field of whole-brain voxel-based group analysis, it is common to create population based atlases to reduce registration errors due to using an atlas that is potentially very different anatomically from the subject population. In the case of STAMP and STAMPS, its reliance on HAMMER, which uses a segmented atlas, complicates the process of creating a population based atlas. However, a simple technique for creating such an atlas can be performed using SPM5/VBM5. SPM5/VBM5 provides a \"labeling\" function that will output a hard-labeled segmented brain image using the GM, WM, and CSF probability images as input. To create a custom population-based atlas, SPM5/VBM5 is first used to create registered GM, WM, and CSF probability images for all of the subjects in the patient population. The registration atlas could be the atlas supplied with SPM5 or any other atlas. Then the registered probability images are averaged across the group, such that one average registered GM, WM, and CSF probability image exists. Next SPM5/VBM5 is used to create the hard-labeled, average, registered image. Finally, since HAMMER expects the segmented labels to be 150, 250, 10, and 50 for the GM, WM, CSF, and V tissues respectively, HAMMER must be used to relabel the image as shown in Fig. 2 and discussed in Sec. 2.2. Fig. 10 shows examples of the average GM, WM, and CSF probability images and the final labeled atlas. Currently, STAMP or STAMPS does not automate this task. Again, future versions could provide this functionality with minimal work."}, {"section_title": "Novel Registration Techniques", "text": "Finally, STAMP and STAMPS relies on HAMMER and FSL for the various registration tasks. Future versions might provide options for using other novel registration techniques not currently supported. For example, demons non-linear registration [20] or perhaps using a DTI based [21] registration technique to drive the registration. Incorporating new registration techniques would require more work and testing than the two previously mentioned ideas, but is a relatively simple task given the pipeline nature of STAMP and STAMPS. Overall flow diagram showing how STAMP takes the various input image types and generates the labeled image in subject space, normalized image in HAMMER space, and the RAVENS image. Post-processing in STAMP for T 1 -weighted images. The final identical segment of the STAMP post-processing for DTI images, T 2 maps, and maps. Post-processing in STAMP for DTI images. Post-processing in STAMP for T 2 maps and maps. For the same subject shown in Fig. 6 , the (a) DTI FA H space image, (b) map H space image, and (c) T 2 map H space image are overlaid on the T 1 -weighted image in H-space. The color lookup table used for all the maps consist of a gradient from blue to yellow, with red in the middle. Coronal (top) and axial (bottom) views of the 79 year old male T 1 -weighted image with enlarged ventricles shown in Fig. 6 and Fig. 7 is overlaid on a 37 year old male T 1 -weighted image without enlarged ventricles. The overlays are shown for both nonlinear (HAMMER) and linear (FSL FLIRT) registration to the HAMMER atlas. The circled regions highlight areas of poor registration performance. The color lookup table used for the overlay is a gradient from blue to yellow, with red in the middle. CSV Writer in STAMP, used with STAMP's Enhanced Mode. Into the middle browser, the user accumulates content for multiple CSV files to be created (where each item (line) in that browser will accumulate content for one CSV file) and then creates all files via a single button press. The accumulation step is convenient and quick, as each Select button and each Apply button (for a particular attribute e.g. Patient ID) can be used (when the attribute value is entered next to it) to, respectively, automatically highlight (Select) any and all existing items in the browser holding a matching attribute value (i.e. any and all files to be assigned that value) and insert (Apply) a value to all highlighted items at once, thereby enabling the user to assign the same e.g. Patient ID to many images at once. This way, the user does not have to specify the content for the CSV files laboriously one file at a time. Coronal views of average registered GM, WM, and CSF probability images and final labeled atlas for 46 subjects between 37 and 81 years of age."}]