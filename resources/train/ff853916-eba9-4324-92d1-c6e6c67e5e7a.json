[{"section_title": "Abstract", "text": "Initiative (ADNI) database (adni.loni.usc.edu). As such, the investigator within the ADNI contributed to the design and implementation of ADNI and/or provided data but did not participate in analysis or writing of this report. A complete listing of ADNI investigators can be found at:\nhttp://adni.loni.usc.edu/wpcontent /uploads/how to apply/ADNI Acknowledgement List.pdf significant improvement in classification output over other studies, resulted in high and reproducible accuracy rates of 99.9% and 98.84% for the fMRI and MRI pipelines, respectively. Additionally, for clinical purposes, subject-level classification was performed, resulting in an average accuracy rate of 94.32% and 97.88% for the fMRI and MRI pipelines, respectively. Finally, a decision making algorithm designed for the subject-level classification improved the rate to 97.77% for fMRI and 100% for MRI pipelines.\nTo extract patterns from neuroimaging data, various statistical methods and machine learning algorithms have been explored for the diagnosis of Alzheimer's disease among older adults in both clinical and research applications; however, distinguishing between Alzheimer's and healthy brain data has been challenging in older adults (age > 75) due to highly similar patterns of brain atrophy and image intensities. Recently, cutting-edge deep learning technologies have rapidly expanded into numerous fields, including medical image analysis. This paper outlines state-of-the-art deep learning-based pipelines employed to distinguish Alzheimer's magnetic resonance imaging (MRI) and functional MRI (fMRI) from normal healthy control data for a given age group. Using these pipelines, which were executed on a GPU-based high-performance computing platform, the data were strictly and carefully preprocessed. Next, scale-and shift-invariant low-to high-level features were obtained from a high volume of training images using convolutional neural network (CNN) architecture. In this study, fMRI data were used for the first time in deep learning applications for the purposes of medical image analysis and Alzheimer's disease prediction. These proposed and implemented pipelines, which demonstrate a 2 Introduction"}, {"section_title": "Alzheimer's Disease", "text": "Alzheimer's disease (AD) is an irreversible, progressive neurological brain disorder and multifaceted disease that slowly destroys brain cells, causing memory and thinking skill losses, and ultimately loss of the ability to carry out even the simplest tasks. The cognitive decline caused by this disorder ultimately leads to dementia. For instance, the disease begins with mild deterioration and grows progressively worse as a neurodegenerative type of dementia. Diagnosing Alzheimer's disease requires very careful medical assessment, including patient history, a mini mental state examination (MMSE), and physical and neurobiological exams [1] [2] . In addition to these evaluations, structural magnetic resonance imaging and resting state functional magnetic resonance imaging (rs-fMRI) offer non-invasive methods of studying the structure of the brain, functional brain activity, and changes in the brain. During scanning using both structural (anatomical) and rs-fMRI techniques, patients remain prone on the MRI table and do not perform any tasks. This allows data acquisition to occur without any effects from a particular task on functional activity in the brain [3] [4] [5] . Alzheimer's disease causes shrinkage of the hippocampus and cerebral cortex and enlargement of ventricles in the brain. The level of these effects is dependent upon the stage of disease progression. In the advanced stage of AD, severe shrinkage of the hippocampus and cerebral cortex, as well as significantly enlarged ventricles, can easily be recognized in MR images. This damage affects those brain regions and networks related to thinking, remembering (especially short-term memory), planning and judgment. Since brain cells in the damaged regions have degenerated, MR image (or signal) intensities are low in both MRI and rs-fMRI techniques [6] [7] [8] . However, some of the signs found in the AD imaging data are also identified in normal aging imaging data. Identifying the visual distinction between AD data and images of older subjects with normal aging effects requires extensive knowledge and experience, which must then be combined with additional clinical results in order to accurately classify the data (i.e., MMSE) [1] . Development of an assistive tool or algorithm to classify MR-based imaging data, such as structural MRI and rs-fMRI data, and, more importantly, to distinguish brain disorder data from healthy subjects, has always been of interest to clinicians [9] . A robust machine learning algorithm such as Deep Learning, which is able to classify Alzheimer's disease, will assist scientists and clinicians in diagnosing this brain disorder and will also aid in the accurate and timely diagnosis of Alzheimer's patients [10] ."}, {"section_title": "Deep Learning", "text": "Hierarchical or structured deep learning is a modern branch of machine learning that was inspired by the human brain. This technique has been developed based upon complicated algorithms that model high-level features and extract those abstractions from data by using similar neural network architecture that is actually much more complicated. Neuroscientists have discovered that the \"neocortex,\" which is a part of the cerebral cortex concerned with sight and hearing in mammals, processes sensory signals by propagating them through a complex hierarchy over time. This served as the primary motivation for the development of deep machine learning that focuses on computational models for information representation which exhibits characteristics similar to those of the neocortex [11] [12] [13] .\nConvolutional neural networks (CNNs) that are inspired by the human visual system are similar to classic neural networks. This architecture has been specifically designed based on the explicit assumption that raw data are comprised of two-dimensional images that enable certain properties to be encoded while also reducing the amount of hyper parameters. The topology of CNNs utilizes spatial relationships to reduce the number of parameters that must be learned, thus improving upon general feed-forward backpropagation training [14] [15] . Equation 1 demonstrates how the gradient component for a given weight is calculated in the backpropagation step, where E is error function, y is the neuron N i,j , x is the input, l represents layer numbers, w is filter weight with a and b indices, N is the number of neurons in a given layer, and m is the filter size. In CNNs, small portions of the image (called local receptive fields) are treated as inputs to the lowest layer of the hierarchical structure. One of the most important features of CNNs is that their complex architecture provides a level of invariance to shift, scale and rotation, as the local receptive field allows the neurons or processing units access to elementary features, such as oriented edges or corners. This network is primarily comprised of neurons having learnable weights and biases, forming the convolutional layer. It also includes other network structures, such as a pooling layer, a normalization layer and a fully connected layer. As briefly mentioned above, the convolutional layer, or conv layer, computes the output of neurons that are connected to local regions in the input, each computing a dot product between its weight and the region it is connected to in the input volume. The pooling layer, also known as the pool layer, performs a downsampling operation along the spatial dimensions. The normalization layer, also known as the rectified linear units (ReLU) layer, applies an elementwise activation function, such as max (0, x) thresholding at zero. This layer does not change the size of the image volume [11] [12] [16] . The fully connected (FC) layer computes the class scores, resulting in the volume of the number of classes. As with ordinary neural networks, and as the name implies, each neuron in this layer is connected to all of the numbers in the previous volume [12] [17] . The convolutional layer plays an important role in CNN architecture and is the core building block in this network. The conv layer's parameters consist of a set of learnable filters. Every filter is spatially small but extends through the full depth of the input volume. During the forward pass, each filter is convolved across the width and height of the input volume, producing a 2D activation map of that filter. During this convolving, the network learns of filters that activate when they see some specific type of feature at some spatial position in the input. Next, these activation maps are stacked for all filters along the depth dimension, which forms the full output volume. Every entry in the output volume can thus also be interpreted as an output from a neuron that only examines a small region in the input and shares parameters with neurons in the same activation map [12] [18] . A pooling layer is usually inserted between successive conv layers in CNN architecture. Its function is to reduce (down sample) the spatial size of the representation in order to minimize network hyper parameters, and hence also to control overfitting. The pooling layer operates independently on every depth slice of the input and resizes it spatially using the max operation [11] [12]\n[16] [17] [18] . In convolutional neural network architecture, the conv layer can accept any image (volume) of size 1 \u00d7 1 \u00d7 1 that also requires four hyper parameters, which are , number of filters;\n, their spatial extent; , the size of stride; and , the amount of zero padding. The conv layer outputs the new image, whose dimensions are 2 \u00d7 2 \u00d7 2 , calculated as Equation 3 below:"}, {"section_title": "Equation 3: An understanding of how the conv layer produces new output images is important to realize the effect of filters and other operators, such as stride (S), on input images.", "text": "LeNet-5 was first designed by Y. LeCun et al. [11] . This architecture successfully classified digits and was applied to hand-written check numbers. The application of this fundamental but deep network architecture expanded into more complicated problems by adjusting the network hyper parameters.\nLeNet-5 architecture, which extracts low-to mid-level features, includes two conv layers, two pooling layers, and two fully connected layers, as shown in Figure 1 . More complex CNN architecture was developed to recognize numerous objects derived from high volume data, including AlexNet (ImageNet) [19] , ZF Net [20] , GoogleNet [17] , VGGNet [21] and ResNet [22] .\nGoogleNet, which was developed by Szegedy et al. [17] , is a successful network that is broadly used for object recognition and classification. This architecture is comprised of a deep, 22-layer network based on a modern design module called Inception. One of the fundamental approaches to improving the accuracy of CNN architecture is to increase the size of layers. However, this straightforward solution causes two major issues. First, a large number of hyper parameters requires more training data and may also result in overfitting, especially in the case of limited training data. On the other hand, uniform increases in network size dramatically increase interactions with computational resources, which affect the timing performance and the cost of providing infrastructure. One of the optimized solutions for both problems would be the development of a sparsely connected architecture rather than a fully connected network. Strict mathematical proofs demonstrate that the well-known Hebbian principle of neurons firing and wiring together created the Inception architecture of GoogleNet [17] . The Inception module of GoogleNet, as shown in Figure 2 , is developed by discovering the optimal local sparse structure to construct convolutional blocks. Inception architecture allows for a significant increase in the number of units at each layer, while computational complexity remains under control at later stages, which is achieved through global dimensionality reduction prior to costly convolutions with larger patch sizes. "}, {"section_title": "Data Acquisition", "text": "In this study, two subsets of the ADNI database (http://adni.loni.usc.edu/) were used to train and validate convolutional neural network classifiers. The first subset included 144 subjects who were scanned for resting-state functional magnetic resonance imaging (rs-fMRI) studies. In this dataset, 52 Alzheimer's patients and 92 healthy control subjects were recruited (age group > 75). The second dataset included 302 subjects whose structural magnetic resonance imaging data (MRI) were acquired (age group > 75). This group included 211 Alzheimer's patients and 91 healthy control subjects. Certain subjects were scanned at different points in time, and their imaging data were separately considered in this work. Table 1 presents the demographic information for both subsets, including mini mental state examination (MMSE) scores. "}, {"section_title": "Related Work", "text": "Changes in brain structure and function caused by Alzheimer's disease have proved of great interest to numerous scientists and research groups. In diagnostic imaging in particular, classification and predictive modeling of the stages of Alzheimer's have been broadly investigated. Suk et al. [24] [25] [26] developed a deep learning-based method to classify AD magnetic current imaging (MCI) and MCI-converter structural MRI and PET data, achieving accuracy rates of 95.9%, 85.0% and 75.8% for the mentioned classes, respectively. In their approach, Suk et al. developed an auto-encoder network to extract low-to mid-level features from images. Next, classification was performed using multi-task and multi-kernel Support Vector Machine (SVM) learning methods. This pipeline was improved by using more complicated SVM kernels and multimodal MRI/PET data. However, the best accuracy rate for Suk et al.\nremained unchanged [27] . Payan et al. [28] of Imperial College London designed a predictive algorithm to distinguish AD MCI from normal healthy control subjects' imaging. In this study, an auto-encoder with 3D convolutional neural network architecture was utilized. Payan et al. obtained an accuracy rate of 95.39% in distinguishing AD from NC subjects. The research group also tested a 2D CNN architecture, and the reported accuracy rate was nearly identical in terms of value. Additionally, a multimodal neuroimaging feature extraction pipeline for multiclass AD diagnosis was developed by Liu et al. [29] .\nThis deep-learning framework was developed using a zero-masking strategy to preserve all possible information encoded in imaging data. High-level features were extracted using stacked auto-encoder (SAE) networks, and classification was performed using SVM against multimodal and multiclass MR/PET data. The highest accuracy rate achieved in that study was 86.86%. Aversen et al. [30] , Liu et al.\n[ 31] , Siqi et al. [32] , Brosch et al. [33] , Rampasek et al. [34] , De Brebisson et al. [35] and Ijjina et al. [36] also demonstrated the application of deep learning in automatic classification of Alzheimer's disease from structural MRI, where AD, MCI and NC data were classified. "}, {"section_title": "Methods", "text": "Classification of Alzheimer's disease images and normal, healthy images required several steps, from preprocessing to recognition, which resulted in the development of an end-to-end pipeline. Three major modules formed this recognition pipeline: a) preprocessing b) data conversion; and c) classification, respectively. Two different approaches were used in the preprocessing module, as preprocessing of 4D rs-fMRI and 3D structural MRI data required different methodologies, which will be explained later in this paper. After the preprocessing steps, the data were converted from medical imaging to a lossless Portable Network Graphics (PNG) format to input into the deep learning-based classifier. Finally, the CNN-based architecture receiving images in its input layer was trained and tested (validated) using 75% and 25% of the dataset, respectively. In practice, two different pipelines were developed, each of which was different in terms of preprocessing but similar in terms of data conversion and classification steps, as demonstrated in Figure 3 . In the preprocessing step, two different submodules were developed for rs-fMRI and structural data. Next, the lossless image conversion module created PNG images from medical imaging data using the algorithm described in the following section of this paper. The final step was to recognize AD from NC samples using CNN models, which was performed by training and testing models using 75% and 25% of the samples, respectively."}, {"section_title": "rs-fMRI Data Preprocessing", "text": "The raw data in DICOM format for both the Alzheimer's (AD) group and the normal control (NC) group were converted to NII format (Neuroimaging Informatics Technology Initiative -NIfTI) using the (structural T1) scan using affine linear transformation with seven degrees of freedom (7 DOF).\nSubsequently, the registered images were aligned to the MNI152 standard space (average T1 brain image constructed from 152 normal subjects at the Montreal Neurological Institute) using affine linear registration with 12 DOF followed by 4 mm resampling, which resulted in 45x54x45 images per time course."}, {"section_title": "Structural MRI Data Preprocessing", "text": "The raw data of structural MRI scans for both the AD and the NC groups were provided in NII format in the ADNI database. First, all non-brain tissues were removed from images using Brain Extraction Tool FSL-BET [43] by optimizing the fractional intensity threshold and reducing image bias and residual neck voxels. A study-specific grey matter template was then created using the FSL-VBM library and relevant protocol, found at http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSLVBM [45] . In this step, all brain-extracted images were segmented to grey matter (GM), white matter (WM) and cerebrospinal fluid (CSF). GM images were selected and registered to the GM ICBM-152 standard template using linear affine transformation. The registered images were concatenated and averaged and were then flipped along the xaxis, and the two mirror images were then re-averaged to obtain a first-pass, study-specific affine GM template. Second, the GM images were re-registered to this affine GM template using non-linear registration, concatenated into a 4D image which was then averaged and flipped along the x-axis. Both mirror images were then averaged to create the final symmetric, study-specific \"non-linear\" GM template at 2x2x2 mm 3 would improve by varying the spatial smoothing kernels. The MRI preprocessing module was applied to AD and NC data and produced two sets of four 4D images, which were called Structural MRI 0fully preprocessed without smoothingas well as three fully preprocessed and smoothed datasets called Structural MRI 2, 3, 4, which were used in subsequent classification steps."}, {"section_title": "Results and Discussion", "text": ""}, {"section_title": "rs-fMRI Pipeline", "text": "The preprocessed rs-fMRI time series data were first loaded into memory using neuroimaging package Nibabel (http://nipy.org/nibabel/) and were then decomposed into 2D (x,y) matrices along z and time (t) axes. Next, the 2D matrices were converted to lossless PNG format using the Python OpenCV Where x, y and z are spatial dimensions (from 1 to X, Y, Z, respectively), t is a time point of a given fMRI time course with T points, S z,t (x, y) is a given slice with a dimension of (x, y) for the position of (z, t) and I z,t represent the intensity function of S z,t (x, y). PNG represents the lossless PNG transformation function.\nIn the data conversion step, the 4D time courses of subjects were randomly shuffled, and five random datasets were created in order to repeat training and testing of the CNN classifier (fivefold crossvalidation against all of the data). The random datasets were labeled for binary classification, and 75% of the images were assigned to the training dataset, while the remaining 25% were used for testing purposes.\nThe training and testing images were resized to 28x28 pixels and were then converted to the Lightning Memory-Mapped Database (LMDB) for high throughput for the Caffe Deep Learning platform [12] used for this classification experiment. The adopted LeNet architecture was adjusted for 30 epochs and initialized for Stochastic Gradient Descent with gamma = 0.1, momentum = 0.9, learning rate = 0.01, weight_decay = 0.005, and the step learning rate policy dropped the learning rate in steps by a factor of gamma every stepsize iteration. The mean of images was calculated and subtracted from each image.\nTraining and testing of Caffe models were performed and were repeated five times on the Amazon AWS Linux G2.8xlarge, including four high-performance NVIDIA GPUs, each with 1,536 CUDA cores and 4GB of video memory and 32 High Frequency Intel Xeon E5-2670 (Sandy Bridge) vCPUs with 60 GB memory overall. An average accuracy rate of 99.9986% was obtained for five randomly shuffled datasets using the adopted LeNet architecture shown in Table 3 . Alternatively, the first set of five randomly shuffled datasets was resized to 256x256 and was then converted to LMDB format. The adopted GoogleNet was adjusted for 30 epochs and initialized with the same parameters mentioned above, and the experiment was performed on the same GPU server. An accuracy testing rate of 100%, as reported in the Caffe log file, was achieved (in practice, Caffe rounded the accuracy up after the seventh decimal), as shown in Table 3 . A very high level of accuracy of testing rs-fMRI data was obtained from both of the adopted LeNet and GoogleNet models. During the training and testing processes, the loss of training, loss of testing and accuracy of testing data were monitored. In Figure 4 , the accuracy of testing and the loss of testing of the first randomly shuffled dataset are presented for the adopted LeNet and GoogleNet models, respectively. To confirm the reproducibility of the results, the entire process described above was repeated on the same server using NVIDIA DIGITS Caffe (the Deep Learning GPU Training System) and\nthe identical results were replicated. "}, {"section_title": "Structural MRI Pipeline", "text": "The preprocessed MRI data were then loaded into memory using a similar approach to the fMRI pipeline and were converted from NII to lossless PNG format using Nibabel and OpenCV, which created two groups (AD and NC) \u00d7 four preprocessed datasets (MRI 0,2,3,4). Additionally, the slices with zero mean pixels were removed from the data. The conversion criteria are similar to Equation 4 but without removing any slice from the end of 3D image and represents the subject number in the stack of structural MRI data. This step produced a total number of 62,335 images, with 52,507 belonging to the AD group and the remaining 9,828 belonging to the NC group per dataset. The data were next converted to the LMDB format and resized to 28x28 pixels. The adopted LeNet model was set for 30 epochs and initiated for Stochastic Gradient Descent with gamma = 0.1, momentum = 0.9, base learning rate = 0.01, weight_decay = 0.0005, and a step learning rate policy dropping the learning rate in steps by a factor of gamma every stepsize iteration. Next, the model was trained and tested by 75% and 25% of the data for four different datasets. The training and testing processes were repeated five times on Amazon AWS Linux G2.8xlarge to ensure the robustness of the network and achieved accuracy. The average of accuracies was obtained for each experiment separately, as shown in Table 3 . The results demonstrate that a high level of accuracy was achieved in all of the experiments, with the highest accuracy rate of 98.79% achieved for the structural MRI dataset, which was spatially smoothed by sigma = 3 mm. In the second run, the adopted GoogleNet model was selected for binary classification. In this experiment, the preprocessed datasets were converted to LMDB format and resized to 256x256. The model was adjusted for 30 epochs using Stochastic Gradient Descent with gamma = 0.1, momentum = 0.9, base learning rate = 0.01, weight_decay = 0.0005, and a step learning rate policy. The GoogleNet model resulted in a higher level of accuracy than the LeNet model, with the highest overall accuracy rate of 98.8431% achieved for MRI 3 (smoothed by sigma = 3mm). However, the accuracy rate of the unsmoothed dataset (MRI 0) reached 84.5043%, which was lower than the similar experiment with the LeNet model. This result may demonstrate the negative effect of interpolation on unsmoothed data, which may in turn strengthen the concept of spatial smoothing in MRI data analysis.\nIn practice, most classification questions address imbalanced data, which refers to a classification problem in which the data are not represented equally and the ratio of data may exceed 4 to 1 in binary classification. In the MR analyses performed in this study, the ratio of AD to NC images used for training the CNN classifier was around 5 to 1. To validate the accuracy of the models developed, a new set of training and testing was performed by randomly selecting and decreasing the number of AD images to 10,722 for training, while the same number of images -9,828was used for the NC group. In the balanced data experiment, the adopted LeNet model was adjusted for 30 epochs using the same parameters mentioned above and was trained for four MRI datasets. In Table 3 , the new results are identified with labels beginning with the B. prefix (Balanced). The highest accuracy rate obtained from the balanced data experiment only decreased around 1% (B. Structural MRI 3 = 97.81%) compared to the same datasets in the original training. This comparison demonstrates that the new results were highly correlated to the initial results, confirming that even a precipitous decrease in the data ratio from 5:1 to 1:1 had no impact on classification accuracy, which validated the robustness of the trained models in the original MRI classification. "}, {"section_title": "3: The accuracy of testing datasets is demonstrated below. As shown, a very high level of accuracy in testing datasets was achieved in both fMRI and MRI modalities in all of the runs. The experiment of the cells with asterisks * was", "text": "not required in this study. Therefore, no value was assigned. The datasets used for testing balanced data begin with the prefix B. Abbreviation: MRI 0, the structural MRI dataset without spatial smoothing. MRI 2,3,4 are the datasets spatially smoothed by Gaussian kernel sigma = 2,3 and 4 mm. Differentiation between subjects with Alzheimer's disease and normal healthy control subjects (older adults) requires solid preprocessing and feature learning, which reveal functional and structural dissimilarities between Alzheimer's damage and routine effects of age on the brain. In this study, two robust pipelines were designed and implemented that were capable of producing consistent and reproducible results. In the first block of the pipelines, extensive data preprocessing was performed against fMRI and MRI data, which removed potential noise and artefacts from the data. Next, a convolutional layer of CNN architecture consisting of a set of learnable filters, and which also serves as a shift and scale invariant operator, extracted low-to mid-level features (as well as high-level features in GoogleNet). In the fMRI pipeline, both adopted LeNet and GoogleNet architecture were trained and tested by a massive number of images created from 4D fMRI time series. Furthermore, removal of nonfunctional brain images from data improved the accuracy of recognition when compared to previous experience [46] . In the MRI pipeline, four sets of images (smoothed with different kernels) were used to train and test the CNN classifier to ensure that the best preprocessed data were employed to achieve the most accurate trained model. The results demonstrate that spatial smoothing with an optimal kernel size improves classification accuracy ( Figure 6 ). Certain differences in image intensity (Figure 7 ), brain size of AD and NC subjects, and lack of signals in brain regions of AD samples, such as the frontal lobe, are strong evidence in support of the success of the pipelines. A common strategy employed is to visualize the weights of filters to interpret the conv layer results."}, {"section_title": "Accuracy of", "text": "These are usually most interpretable on the first conv layer, which directly examines the raw pixel data, but it is also possible to find the filter weights deeper in the network. In a well-trained network, smooth filters without noisy patterns are usually discovered. A smooth pattern without noise is an indicator that the training process is sufficiently long, and likely no overfitting occurred. In addition, visualization of the activation of the network's features is a helpful technique to explore training progress. In deeper layers, the features become more sparse and localized, and visualization helps to explore any potential dead filters (all zero features for many inputs). Filters and features of the first layer for a given fMRI and MRI trained LeNet model were visualized using an Alzheimer's brain and a normal control brain. Figure 8 and features of 24x24 pixels in Figure 10 and Figure 11 reveal various regions of the brain that were activated in AD and NC samples. "}, {"section_title": "Subject-level recognition", "text": "To expand the application for distinguishing Alzheimer's subjects from normal healthy brains to the clinical level, subject-level classification of AD and NC was investigated. In the clinical application, neuroscientists and neuropsychologists tend to validate a trained machine learningbased model, which is capable of classifying a given subject's imaging data rather than slicelevel recognition, which is in the interest of machine learning specialists. In order to perform subject-level classification, the rs-fMRI and four categories of structural MRI preprocessed data were considered. In this experiment, the training and testing subject-level samples were randomly selected by shuffling subjects five times, as shown in Table 1 . Next, 75% and 25% of subjects were assigned to the training and testing datasets, respectively. As mentioned previously, none of the training and testing samples came from the subjects.\nThen, the adopted LeNet model and GoogleNet were adjusted for 30 epochs using Stochastic Gradient Descent with gamma = 0.1, momentum = 0.9, base learning rate = 0.01, weight decay = 0.0005, and a step learning rate policy. Table 4 demonstrates the results for the five categories and five cross-validations, including one rs-fMRI and four structural MRIs. Although the accuracy rates decreased slightly in certain cases as expected, those rates were still very high and better than any accuracy rates reported in the literature, which demonstrates the robustness, reproducibility and reliability of the DeepAD pipeline. Unlike the slice-level experiment, the highest accuracy rates belonged this time to the structural MRI samples smoothed by a Gaussian kernel sigma of 3 mm (and sigma = 4) for both the adopted LeNet and GoogleNet, as shown in Figure 12 . This strict validation process also revealed that the implemented pipeline was capable of extracting the pattern and distinguishing AD from NC brains among uniformly correlated or semi-correlated samples that had been preprocessed and normalized. On the other hand, as the variety of samples used in the training was less than in the previous method, a slight drop in accuracy rate was expected. In real-world applications of machine learning, the validation process should be as strict as possible, but training the classifier by using a wide range of data is a must. Otherwise, the trained model will be unable to make generalizations. "}, {"section_title": "ROC Curve", "text": "The receiver operating characteristic (ROC) curves were illustrated to validate the performance of the Next, for each category of classification, the TPR and TNR rates were averaged for visualization purposes. As shown in Figure 13 and Figure 14 , the performance of classifiers inclined toward the ideal classification and diagnostic performance, and was beyond the random guess. "}, {"section_title": "Decision making: Majority rule", "text": "A decision-maker algorithm is a means for discovering the best choice among a list of alternatives based on the preferred single criterion or multi-criteria and values. In a majority rulebased system, a binary decision is made by voting for the class or group that has the highest number of candidates. A decision-making algorithm was developed to classify and assign a given subject to the Alzheimer's or normal control group by voting for the majority based on the assumption that a given subject with more AD slices is potentially AD while one with more NC slices is probably NC. In each subject, the number of slices for each class was calculated. Then, the number of slices for each class within a subject was compared, and the class with most slices was presented as the candidate. In the case of two classes having identical probability, which did not occur in the actual experiment, the decision maker would recommend a decision based on the clinical tests and measures. This algorithm enabled the entire pipeline, especially the subjectlevel pipeline, to produce a highly accurate prediction while also compensating for the slight loss during training and validation. The details of the decision making algorithm are as follows:\nStep 1: Calculate the number of AD or NC slices in a given class where i is slice number. Step 4: Vote for the majority and assign the label of 'majority group' to the given subject.\nAssign Flag to the given subject\nThe decision-maker algorithm was applied to all adopted LeNet models for both rs-fMRI and structural MRI. The final results shown in Table 5 indicate a significant improvement in the accuracy rate of subject-level recognition. Most of the subject-level accuracies reached a rate of 100% after the decision making algorithm was applied. In other words, the post-classification method fully stabilized the very well trained deep learning mode by correcting a very small number of slices. Figure 15 showed the effect of the decision-making algorithm on subject-level LeNet trained models. Figure 15 : The accuracy of five categories of adopted LeNet-based models for five repetitions as well as the adopted GoogleNet-trained networks were extracted from Table 3 and visualized in the figure on the left. After applying the decision-making algorithm, the accuracy for each experience was calculated and the results were extracted from Table 4 and visualized (right-hand figure). As shown above, the decision maker significantly improved the performance and resulted in perfect classification in most cases of the subject-level validation experiment.\nIn future works, however, it may be feasible to develop a statistical model to score a given subject by defining the probabilities extent to which each subject belongs to each class based on the current trained model."}, {"section_title": "Conclusion", "text": "We presented two robust pipelines using extensive preprocessing modules and deep learning-based classifiers of MRI and fMRI data to distinguish brains affected by Alzheimer's disease from normal healthy brains in older adults. Scale-and shift-invariant low-to high-level features were extracted from a massive volume of whole brain data using convolutional neural network architecture, resulting in a highly accurate and reproducible predictive model. In this study, the achieved accuracy rates for both MRI and fMRI modalities, as well as LeNet and GoogleNet state-of-the-art architecture, proved superior to all previous methods employed methods in the literature. Furthermore, fMRI data were used to train a deep learning-based pipeline for the first time. This successful and cutting-edge deep learning-based framework has implications for numerous applications in classifying brain disorders in both clinical trials and large-scale research studies. This study also demonstrated that the developed pipelines served as fruitful algorithms in characterizing multimodal MRI biomarkers. Lastly, the subject-level classification designed for clinical purposes enabled us to assess the robustness of the fMRI and MRI pipelines followed by a decision making algorithm, verifying that they both almost perfectly distinguish Alzheimer's patients from healthy normal brains. In conclusion, the proposed methods demonstrated the potential for predicting stages in the progression of Alzheimer's disease and classifying the effects of aging in the normal brain, which future studies may address."}]