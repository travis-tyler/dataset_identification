[{"section_title": "", "text": "The AP Computer Science courses and exams represent the only broadly adopted computer science framework or curriculum in the U.S. (Nager & Atkinson, 2016) , which are currently being offered in 5,300 schools nationwide (College Board, 2018f) . There are currently 38 AP courses across seven subject areas, each culminating with an exam that is scored by experienced AP teachers and college faculty. The AP course expectations and exams are managed by the College Board, a nonprofit organization focused on college readiness and success (College Board, 2018g) . The College Board does not mandate any specific curriculum, but rather outlines objectives and expectations and allows schools to develop or adopt curricula that meet or exceed these expectations. Courses must successfully navigate an AP course audit before being authorized as an AP course (College Board, 2018b) . The AP Computer Science exam was first administered in 1984. Figure 1 provides a timeline of the AP Computer Science offerings from the program's inception to the present time (College Board, 2018f; Nager & Atkinson, 2016) . The AP Computer Science Exam began in 1984 as an assessment of content based on the Pascal programming language, which is an efficient language used mainly to teach programming techniques and concepts. In 1988, students began to have two options: (a) the Computer Science A exam, which was a subsection of the original AB exam, or (b) the Computer Science AB exam, which addressed more in-depth content around data structures and algorithms. Both exams utilized the C++ programming language from [2000] [2001] [2002] [2003] , but in 2004 they switched to Java. The use of these high level, Object-Oriented Programming (OOP) languages has presented a challenge due to their steep learning curves and the limited time available in the context of a high school course. This challenge has been compounded in years past by the fact that many students would begin the courses having had no prior experience with any programming language.\nIn 2009, the two AP Computer Science exam options were reduced to one as the more indepth Computer Science AB course was discontinued due to low participation rates relative to the other AP course offerings. This left the Computer Science A course (a subsection of AB) as the only AP program option for students interested in a college-level programming course. Some critics had suggested that the Computer Science A course was too narrow in its scope given the breadth of the computer science field (S. P. Jones, 2011) . In 2016, after years of development in collaboration with the National Science Foundation, the College Board launched a new computer science course and exam, with a broader scope, titled Computer Science Principles. The AP exam for this new course was administered for the first time in 2017. By 2018, participation in the AP exam for this new course had surpassed that of the Computer Science A exam and produced some encouraging results in terms of participation rates of previously underrepresented groups (Boyle, 2018) .\nThe newer Computer Science Principles course was designed to attract students who don't have prior computer experience and who don't necessarily have any interest in pursuing computer science as a career (C. Jones, 2017) . In other words, it is a course more accessible to students with little or no prior computer science curricular exposure and no interest (as yet) in committing to computer science in the future. Although the broad focus of the new Computer Science Principles course is a positive development in terms of exposing more students to the variety of ways that computer science influences human interactions with technology, its generalist approach dilutes the level of focus on an area that was already quite limited in scope and application in the traditional Computer Science A course -programming. Students are encouraged to study computer science in schools, in part, based on an anticipated high growth rate and high wages associated with the field. According to the U.S. Bureau of Labor Statistics, there were over 1.25 million software developers in the U.S. in 2016, and they earned a median salary of just over $103,000 in 2017. The job outlook for software developers is bright due to a much higher than average 10-year expected growth rate of 24%, usually requiring \"a bachelor's degree in computer science and strong computer programming skills\" (Bureau of Labor Statistics, 2018). The conundrum in the above set of facts is that software developers, as the creative minds behind the design of computer programs, need these strong programming skills at a time when more AP students are opting for a course with less emphasis on programming. With the high industry demand for new computer programs and a U.S. education system that is graduating too few students in STEM fields to keep up with demand (Muro, Kulkarni, & Hart, 2016) , the movement away from more specialized instruction deserves closer attention."}, {"section_title": "The Broadening of Participation", "text": "The Computer Science Principles curriculum was developed with the intent to broaden participation in computer science (College Board, 2017b , which has the potential to open the doors for more students to an industry with high need. The increased demand for skilled technology workers has led to a steady stream of temporary guest workers coming to the U.S. from other countries to fill high-skill Information and Communication Technology (ICT) jobs. In recent years, the annual cap for H-1B work visas has been reached within one week of the petition acceptance start date, demonstrating that importing temporary talent is at best an insufficient stopgap measure to meet the nation's continued demand for highly skilled technology workers (Nager & Atkinson, 2016; U.S. Citizenship and Immigration Services, 2018) . Meanwhile, large segments of potential home-grown talent are not being tapped as females, Latinos, and African Americans continue to be underrepresented in all segments of the ICT pipeline. Underrepresented students have not found their way to success in computer science courses and/or subsequent AP exams in numbers proportional to their respective populations.\nCollege Board statistics reveal significant underrepresentation on the Computer Science AP exams as females only represent 22% of test takers (Code.org, 2018a) . African American students have consistently been the most underrepresented group, comprising just 5.1% of test takers in 2017 and only 2.9% of those scoring 3 or higher. Likewise, Latinos comprised 14.8% of total 2017 test takers and just 11% of students scoring a passing grade of 3 or higher (College Board, 2018a) . Early returns on the new Computer Science Principles exam have been promising, showing increased participation overall, as well as for females and underrepresented minority students. The record levels of participation by previously underrepresented groups have been lauded as a changing of the face of computer science, and a balancing of student opportunities (Code.org, 2018b) .\nA second, more accessible AP computer science option is a positive development insofar as the new option provides the same opportunities for future success in the STEM fields as that experienced by students in the traditional course. Conversely, if the new and accessible option results in substantively less prepared students, then the increased participation may disguise a two-tiered system of preparation that can have deleterious effects on the long-term educational and professional outcomes of participating students. Computer Science A and Computer Science Principles are both purported to be equivalent to college-level introductory or first-semester computer science courses (College Board, 2014 , 2017a . The College Board does note that the Computer Science A course focuses on Java programming and the Computer Science Principles course focuses on computing fundamentals, and further states that the two courses can be taken concurrently or in any order. The decision to offer either course, as well as whether to sequence them, is left up to the schools and districts (College Board, 2018c) . Both courses provide collegelevel credit accepted at over 500 colleges and universities (College Board, 2018d) , a number that continues to increase. Although the impact on students' college portfolios and college credit accumulation may appear to be equivalent, structural differences between the two courses suggest that they provide substantively different levels of preparation (Havard & Howard, 2019) .\nThe historical foundation and structure of the new Computer Science Principles course and exam suggest vastly different levels of depth and exposure in some important facets of computer science, which may affect the level of academic benefit to students at schools that select it over the traditional course, particularly if it is chosen as their only AP computer science option. Notable differences for the new course include an emphasis on \"big ideas\" related to computer science rather than a specific focus on programming, as well as a markedly different assessment structure for the new exam. The exam assessment structure differences include attributing 40% of the exam score to assignments completed over several days in the classroom prior to the test date, as compared to the traditional course exam which is completed in a single proctored exam sitting (see Havard & Howard, 2019 for an in-depth contrast of the two courses and exams). Increased female and minority student participation may position the new Computer Science Principles course as a potential solution to historical underrepresentation in STEM fields. However, if the increased participation is in a course that is less rigorous, or less impactful in terms of students' subsequent academic and professional success, then it has the potential to replicate the gap in computer science readiness that prior limited participation has produced. Thus, the purpose of this research is to examine two research questions: 1) How do patterns of participation and performance differ on the two AP Computer Science exams for underrepresented students?\n2) What is the relationship between programming-centered course taking and future STEM education and interest?"}, {"section_title": "General Method", "text": ""}, {"section_title": "Overview", "text": "In the studies reported here, data were used from two different sources: (a) National (U.S.) College Board AP computer science participation and performance results for 2017 and 2018, and (b) National Center for Education Statistics High School Longitudinal Study data collected from 2009-2017. Study 1 compares performance results for the two AP Computer Science exams, whereas Study 2 examines the relationship between computer science course enrollment and STEM major selection following high school graduation."}, {"section_title": "Procedure", "text": "All statistical analyses were conducted on public-use datasets. For Study 1, Chi-square analyses were performed on College Board AP data using SPSS version 24 and are reported along with descriptive and effect size statistics. Study 2 was conducted using data from multiple waves of a nationally representative high school longitudinal study conducted by the U.S. Department of Education and was analyzed using logistic regression with complex survey dataset procedures in Stata version 15.\nUtilizing the 2017 and 2018 national student AP score data for the Computer Science A and Computer Science Principles exams, Pearson's chi-square tests for independence were conducted on the score distributions for the two exams for each year to discern performance differences that may have resulted from the differential assessment structures of the two AP programs. Cramer's V statistics were computed to assess the effect sizes of the observed differences while removing the influence of sample size on statistical significance.\nThe HSLS:09 uses a complex sampling design, which necessitates the use of sample weights and adjusted standard errors to ensure that estimates made from the data are representative of the population, and that hypothesis tests are accurate. The standard error calculation procedure used in these analyses is the Balanced Repeated Replication (BRR) method, conducted in Stata 15, utilizing the main sampling weight and its associated set of 200 replicate weights appropriate for each of the analyses. Logistic regression procedures were conducted to examine the influence of enrollment in various major science courses in the spring of the cohort's 11 th grade year (2012) on students' initially declared or decided-upon major.\nIn an effort to build a parsimonious multi-variable regression model, we employed a purposeful selection approach (Hosmer, Lemeshow, & Sturdivant, 2013) to minimize the number of variables in the model and provide a more numerically stable model. The first step in this process was to screen from among the possible variables of interest in the dataset by conducting a univariate analysis of each predictor in relation to the dependent variable, which in this case was the HSLS:09 dataset variable \"X4RFDGMJSTEM\" indicating whether students selected a STEM major as their first major after graduating. Respondents included students who had at any point enrolled in an undergraduate or certificate program during the three years after high school. We used the p-value cutoff of 0.25 as recommended by Hosmer et al. to eliminate predictors of questionable value and to avoid overfitting the model. Table 1 identifies the 11 course-taking variables that were considered and screened for possible inclusion in the initial regression model. Four of the 11 variables considered had p-values above the inclusion criteria and were removed from the initial model. Table 2 identifies demographic independent variables also included in the analyses due to their known clinical importance to the study. Also included are descriptions of the dependent variable and the weighting variables used for the BRR analyses conducted on the complex survey data. Tolerance and Variable Inflation Factor (VIF) statistics were calculated for the 11 variables (7 course, 4 demographic) remaining in the model and all were well within acceptable criteria, indicating that multicollinearity is not an issue for the regression analysis. "}, {"section_title": "Data Analysis", "text": "In Study 1, the AP exam score distributions of AP Computer Science Principles over its first two years of implementation were compared to the score distributions for the traditional, programming-centered AP Computer Science A course using chi-square analyses. In Study 2, a set of 11 science courses (including computer science) were examined through regression analyses for their potential impact on students' selection of STEM majors during the three years following their scheduled high school graduation date."}, {"section_title": "Study 1 Method", "text": "The data for Study 1 were obtained from the U.S. national results datasets made publicly available by The College Board, addressing the 2017 and 2018 AP computer science exam results (College Board, 2018a . These data indicate that there were 56,088 Computer Science A exams administered and scored across 5040 schools nationally in 2017, as compared to 43,780 Computer Science Principles exams across 2,625 schools. In 2018, 60,040 Computer Science A exams were administered and scored across 5,300 schools, compared to 70,864 Computer Science Principles exams across 4,022 schools. In 2018, the Computer Science Principles course was the second fastest growing AP course among the College Board's 38 AP course offerings."}, {"section_title": "Descriptive Data", "text": "Although the Computer Science A course has not garnered the same levels of participation as many of the other staple AP courses, it has shown steady growth in numbers over In addition to increased overall participation in AP Computer Science, the new course resulted in higher participation by female and underrepresented minority students as well. Figure 3 illustrates the proportion of participation, by race, for the courses. Of the students who participated in the exams during the two years since the new course launched, Black students opted for the Computer Science Principles exam almost twice as often (64.8%) as they took the Computer Science A exam (35.2%). Likewise, Hispanic/Latino students selected the Computer Science Principles exam in a far greater proportion (62.3%) than they did the Computer Science A exam (37.7%). Although not as pronounced, the same pattern was observed for females in that participation was greater on the Computer Science Principles exam, whereas males participated more on the Computer Science A exam (see Figure 4) . Notably, the two demographics that historically experienced the highest levels of participation in AP Computer Science exams (White and Asian students) continued to take the traditional Computer Science A exam in larger proportions than those who opted for the new Computer Science Principles exam. Students from all demographics posted higher average scores and pass rates nationwide for the new exam as compared to the traditional Computer Science A exam. Over 2017 and 2018, pass rates (scoring 3 or higher) for the Computer Science Principles exam were higher than those for the Computer Science A exam for Blacks (40.9% vs. 36.5%), Hispanics (55.1% vs. 46.0%) and females (69.2% vs. 64.4%), indicating that not only were these previously underrepresented groups taking the new exam in higher proportions, but were performing better on it compared to the traditional exam (College Board, 2018f) ."}, {"section_title": "Measures", "text": "AP exams are scored on a scale of 1-5, with 5 representing the highest possible score. A score of 5 is equivalent to the average score among college students earning a grade of A in the comparable college course, a score of 4 is equivalent to a grade from A-to B, and a score of 3 is equivalent to a grade of B-to C. The range of AP scores is aligned with the following recommendations: 5 = extremely well qualified, 4 = well qualified, 3 = qualified, 2 = possibly qualified, 1 = no recommendation (College Board, 2018f) .\nDependent variable. The second follow-up data collection of the HSLS:09 cohort was conducted between March 14, 2016, through January 31, 2017, which was approximately three years after the scheduled graduation date for the cohort. Students were asked to identify their first undergraduate degree/certificate major of study in any program they ever enrolled in following high school. Their responses were classified according to the U.S. Department of Education's Classification of Instructional Programs and then classified/coded as a dichotomous variable (Study variable X4RFDGMJSTEM = 1 for STEM, 0 for Not STEM).\nIndependent variables. Demographic variables included dichotomous race (Black = 1 and Hispanic = 1), sex (Female = 1), and poverty (at or above poverty line = 1) variables. In addition, seven science and computer science courses taken during the spring semester of 11 th grade for the cohort, as the cohort's students were approaching college application and selection of major decisions, were included. These dichotomous course variables (taking course = 1, not taking = 0) were examined for their potential influence on the majors that students first selected after graduating."}, {"section_title": "Results", "text": "There was a significant difference in the 2017 distributions for the two exams, \u03c7 2 (4, n = 99,868) = 7,813.72, p < .001, Cramer's V = .28. Likewise, there was a significant difference in the 2018 distributions for the two exams, \u03c7 2 (4, n = 130,904) = 8,440.96, p < .001, Cramer's V = .25. The Cramer's V effect size statistics for both years indicate large effect sizes for analyses with four degrees of freedom (Cohen, 1988) . Discussion The large differences in the performance distribution on the two AP Computer Science exams are highlighted by greater proportions of Computer Science Principles scores just at the passing threshold (3) and lower proportions at the extremely well-qualified score (5) than on the traditional Computer Science A exam. The stark differences in the assessment structures, particularly the assignment of 40% of the Computer Science Principles score to in-class assignments completed over several days, may be a factor in significantly more students finding their way to the marginal success threshold, which is equivalent to a grade of B-to C. The \nThe full logistic regression main effects model was statistically significant F(11, 189) = 11.13, p < .001. A Hosmer-Lemeshow goodness of fit test supported the overall model F(9, 191) = 0.47, p = .89. Table 3 displays the odds ratios and p-values for each of the retained course and demographic predictors of STEM major selection. Of all the course predictors examined, only Computer Programing and AP Computer Science significantly predicted the selection of a STEM major after high school. Students enrolled in any programming course were almost two and a half times as likely to declare a STEM major than students not enrolled in programming. Students enrolled in the programming-centric AP Computer Science A course (the only AP computer science course offered when the data were collected) were 5 times as likely to declare a STEM major than those not enrolled. Sex was the only demographic that significantly predicted the selection of a STEM major as females were 61% less likely (.39 odds ratio) to decide on a STEM emphasis in post-secondary education than males. Race and poverty status were not significant predictors of major selection, and there were no interaction effects among the course and demographic predictors. "}, {"section_title": "AP Exam Score Distributions", "text": "Computer Science A Computer Science Principles smaller numbers of students scoring at the lowest levels suggest that the different assessment structure benefits struggling students the most, whereas fewer top-level scores indicate that fewer participants are reaching top-level mastery of the content."}, {"section_title": "Study 2 Participants", "text": "The data for Study 2 were drawn from multiple waves of the High School Longitudinal Study of 2009 (HSLS:09) public-use file. The HSLS:09 is a nationally representative, longitudinal study comprised of over 21,000 students from 944 public, private, and charter schools across the United States. The base-year data were collected in 2009 when the cohort was in 9 th grade, which was the same year the AP Computer Science AB course was discontinued, leaving only the Computer Science A option for AP computer science. Subsequent waves of data collection have occurred in 2012, 2013-14, and 2016-17 . The study's cohort will continue to be followed throughout their postsecondary years. HSLS:09 focuses on understanding students' trajectories from the beginning of high school into postsecondary education, the workforce, and beyond (Ingels & Dalton, 2013) . A final follow-up data collection will be conducted with the same cohort in 2025. In addition to predictors from the base year , data from the first follow-up in (2011-12) and the second follow-up in 2016-17 (released July 2018) were examined in this study to assess their influence on students' first declared major upon entering postsecondary education. Of particular interest were the possible relationships between the science courses taken high school (including computer science) and the selection of STEM majors."}, {"section_title": "Summary and Concluding Discussion", "text": "Study 1 addressed our first research question (how do patterns of participation and performance differ on the two AP Computer Science exams for underrepresented students?), revealing significant differences. Over its first two years of implementation, previously underrepresented groups attempted the new exam in greater numbers than they attempted the traditional exam. The performance distributions were significantly different as well in that scores clustered heavily around the marginal pass rate (score of 3) on the new exam, but were more evenly distributed amongst the full range of score values for the traditional exam. As for our second research question (what is the relationship between programming-centered course taking and future STEM education and interest?), Study 2 results indicate that programming-centric courses greatly improve the odds of a student selecting a STEM major in post-secondary education. This was particularly the case for the Computer Science A course as its enrollees were five times as likely to declare a STEM major as compared to students who did not enroll in the course. Other traditional science courses such as physics, biology, chemistry, physical science, and earth science were not significant predictors of STEM major selection.\nThe emphasis in recent years on improving the preparation of U.S. students to meet the challenges of STEM careers has led to increased scrutiny of curriculum offerings in STEMrelated coursework. Curricular changes have occurred to address the shortage of, and underrepresentation in, high school AP level computer science courses. The release and implementation of the AP Computer Science Principles course has been met with unprecedented increases in participation in AP computer science coursework, particularly among African American, Hispanic, and female students. Within these underrepresented groups, larger proportions of students have been enrolling in the new Computer Science Principles course, which places less emphasis on actual computer programming than its traditional counterpart and more emphasis on a set of generalized \"big ideas\" related to the computer science field. The fundamentally different course emphases appear to have formed a two-tiered system of AP computer science preparation, one to provide a general computational thinking foundation for students who have no intention of pursuing a computer science career, and a second for those who may be particularly interested in such a career.\nThe distribution of the Computer Science Principles exam scores suggests that large numbers of students may have been helped across the finish line (passing =3) by the hybrid assessment structure, while fewer mastered the content at its highest levels. The fact that these patterns are similar across demographics suggests that they were the result of the structural differences between the assessments rather than attributable to the presence of more culturally relevant pedagogical approaches. Examination of HSLS data clearly illustrates the significant predictive strength of enrollment in programming courses on the selection of STEM majors in postsecondary education, particularly for those enrolled in the programming-centric Computer Science A course. Our results indicate that enrollment in computer science in the form of computer programming courses (as compared to other science-related courses) is the strongest predictor of students' selection of STEM fields as their first declared major in higher education. Given the influence programming courses appear to have on STEM major decisions, coupled with the increased demand for technology STEM professionals, one might logically expect that the bar would be raised, not lowered, with respect to an emphasis on computer programming in secondary schools. At a time when the numbers of STEM graduates in the U.S. is being dwarfed by the numbers being produced abroad, such a shift is both confusing and counterintuitive.\nIn recent years, students have been learning to code as early as in elementary school in preparation for the changing world of technology. By the time they reach high school, they are arguably far more prepared than previous cohorts to engage in higher-level programming activities. Providing an alternative like Computer Science Principles, which allows the use of the same tools that are used with elementary grades, may result in more students adding AP course titles to their high school transcripts, but its value to those wanting to pursue the computer science field as a major is questionable. The College Board's AP programs have been quite successful in fulfilling their mission of connecting students with college opportunities, as evidenced by the impact of their Computer Science A course's prediction of college major. Only time will tell what level of success Computer Science Principles will have in influencing college success given its short history thus far, but our analyses suggest that the two courses were not created equal. Clearly, participation alone does not ensure equity, particularly if such participation is substantively less rigorous for some groups than for others. Longitudinal data demonstrated the significant influence of programming coursework on continued STEM interest in higher education. Thus, the observed higher participation of underrepresented groups in a course with reduced emphasis on programming is of considerable concern for those seeking equity in computer science preparation."}]